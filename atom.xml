<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jony&#39;s blog</title>
  
  <subtitle>记录每一次成长</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-26T00:13:42.724Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jony</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小程序发布及上线</title>
    <link href="http://yoursite.com/2020/02/23/wx/wx-bushu/"/>
    <id>http://yoursite.com/2020/02/23/wx/wx-bushu/</id>
    <published>2020-02-23T15:34:26.000Z</published>
    <updated>2020-03-26T00:13:42.724Z</updated>
    
    <content type="html"><![CDATA[<h1>发布前准备</h1><p>小程序发布之前，开发者首先需要在自己的移动终端上预览确保没有任何的问 题，当确认无误时，上传代码到小程序的管理后台，并设置版本，具体操作:</p><h2 id="预览">预览</h2><p>点击开发者工具顶部操作栏的预览按钮，开发者工具会自动打包当前项目，并 上传小程序代码至微信的服务器，成功之后会在界面上显示一个二维码。使用当前 小程序开发者的微信扫码即可看到小程序在手机客户端上的真实表现。</p><h2 id="上传代码">上传代码</h2><p>点击开发者工具顶部操作栏的上传按钮，填写版本号以及项目备注，需要注意 的是，这里版本号以及项目备注是为了方便管理员检查版本使用的，开发者可以根 据自己的实际要求来填写这两个字段。<br>上传成功之后，登录小程序管理后台 - 开发管理 - 开发版本 就可以找到刚提 交上传的版本了。</p><h2 id="可以将这个版本设置“体验版”-或者“提交审核”。">可以将这个版本设置“体验版” 或者“提交审核”。</h2><blockquote><p>小程序版本</p></blockquote><table><thead><tr><th>版   本</th><th>说明</th></tr></thead><tbody><tr><td>开发版本</td><td>使用开发者工具，可将代码上传到开发版本中。开发版本只保留每人最新的一份上传的代码。点击提交审核，可将代码提交审核。开发版本可删除，不 影响线上版本和审核中版本的代码。</td></tr><tr><td>审核中版 本</td><td>只能有一份代码处于审核中。有审核结果后可以发布到线上，也可直接重新 提交审核，覆盖原审核版本。</td></tr><tr><td>线上版本</td><td>线上所有用户使用的代码版本，该版本代码在新版本代码发布后被覆盖更新。</td></tr></tbody></table><h1>小程序上线</h1><p>当小程序开发完成时提交审核，等待微信管理员审核通过后，发布后成为线上版本，即完成小程序的发布，开发者可以随时查看运营数据的情况。步骤如下:</p><h2 id="提交审核">提交审核</h2><ol><li>为了保证小程序的质量，以及符合相关的规范，小程序的发布是需要经过审核的。在开发者工具中上传了小程序代码之后，登录小程序管理后台- 开发管理 - 开发版本，找到提交上传的版本。</li><li>在开发版本的列表中，点击提交审核，按照页面提示，填写相关的信息，即可 以将小程序提交审核。</li><li>需要注意的是，开发者需要严格测试了版本之后，再提交审核，过多的审核不通过，可能会影响后续的时间。<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/gZF00R.png" alt="gZF00R"></li></ol><h2 id="发布">发布</h2><p>审核通过之后，管理员的微信中会收到小程序通过审核的通知，此时登录小程序管理后台- 开发管理 -审核版本中可以看到通过审核的版本。 选择点击发布，即可发布小程序。</p><center><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/gh_0785db6f1e67_344.jpg"></img></center>  <center><h1>通过扫码查看作者最新发布的小程序。</h1></center>  ]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;发布前准备&lt;/h1&gt;
&lt;p&gt;小程序发布之前，开发者首先需要在自己的移动终端上预览确保没有任何的问 题，当确认无误时，上传代码到小程序的管理后台，并设置版本，具体操作:&lt;/p&gt;
&lt;h2 id=&quot;预览&quot;&gt;预览&lt;/h2&gt;
&lt;p&gt;点击开发者工具顶部操作栏的预览按钮，开发者工具会自
      
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="小程序发布流程" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E5%B8%83%E6%B5%81%E7%A8%8B/"/>
    
      <category term="实践总结" scheme="http://yoursite.com/tags/%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发-注册</title>
    <link href="http://yoursite.com/2020/02/13/wx/wx-zhuce/"/>
    <id>http://yoursite.com/2020/02/13/wx/wx-zhuce/</id>
    <published>2020-02-13T07:34:13.000Z</published>
    <updated>2020-03-26T00:12:38.593Z</updated>
    
    <content type="html"><![CDATA[<h1>微信官方 UI 库 WeUI库的使用</h1><p>WeUI 是一套同微信原生视觉体验一致的基础样式库，由微信官方设计团队为 微信内网页和微信小程序量身设计，令用户的使用感知更加统一。包含 button、cell、 dialog、 progress、 toast、article、actionsheet、icon 等各式元素。WeUI 基础样式 库下载地址:<br><a href="https://github.com/Tencent/weui-wxss" target="_blank" rel="noopener">github-小程序WeUI样式库</a><br>开发者可以将样式库下载并使 用微信 web 开发者工具打开 dist 目录(请注意，是 dist 目录，不是整个项目)，导 入 dist 目录后，可以预览样式库<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/z4iw2i.png" alt="z4iw2i"><br>可以在样式库里选择自己所需要的样式，然后直接将需要的样式的wxml复制黏贴至自己的项目中，然后将 WeUI 中 style 文件拷贝至自己的项目目录中.<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/KfAjHn.png" alt="KfAjHn"><br>将 style 文件夹拷贝至自己开发的项目后，还需要在 app.wxss 文件中使用 @import 导入 weui 的样式，如图 3–20 所示。到这里，就可以正常使用 WeUI 库中 微信的官方样式了。</p><h1>bindchange事件</h1><p>bindchange 事件与 bindtap 事件不同，它主要是当输入框中的内容发生改变时，<br>触发对应的事件处理函数，并且输入框中的值可以通过 event.detail.value 来获取<br>wxml 文件代码:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-cells weui-cells_after-title"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-cell weui-cell_input"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-cell__hd"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-label"</span>&gt;</span>qq<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>89<br> <br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-cell__bd"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-input"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入 qq"</span> <span class="hljs-attr">bindchange</span>=<span class="hljs-string">"changevalue"</span>/&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><p>js 文件代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">Page(&#123;<br>  data: &#123;<br>qq:<span class="hljs-number">0</span> &#125;,<br>changevalue:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>)</span>&#123; <span class="hljs-built_in">console</span>.log(event) <span class="hljs-keyword">this</span>.setData(&#123;<br>qq: event.detail.value &#125;)<br>&#125;, &#125;)<br></code></pre></td></tr></table></figure><p>嗅券实现的js关键代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs js">bindSubmit: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> that = <span class="hljs-keyword">this</span><br>    wx.request(&#123;<br>      url: userUrl+<span class="hljs-string">'register_by_openid'</span>,<br>      data: &#123;<br>        openid: wx.getStorageSync(<span class="hljs-string">'showquan_OPENID'</span>),<br>        globalData: <span class="hljs-built_in">JSON</span>.stringify(app.globalData.userInfo),<br>        name: <span class="hljs-keyword">this</span>.data.name,<br>        tel: <span class="hljs-keyword">this</span>.data.tel,<br>        email: <span class="hljs-keyword">this</span>.data.email,<br>        school: <span class="hljs-keyword">this</span>.data.school,<br>        birthday: <span class="hljs-keyword">this</span>.data.year,<br>        address: <span class="hljs-keyword">this</span>.data.address,<span class="hljs-comment">//地址</span><br>      &#125;,<br>      success: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"12333res"</span>,res)<br>        <span class="hljs-keyword">if</span> (res.data.is_register) &#123;<br>          wx.request(&#123;<br>            url: userUrl + <span class="hljs-string">'getInfo'</span>,<br>            data: &#123;<br>              <span class="hljs-string">'openid'</span>: wx.getStorageSync(<span class="hljs-string">'showquan_OPENID'</span>),<br>            &#125;,<br>            success: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res1</span>) </span>&#123;<br>              wx.setStorageSync(<span class="hljs-string">'userinfo'</span>, res1.data.data)<br>            &#125;,<br>          &#125;)<br>          wx.switchTab(&#123;<br>            url: <span class="hljs-string">'../index/index'</span>,<br>          &#125;)<br>        &#125;<br>      &#125;,<br>      fail: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;&#125;,<span class="hljs-comment">//如果调用错误，这里暂时不定义</span><br>    &#125;)<br>  &#125;,<br></code></pre></td></tr></table></figure><p>还涉及到了一个微信位置API接口的调用，主要是获取用户所在位置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.chooseLocation</span>(&#123;<br>      <span class="hljs-attribute">type</span>: <span class="hljs-string">"gcj02"</span>,<br>      success: (res) =&gt; &#123;<br>        console.<span class="hljs-built_in">log</span>(<span class="hljs-string">'地址'</span>,res)<br>        this.<span class="hljs-built_in">setData</span>(&#123;<br>          choosen:res,<br>          address: res.address+res.name,<br>        &#125;)<br>      &#125;,<br>    &#125;)<br></code></pre></td></tr></table></figure><p>最终实现效果：<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/Y6bmxF.png" alt="Y6bmxF"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;微信官方 UI 库 WeUI库的使用&lt;/h1&gt;
&lt;p&gt;WeUI 是一套同微信原生视觉体验一致的基础样式库，由微信官方设计团队为 微信内网页和微信小程序量身设计，令用户的使用感知更加统一。包含 button、cell、 dialog、 progress、 toast、art
      
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发-登录</title>
    <link href="http://yoursite.com/2020/01/22/wx/wx-denglu/"/>
    <id>http://yoursite.com/2020/01/22/wx/wx-denglu/</id>
    <published>2020-01-22T15:34:26.000Z</published>
    <updated>2020-03-26T00:16:48.993Z</updated>
    
    <content type="html"><![CDATA[<h1>授权页面</h1><h2 id="小程序登录">小程序登录</h2><p>小程序可以通过微信官方提供的登录能力方便地获取微信提供的用户身份标<br>识，快速建立小程序内的用户体系。如图所示，小程序通过wx.login()获取code， 然后通过*wx.request()*发送 code 至开发者服务器，开发者服务器将登录凭证 <strong>appid、 appsecret</strong>与<strong>code</strong>用于校验微信接口，微信接口服务向开发者服务器返回用户唯一 标识 <strong>OpenID</strong>和会话密钥session—key。开发者服务器实现自定义登录状态与 openid 与 session_key关联，并向小程序返回自定义状态。小程序将自定义登录状态 存入 storage，并用于后续 wx.request 发起业务请求。<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/urFvwF.png" alt="urFvwF"><br>对于某个微信小程序，每个用户访问该小程序都有产生一个唯一的 openid，这 个 openid 为用户访问该小程序的标识符，即每个用户的 openid 都是不一样的。因 此，可以把 **openid **作为用户唯一标识符(类似身份证号)，并存于数据库中用以后续操作。</p><h2 id="wx-login">wx.login()</h2><p>调用wx.login()接口获取登录凭证(code),通过凭证进而换取用户登录态信息,其中wx.login( )接口</p><table><thead><tr><th>属性</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>timeout</td><td>number</td><td>否</td><td>超时时间，单位 ms</td></tr><tr><td>success</td><td>function</td><td>否</td><td>接口调用成功的回调函数</td></tr><tr><td>fail</td><td>function</td><td>否</td><td>接口调用失败的回调函数</td></tr><tr><td>complete</td><td>function</td><td>否</td><td>接口调用结束的回调函数(调用成功失败都会执行)</td></tr></tbody></table><p>由于 app.js 会先于其他页面执行，所以比较适合处理一些注册函数，因此将 wx.login( )方法写在 app.js 文件中。</p><h2 id="wx-request">wx.request()</h2><h3 id="这个函数很重要，一定要很熟练">!!!这个函数很重要，一定要很熟练</h3><p>wx.request( )主要用于发送 https 网络请求,一些基本属性表<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/kpFd4f.png" alt="kpFd4f"><br>在实际应用中，最常用的还是<em><strong>URL</strong></em>和<em><strong>data</strong></em>，这两项作为向后台发送数据请求的链接地址和传送的参数，重要程度可见一斑，后台接收数据的方式一般为GET方法。</p><p>success回调函数也很重要，通过判断是否调用成功，来做相应的动作，比如回掉成功之后为data赋值：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">wx.request(&#123;<br>  url: userUrl + <span class="hljs-string">'getInfo'</span>,<br>  data: &#123;<br>    <span class="hljs-string">'openid'</span>: res.data.openid,<br>  &#125;,<br>  success: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res1</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"用户信息app.js"</span>, res1)<br>    wx.setStorageSync(<span class="hljs-string">'userinfo'</span>, res1.data.data)<br>  &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><p>上面这段代码，掩饰了用wx.request函数，通过调用API接口，向后台传入参数’openid’，来查询用户的用户信息，如果调用成功的话，把获取到的数据赋值给<strong>Storage</strong>。</p><h2 id="数据缓存">数据缓存</h2><p>每个微信小程序都可以有自己的本地缓存，可以通过数据缓存 API 可以对本地<br>缓存进行设置、获取和清理。同一个微信用户，同一个小程序 storage 上限为 10MB。 localStorage 以用户维度隔离，同一台设备上，A 用户无法读取到 B 用户的数据。<br>注意: 如果用户储存空间不足，微信会清空最近最久未使用的小程序的本地缓 存。因此不建议将关键信息全部存在localStorage，以防储存空间不足或用户换设备 的情况。<br>数据缓存 API 主要有 5 类，包括数据的存储、获取、移除、清空，以及获取存 储信息，每类均包含同步与异步两种</p><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>wx.setStorage(Object object)</td><td>数据的存储(异步)</td></tr><tr><td>wx.setStorageSync(string key, any data)</td><td>数据的存储(同步)</td></tr><tr><td>wx.getStorage(Object object)</td><td>数据的获取(异步)</td></tr><tr><td>wx.getStorageSync(string key)</td><td>数据的获取(同步)</td></tr><tr><td>wx.getStorageInfo(Object object)</td><td>存储信息的获取(异步)</td></tr><tr><td>wx.getStorageInfoSync()</td><td>存储信息的获取(同步)</td></tr><tr><td>wx.removeStorage(Object object)</td><td>数据的移除(异步)</td></tr><tr><td>wx.removeStorageSync(string key)</td><td>数据的移除(同步)</td></tr><tr><td>wx.clearStorage(Object object)</td><td>数据的清空(异步)</td></tr><tr><td>wx.clearStorageSync()</td><td>数据的清空(同步)</td></tr></tbody></table><p>表示同步，因此 API 函数中带有Sync后缀的函数为同步函数。</p><h3 id="同步函数与异步函数之间的区别">同步函数与异步函数之间的区别</h3><p>异步不会阻塞当前任务，同步缓存直到同步方法处理完才能继续往下执行。另外异步函数中 含有成功回调函数，可用于表示数据处理成功后的操作。<br>以 wx.setStroage()为例子：<br>通过 wx.request()返回的openid 存储于本地，方便 openid 的获取，使用wx.setStorage()的代码示例如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">wx.setStorageSync(<span class="hljs-string">'OPENID'</span>, res.data.openid)<br></code></pre></td></tr></table></figure><p>如果使用 wx.setStorageSync()进行数据存储，可以对数据存储成功后进行操作，<br>代码较 wx.setStorage()有变化，具体代码如下:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.setStorage</span>(&#123; <span class="hljs-attribute">key</span>: <span class="hljs-string">'test'</span>,<br>data: <span class="hljs-string">'begin'</span>, success:<span class="hljs-built_in">function</span>()&#123;<br>console.<span class="hljs-built_in">log</span>(<span class="hljs-string">'存储成功'</span>) &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="wx-showModal">wx.showModal()</h2><p>小程序使用 wx.showModel(Object object)显示模态对话框<br>基本参数：<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/MUcsiq.png" alt="MUcsiq"><br>例如嗅券小程序，当发现没有用户未注册，则跳转出注册窗口提示用户注册</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> (!res.data.is_register) &#123; wx.showModal(&#123;<br>title: <span class="hljs-string">'提示'</span>,<br>content: <span class="hljs-string">'请先注册'</span>, <span class="hljs-attr">showCancel</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">confirmText</span>: <span class="hljs-string">"确定"</span>, <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) </span>&#123;<br>wx.navigateTo(&#123;<br>url: <span class="hljs-string">'/pages/register/userlogin'</span>, &#125;)<br>&#125; &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;授权页面&lt;/h1&gt;
&lt;h2 id=&quot;小程序登录&quot;&gt;小程序登录&lt;/h2&gt;
&lt;p&gt;小程序可以通过微信官方提供的登录能力方便地获取微信提供的用户身份标&lt;br&gt;
识，快速建立小程序内的用户体系。如图所示，小程序通过wx.login()获取code， 然后通过*wx.request
      
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发-页面跳转</title>
    <link href="http://yoursite.com/2020/01/16/wx/wx-tiaozhuan/"/>
    <id>http://yoursite.com/2020/01/16/wx/wx-tiaozhuan/</id>
    <published>2020-01-16T07:34:13.000Z</published>
    <updated>2020-03-26T00:13:44.952Z</updated>
    
    <content type="html"><![CDATA[<h1>navigator 组件</h1><p>navigator 跳转分为两个状态， 一种是关闭当前页面，一种是不关闭当前页面。<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/8kE3OI.png" alt="8kE3OI"><br>其中 open-type 的合法值<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/soyKFe.png" alt="soyKFe"><br>使用示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">navigator</span> <span class="hljs-attr">url</span>=<span class="hljs-string">"需要跳转的页面"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"样式类"</span> <span class="hljs-attr">hover-class</span>=<span class="hljs-string">"点击后的样式"</span>&gt;</span><br></code></pre></td></tr></table></figure><h1>wx.showToast()</h1><p>wx.showToast( )与 wx.showMaodel( )一样是界面交互中的一种消息提示框，基本属性如下<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/64OMJD.png" alt="64OMJD"></p><p>icon的合法属性如下<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/aRK9pR.png" alt="aRK9pR"><br>在嗅券中，有很多处使用的案例，例如在签到页面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">wx.showToast(&#123;<br>    icon: <span class="hljs-string">'loading'</span>,<span class="hljs-comment">//图标是loading</span><br>    title: sum.data.info,<span class="hljs-comment">//显示后台返回结果中的info信息</span><br>&#125;)<br></code></pre></td></tr></table></figure><h1>配置文件的使用</h1><p>所有的 wx.request()请求，url的网址都有很多共同之处，所以把共同之处作为一个宏进行定义，后面维护起来方便修改与迁移</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// var apiUrl = "http://localhost/show/index.php/Api/"//本地测试地址</span><br><span class="hljs-comment">// var ddApi = "http://localhost/show/pddApi/show/"</span><br><br><span class="hljs-keyword">var</span> apiUrl = <span class="hljs-string">"https://服务器地址/show/index.php/Api/"</span><span class="hljs-comment">//小程序内部接口</span><br><span class="hljs-keyword">var</span> ddApi = <span class="hljs-string">"https://服务器地址/show//pddApi/show/"</span><span class="hljs-comment">//拼多多接口</span><br><br><span class="hljs-keyword">var</span> config = &#123;<br>  apiUrl,<br>  appid,<br>  wxUrl: <span class="hljs-string">`<span class="hljs-subst">$&#123;apiUrl&#125;</span>Weixin/`</span>,<span class="hljs-comment">//注意这里使用的是反斜杠！</span><br>  userUrl: <span class="hljs-string">`<span class="hljs-subst">$&#123;apiUrl&#125;</span>User/`</span>,<br>  signUrl: <span class="hljs-string">`<span class="hljs-subst">$&#123;apiUrl&#125;</span>Sign/`</span>,<br>  pddApi: <span class="hljs-string">`<span class="hljs-subst">$&#123;ddApi&#125;</span>`</span>,<br>&#125;;<br><br><span class="hljs-built_in">module</span>.exports = config<span class="hljs-comment">// 接口暴露，可以在其他文件中用到它</span><br></code></pre></td></tr></table></figure><p>配置文件方便的把一些常用的，或者有共同之处的代码宏定义，当下次使用时直接调用就可以，这就类似于C语言的宏。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;navigator 组件&lt;/h1&gt;
&lt;p&gt;navigator 跳转分为两个状态， 一种是关闭当前页面，一种是不关闭当前页面。&lt;br&gt;
&lt;img src=&quot;http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/8kE3OI.png
      
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>心理测试小程序学习笔记</title>
    <link href="http://yoursite.com/2020/01/06/wx/wx-bushu%206/"/>
    <id>http://yoursite.com/2020/01/06/wx/wx-bushu%206/</id>
    <published>2020-01-06T07:34:13.000Z</published>
    <updated>2020-03-26T00:17:06.430Z</updated>
    
    <content type="html"><![CDATA[<h1>知识点整理</h1><h2 id="bindtap事件绑定">bindtap事件绑定</h2><p>事件是视图层到逻辑层的通讯方式。事件可以将用户的行为反馈到逻辑层进行 处理。事件可以绑定在组件上，当达到触发事件，就会执行逻辑层中对应的事件处 理函数。代码示例如下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--index.wxml--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"begininfo"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">'beginAnswer'</span>&gt;</span> 开始测试 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//index.js</span><br>beginAnswer: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123; wx.navigateTo(&#123;<br>url: <span class="hljs-string">'../test/test'</span> &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>在 index.wxml 文件中，将 bindtap 事件绑定在 button 组件上，其中 bindtap=’beginAnswer’。当测试者单击“开始测试”按钮时，会触发事件，就会执行 index.js 中对应的事件处理函数 beginAnswer，该事件处理函数在触发后，执行页面 跳转，跳转至 test 页面。</p><table><thead><tr><th>事件处理函数</th><th>所处页面</th><th>事件触发结果</th></tr></thead><tbody><tr><td>beginAnswer</td><td>row 1 col 2</td><td>跳转至 test 页面</td></tr><tr><td>answerClickA</td><td>test</td><td>显示下一题，并判断 A 对应的是题库中哪个选择，给对应选项的值+1，满足 index=20 时，跳至 result页面</td></tr><tr><td>answerClickB</td><td>test</td><td>显示下一题，并判断 B 对应的是题库中 哪个选择，给对应选项的值+1，满足 index=20</td></tr><tr><td>answerClickC</td><td>test</td><td>显示下一题，并判断 B 对应的是题库中哪个选择，给对应选项的值+1，满足 index=20 时，跳至 result 页面</td></tr></tbody></table><h2 id="路由">路由</h2><p>小程序 API 中的路由共有 5 种</p><table><thead><tr><th>路由</th><th>路由规则</th></tr></thead><tbody><tr><td>wx.switchTab</td><td>跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面</td></tr><tr><td>wx.reLaunch</td><td>关闭当前页面，跳转到应用内的某个页面。</td></tr><tr><td>wx.redirectTo</td><td>关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面</td></tr><tr><td>wx.navigateTo</td><td>保留当前页面，跳转到应用内的某个页面。但是不能跳到tabbar 页面。使用 wx.navigateBack 可以返回到原页面。小程序 中页面栈最多十层</td></tr><tr><td>wx.navigateBack</td><td>关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages 获取当前的页面栈，决定需要返回几层。</td></tr></tbody></table><h2 id="声明变量与变量赋值">声明变量与变量赋值</h2><h3 id="声明变量">声明变量</h3><p>在 js 中，未在 data 数组中定义的变量，可以通过 var语句来进行变量声明，在声明变量的同时也可以向变量赋值，如 test.js 文件中的一段代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">setList: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">var</span> newList = <span class="hljs-keyword">this</span>.data.list.sort(<span class="hljs-keyword">this</span>.randSort);<br><span class="hljs-keyword">this</span>.setData(&#123; <span class="hljs-attr">list</span>: newList,<br>&#125;); &#125;,<br></code></pre></td></tr></table></figure><h3 id="变量赋值">变量赋值</h3><p>在 js 文件的函数中给变量赋值的方法有两种，这里举一个简单的例子，首先将 index.wxml 文件中 button 的“开始测试”改为“{{msg}}”，使 button 中的文字变成 一个变量，然后在 index.js 文件的 data 数组中添加变量 msg，并赋予初值“开始测 试”，最后将事件处理函数 beginAnswer 进行修改</p><!--index.wxml--><view class="begininfo"><button bindtap='beginAnswer'> {{msg}} </button> </view><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-comment">//index.js</span><br><span class="hljs-selector-tag">Page</span>(&#123;<br>  <span class="hljs-attribute">data</span>: &#123;<br><span class="hljs-attribute">msg</span>:<span class="hljs-string">'开始测试'</span><br>&#125;,<br><span class="hljs-comment">//事件处理函数</span><br><span class="hljs-attribute">beginAnswer</span>: function () &#123;<br>this.setData(&#123; <span class="hljs-attribute">msg</span>:<span class="hljs-string">'测试结束'</span><br>&#125;) &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><p>使用 this.setData({ })可以将数据从逻辑层发送到视图层(异步)，同时改变对 应的 this.data 的值(同步)，当单击“开始测试”按钮时，msg 的值变为“测试结 束”，页面按钮中文字内容也变为“测试结束”。<br>如果将 this.setData({ })改为使用 this.data.msg = ‘测试结束’ 来改变 msg 变量的 值，会发现虽然可以改变 msg 的值，但是页面不会更新。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//index.js</span><br>Page(&#123;<br>  data: &#123;<br>msg:<span class="hljs-string">'开始测试'</span> &#125;,<br><span class="hljs-comment">//事件处理函数</span><br>beginAnswer: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">this</span>.data.msg = <span class="hljs-string">'测试结束'</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">'msg 的值:'</span>,<span class="hljs-keyword">this</span>.data.msg) &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><blockquote><p>总的来说，this.setData 是用来更新界面的，this.data 是用来获取页面 data对象的，它们都可以用于给变量赋值，注意 this.setData 中不能使用 console.log( )语句,如果需要查看赋值后变量的值，需要在 this.setData({ })语句外使用 console.log( )打印 查看变量的值。</p></blockquote><h2 id="绝对路径与相对路径">绝对路径与相对路径</h2><h3 id="相对路径">相对路径</h3><p>在 index.js 文件中，事件处理函数 beginAnswer 的 wx.navigateTo 路由的 url 使用的就是相对路径，其中“…/”指的是当前文件所在的上一级目录，即 index 文件夹 所在的目录，“…/test/test”指的就是 index 所在目录中 test 文件夹中的 test 文件。 另外“./”指的是当前目录，“…/…/”指的是当前文件所在的上上级目录，以此类推。</p><h3 id="绝对路径">绝对路径</h3><p>“/pages/test/test”即为 test 文件所在的绝对路径，若将 url 改为绝对路径 “/pages/test/test”也能实现页面的跳转。</p><h2 id="带参跳转">带参跳转</h2><p>在 test.js 文件中，answerClickA 的一段代码实现了当 index=20 时，从 test 页面 跳转至 result 页面，跳转时携带参数 A、B 和 C 的值</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.<span class="hljs-keyword">data</span>.index == <span class="hljs-number">20</span>) &#123; wx.redirectTo(&#123;<br>url: <span class="hljs-string">'/pages/result/result?A='</span> + <span class="hljs-keyword">this</span>.<span class="hljs-keyword">data</span>.A + <span class="hljs-string">'&amp;B='</span> + <span class="hljs-keyword">this</span>.<span class="hljs-keyword">data</span>.B + <span class="hljs-string">'&amp;C='</span> + <span class="hljs-keyword">this</span>.<span class="hljs-keyword">data</span>.C,<br>&#125;) &#125;<br></code></pre></td></tr></table></figure><p>如果想用使用页面参数，可以在 result 页面的 js 文件中使用生命周期函数来获 取页面参数，给生命周期函数 function()中定义一个值，这边定义为 options，即 可使用 option.A 获取 A 的值，并赋值给 result 页面的变量 A，B、C 也一样。开发者 可以尝试用 console.log(options)打印看一下 options 中的值，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;知识点整理&lt;/h1&gt;
&lt;h2 id=&quot;bindtap事件绑定&quot;&gt;bindtap事件绑定&lt;/h2&gt;
&lt;p&gt;事件是视图层到逻辑层的通讯方式。事件可以将用户的行为反馈到逻辑层进行 处理。事件可以绑定在组件上，当达到触发事件，就会执行逻辑层中对应的事件处 理函数。代码示例如下。&lt;
      
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="小程序路由" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发-传值</title>
    <link href="http://yoursite.com/2020/01/06/wx/wx-chuanzhi/"/>
    <id>http://yoursite.com/2020/01/06/wx/wx-chuanzhi/</id>
    <published>2020-01-06T07:34:13.000Z</published>
    <updated>2020-03-26T00:05:52.607Z</updated>
    
    <content type="html"><![CDATA[<h1>小程序如何愉快的传值</h1><h2 id="巧用Storage">巧用Storage</h2><p>这个数据是小程序官方给予的一种储存能力，如果用户不主动删除缓存里面的值，会一直保持在小程序中，在调试器的storage选项中可以看到已经缓存的数据。</p><p>比如将会经常用到的openID存在里面，在用的时候调用。<br>具体实现：</p><blockquote><p>存入</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//将 SESSIONID 保存到本地 storage </span><br> wx.setStorageSync(<span class="hljs-string">'showquan_OPENID'</span>, res.data.openid)<br></code></pre></td></tr></table></figure><blockquote><p>获取使用</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-comment">//作为参数提交给后台接口</span><br><span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.request</span>(&#123;<br>  <span class="hljs-attribute">url</span>: signUrl + <span class="hljs-string">"signin"</span>,<br>  <span class="hljs-attribute">data</span>: &#123;<br>    <span class="hljs-attribute">sum</span>: num,<br>    <span class="hljs-attribute">lntegral</span>: that.data.lntegral,<br>    <span class="hljs-attribute">openid</span>: wx.getStorageSync(<span class="hljs-string">'showquan_OPENID'</span>),<br>  &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="前端给js传值-data-oid">前端给js传值-data-oid</h2><p>在开发中有时候会遇到想给后台js反馈，比如告诉js我现在点击的是第几个按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--html--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mp-slideview</span> <span class="hljs-attr">buttons</span>=<span class="hljs-string">"&#123;&#123;slideButtons&#125;&#125;"</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"&#123;&#123;true&#125;&#125;"</span> <span class="hljs-attr">bindbuttontap</span>=<span class="hljs-string">"slideButtonTap"</span> <span class="hljs-attr">data-oid</span>=<span class="hljs-string">"&#123;&#123;de&#125;&#125;"</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;!--js通过前端点击按钮的日志信息中，获取到返回的参数oid--&gt;<br>slideButtonTap(e) &#123;<br>    <span class="hljs-keyword">var</span> idx = e.currentTarget.dataset.oid<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="通过get方法">通过get方法</h2><p>这有点类似于web的地址传值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">navigator</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-slidecells"</span>  <span class="hljs-attr">id</span>=<span class="hljs-string">"sp-&#123;&#123;item.goods_id&#125;&#125;"</span> <span class="hljs-attr">wx:for</span>=<span class="hljs-string">"&#123;&#123;goods_list&#125;&#125;"</span> <span class="hljs-attr">wx:key</span>=<span class="hljs-string">"goods_id"</span> <span class="hljs-attr">wx:for-index</span>=<span class="hljs-string">"de"</span> <span class="hljs-attr">url</span>=<span class="hljs-string">"../goodsDetail/goodsDetail?id=&#123;&#123;item.goods_id&#125;&#125;&amp;search=&#123;&#123;searchID&#125;&#125;"</span> &gt;</span><br>//通过   地址？key1=参数1 &amp; key2=参数2的方式传入两个参数<br></code></pre></td></tr></table></figure><p>目的页面获取</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js">onLoad: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">pid</span>) </span>&#123;<span class="hljs-comment">//获取传入参数</span><br>    <span class="hljs-keyword">let</span> that = <span class="hljs-keyword">this</span><br>    <span class="hljs-keyword">this</span>.setData(&#123;<br>      userinfo: wx.getStorageSync(<span class="hljs-string">'userinfo'</span>),<br>      searchID: pid.search  <span class="hljs-comment">//参数的调用</span><br>    &#125;)<br>    wx.request(&#123;<br>      url: pddApi + <span class="hljs-string">"PddDdkGoodsDetail.php"</span>,<br>      data:&#123;<br>        pid : pid.id,  <span class="hljs-comment">//参数调用</span><br>        searchID:pid.search<br>      &#125;,<br>      ……………………<br>      &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="后台给前端传值">后台给前端传值</h2><p>后台可以将json数据发送给前端</p><p><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/VGK5NR.png" alt="VGK5NR"></p><p>例如首页的专题内容，就是通过前端调用后台接口，后台在拼多多查询活动信息，并将拼多多的数据用json格式转发给前端，前端解析即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;小程序如何愉快的传值&lt;/h1&gt;
&lt;h2 id=&quot;巧用Storage&quot;&gt;巧用Storage&lt;/h2&gt;
&lt;p&gt;这个数据是小程序官方给予的一种储存能力，如果用户不主动删除缓存里面的值，会一直保持在小程序中，在调试器的storage选项中可以看到已经缓存的数据。&lt;/p&gt;
&lt;p&gt;比
      
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="实践总结" scheme="http://yoursite.com/tags/%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构-线性表</title>
    <link href="http://yoursite.com/2019/03/05/C/C-lianbiao/"/>
    <id>http://yoursite.com/2019/03/05/C/C-lianbiao/</id>
    <published>2019-03-05T14:02:13.000Z</published>
    <updated>2020-03-24T16:38:06.035Z</updated>
    
    <content type="html"><![CDATA[<h1>数据结构-线性表</h1><p>由同类型数据元素构成有序序列的线性结构，例如由数组和指针组成的线性结构</p><h2 id="储存结构实现">储存结构实现</h2><h3 id="链表的顺序储存结构：">链表的顺序储存结构：</h3><p>利用数组的连续存储空间顺序存放线性表的各元素</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LNode</span> *<span class="hljs-title">List</span>;</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LNode</span>&#123;</span><br>    ElementType Data[MAXSIZE];<br>    <span class="hljs-keyword">int</span> Last;<br>&#125; ;<br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LNode</span> <span class="hljs-title">L</span>;</span><br>List PtrL;<br></code></pre></td></tr></table></figure><p>访问下标为 i 的元素：L.Data[i] 或 PtrL-&gt;Data[i]<br>线性表的长度：L.Last+1 或 PtrL-&gt;Last+1</p><h3 id="链表的链式储存结构：">链表的链式储存结构：</h3><p>不要求逻辑上相邻的两个元素物理上也相邻；通过“链”建<br>立起数据元素之间的逻辑关系。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LNode</span> *<span class="hljs-title">List</span>;</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LNode</span>&#123;</span><br> ElementType Data;<br> List Next;<br>&#125;;<br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Lnode</span> <span class="hljs-title">L</span>;</span><br>List PtrL;<br></code></pre></td></tr></table></figure><h2 id="主要操作的实现（链式）">主要操作的实现（链式）</h2><h3 id="求表长">求表长</h3><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs zephir"><span class="hljs-keyword">int</span> Length ( <span class="hljs-keyword">List</span> PtrL )<br>&#123; <span class="hljs-keyword">List</span> p = PtrL; <span class="hljs-comment">/* p指向表的第一个结点*/</span><br> <span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>;<br> <span class="hljs-keyword">while</span> ( p ) &#123;<br> p = p-&gt;Next;<br> j++; <span class="hljs-comment">/* 当前p指向的是第 j 个结点*/</span><br> &#125;<br> <span class="hljs-keyword">return</span> j;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="查找">查找</h3><h4 id="按序号查找-FindKth">按序号查找: FindKth;</h4><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs zephir"><span class="hljs-keyword">List</span> FindKth( <span class="hljs-keyword">int</span> K, <span class="hljs-keyword">List</span> PtrL )<br>&#123; <span class="hljs-keyword">List</span> p = PtrL;<br> <span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>;<br> <span class="hljs-keyword">while</span> (p !=<span class="hljs-keyword">NULL</span> &amp;&amp; i &lt; K )&#123;<br> p = p-&gt;Next;<br> i++;<br> &#125;<br> <span class="hljs-keyword">if</span> ( i == K ) <span class="hljs-keyword">return</span> p;<br> <span class="hljs-comment">/* 找到第K个，返回指针 */</span><br> <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-keyword">NULL</span>;<br> <span class="hljs-comment">/* 否则返回空 */</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="按值查找-Find">按值查找: Find</h4><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-meta">List</span> Find( ElementType <span class="hljs-meta">X</span>, <span class="hljs-meta">List</span> PtrL )<br>&#123;<br> <span class="hljs-meta">List</span> p = PtrL;<br> <span class="hljs-meta">while</span> ( p!=<span class="hljs-meta">NULL</span> <span class="hljs-variable">&amp;&amp;</span> p-&gt;Data != <span class="hljs-meta">X</span> )<br> p = p-&gt;Next;<br> <span class="hljs-meta">return</span> p;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="插入（在第-i-1-1≤i≤n-1-个结点后插入一个值为X的新结点">插入（在第 i-1(1≤i≤n+1)个结点后插入一个值为X的新结点)</h3><ul><li>先构造一个新结点，用s指向；</li><li>再找到链表的第 i-1个结点，用p指向；</li><li>然后修改指针，插入结点 ( p之后插入新结点是 s)</li></ul><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs zephir"><span class="hljs-keyword">List</span> Insert( ElementType X, <span class="hljs-keyword">int</span> i, <span class="hljs-keyword">List</span> PtrL )<br>&#123; <span class="hljs-keyword">List</span> p, s;<br> <span class="hljs-keyword">if</span> ( i == <span class="hljs-number">1</span> ) &#123; <span class="hljs-comment">/* 新结点插入在表头 */</span><br> s = (<span class="hljs-keyword">List</span>)malloc(sizeof(struct LNode)); <span class="hljs-comment">/*申请、填装结点*/</span><br> s-&gt;Data = X;<br> s-&gt;Next = PtrL;<br> <span class="hljs-keyword">return</span> s; <span class="hljs-comment">/*返回新表头指针*/</span><br> &#125;<br> p = FindKth( i<span class="hljs-number">-1</span>, PtrL ); <span class="hljs-comment">/* 查找第i-1个结点 */</span><br> <span class="hljs-keyword">if</span> ( p == <span class="hljs-keyword">NULL</span> ) &#123; <span class="hljs-comment">/* 第i-1个不存在，不能插入 */</span><br> printf(＂参数i错＂);<br> <span class="hljs-keyword">return</span> <span class="hljs-keyword">NULL</span>;<br> &#125;<span class="hljs-keyword">else</span> &#123;<br> s = (<span class="hljs-keyword">List</span>)malloc(sizeof(struct LNode)); <span class="hljs-comment">/*申请、填装结点*/</span><br> s-&gt;Data = X;<br> s-&gt;Next = p-&gt;Next; <span class="hljs-comment">/*新结点插入在第i-1个结点的后面*/</span><br> p-&gt;Next = s;<br> <span class="hljs-keyword">return</span> PtrL;<br> &#125;<br></code></pre></td></tr></table></figure><h3 id="删除（删除链表的第-i-1≤i≤n-个位置上的结点">删除（删除链表的第 i (1≤i≤n)个位置上的结点)</h3><ul><li>先找到链表的第 i-1个结点，用p指向；</li><li>再用指针s指向要被删除的结点（p的下一个结点）;</li><li>然后修改指针，删除s所指结点;</li><li>最后释放s所指结点的空间。</li></ul><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs zephir"><span class="hljs-keyword">List</span> Delete( <span class="hljs-keyword">int</span> i, <span class="hljs-keyword">List</span> PtrL )<br>&#123; <span class="hljs-keyword">List</span> p, s;<br> <span class="hljs-keyword">if</span> ( i == <span class="hljs-number">1</span> ) &#123; <span class="hljs-comment">/* 若要删除的是表的第一个结点 */</span><br> s = PtrL; <span class="hljs-comment">/*s指向第1个结点*/</span><br> <span class="hljs-keyword">if</span> (PtrL!=<span class="hljs-keyword">NULL</span>) PtrL = PtrL-&gt;Next; <span class="hljs-comment">/*从链表中删除*/</span><br> <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-keyword">NULL</span>;<br> free(s); <span class="hljs-comment">/*释放被删除结点 */</span><br> <span class="hljs-keyword">return</span> PtrL;<br> &#125;<br> p = FindKth( i<span class="hljs-number">-1</span>, PtrL ); <span class="hljs-comment">/*查找第i-1个结点*/</span><br> <span class="hljs-keyword">if</span> ( p == <span class="hljs-keyword">NULL</span> ) &#123;<br> printf(“第%d个结点不存在”, i<span class="hljs-number">-1</span>); <span class="hljs-keyword">return</span> <span class="hljs-keyword">NULL</span>;<br> &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( p-&gt;Next == <span class="hljs-keyword">NULL</span> )&#123;<br> printf(“第%d个结点不存在”, i); <span class="hljs-keyword">return</span> <span class="hljs-keyword">NULL</span>;<br> &#125; <span class="hljs-keyword">else</span> &#123;<br> s = p-&gt;Next; <span class="hljs-comment">/*s指向第i个结点*/</span><br> p-&gt;Next = s-&gt;Next; <span class="hljs-comment">/*从链表中删除*/</span><br> free(s); <span class="hljs-comment">/*释放被删除结点 */</span><br> <span class="hljs-keyword">return</span> PtrL;<br> &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;数据结构-线性表&lt;/h1&gt;
&lt;p&gt;由同类型数据元素构成有序序列的线性结构，例如由数组和指针组成的线性结构&lt;/p&gt;
&lt;h2 id=&quot;储存结构实现&quot;&gt;储存结构实现&lt;/h2&gt;
&lt;h3 id=&quot;链表的顺序储存结构：&quot;&gt;链表的顺序储存结构：&lt;/h3&gt;
&lt;p&gt;利用数组的连续存储空间顺
      
    
    </summary>
    
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="线性表" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>C语言难点-指针</title>
    <link href="http://yoursite.com/2019/02/28/C/C-zhizhen/"/>
    <id>http://yoursite.com/2019/02/28/C/C-zhizhen/</id>
    <published>2019-02-28T12:02:36.000Z</published>
    <updated>2020-03-24T16:37:26.539Z</updated>
    
    <content type="html"><![CDATA[<h1>C语言难点-指针</h1><h2 id="指针">指针</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> i;<br><span class="hljs-built_in">int</span>* p=&amp;i;<br><span class="hljs-built_in">int</span>* p,q;<br><span class="hljs-built_in">int</span> *p,q;<br></code></pre></td></tr></table></figure><h2 id="指针变量">指针变量</h2><blockquote><p>变量的值是内存的地址<br>普通变量的值是实际的值<br>指针变量的值是具有实际值的变量的地址<br><img src="http://q7e8xd0qk.bkt.clouddn.com/blog/YpixqE.png" alt="YpixqE"></p></blockquote><h2 id="作为参数的指针">作为参数的指针</h2><p>在被调用的时候得到了某个变量的地址:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">f</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *p)</span></span>;<br></code></pre></td></tr></table></figure><p>在函数里面可以通过这个指针访问外面的这个i</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>; f(&amp;i);<br></code></pre></td></tr></table></figure><h3 id="访问那个地址-上的变量">访问那个地址.上的变量*</h3><p>是一个单目运算符，用来访问指针的值所表示的地<br>可以做右值也可以做左值</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span>k= *p;<br>*p= k+<span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h3 id="左值为什么叫左值，">*左值为什么叫左值，</h3><p>是因为出现在赋值号左边的不是变量，而是值，是表达式计算的结果:</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">a[O]=<span class="hljs-number">2</span><span class="hljs-comment">;</span><br>*p= <span class="hljs-number">3</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h2 id="指针应用场景">指针应用场景</h2><h3 id="交换变量的值">交换变量的值</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *pa, <span class="hljs-keyword">int</span> *pb)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">int</span> t = *pa;<br>*pa = *pb;<br>*pb =t;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="函数返回多个值，某些值就只能通过指针返回">函数返回多个值，某些值就只能通过指针返回</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">传入的参数实际上是需要保存带回的结果的变量<br>函数返回运算的状态，结果通过指针返回<br>常用的套路是让函数返回特殊的不属于有效范围内的值来表示出错:<br><span class="hljs-number">-1</span>或<span class="hljs-number">0</span> (在文件操作会看到大量的例子)<br>但是当任何数值都是有效的可能结果时，就得分开返回了<br>需要注意的是后续的语言(C++,Java) 采用了异常机制来解决这个问题<br></code></pre></td></tr></table></figure><h2 id="指针最常见的错误">指针最常见的错误</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">定义了指针变量，还没有指向任何变量，就开始使用指针<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;C语言难点-指针&lt;/h1&gt;
&lt;h2 id=&quot;指针&quot;&gt;指针&lt;/h2&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b
      
    
    </summary>
    
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C语言指针" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/"/>
    
      <category term="指针的使用" scheme="http://yoursite.com/tags/%E6%8C%87%E9%92%88%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    
      <category term="指针的误用" scheme="http://yoursite.com/tags/%E6%8C%87%E9%92%88%E7%9A%84%E8%AF%AF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>指针和数组</title>
    <link href="http://yoursite.com/2019/02/28/C/C-shuzu/"/>
    <id>http://yoursite.com/2019/02/28/C/C-shuzu/</id>
    <published>2019-02-28T12:02:36.000Z</published>
    <updated>2020-03-24T16:37:37.403Z</updated>
    
    <content type="html"><![CDATA[<h1>指针与数组</h1><h2 id="传⼊函数的数组成了什么？">传⼊函数的数组成了什么？</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> isPrime(<span class="hljs-built_in">int</span> x,<span class="hljs-built_in">int</span> knownPrimes[], <span class="hljs-built_in">int</span> numbe rOfKnownPrimes )<br>&#123;<br><span class="hljs-built_in">int</span> ret = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">int</span> i; <br>    <span class="hljs-keyword">for</span> ( i=<span class="hljs-number">0</span>; i&lt;numbe rOfKnownP rimes;i++)&#123;<br>        <span class="hljs-keyword">if</span> ( X %knownPrimes[i] ==<span class="hljs-number">0</span> )&#123;<br>            ret = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>        <span class="hljs-keyword">return</span> ret;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>函数参数表中的数组实际上是指针</p><blockquote><p>sizeof(a) == sizeof(int*)<br>但是可以⽤数组的运算符[]进⾏运算</p></blockquote></blockquote><h2 id="数组参数">数组参数</h2><h3 id="以下四种函数原型是等价的：">以下四种函数原型是等价的：</h3><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs excel"><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">int</span> *ar, <span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>);<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">int</span> *, <span class="hljs-built_in">int</span>);<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">int</span> ar[], <span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>);<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">int</span> [], <span class="hljs-built_in">int</span>);<br></code></pre></td></tr></table></figure><h2 id="数组变量是特殊的指针">数组变量是特殊的指针</h2><blockquote><p>数组变量本⾝表达地址，所以</p><blockquote><p>int a[10]; int*p=a; // ⽆需⽤&amp;取地址<br>但是数组的单元表达的是变量，需要⽤&amp;取地址<br>a == &amp;a[0]</p></blockquote></blockquote><blockquote><p>[]运算符可以对数组做，也可以对指针做：</p><blockquote><p>p[0] &lt;= =&gt; a[0]</p></blockquote></blockquote><blockquote><p>*运算符可以对指针做，也可以对数组做：</p><blockquote><p>*a = 25;</p></blockquote></blockquote><blockquote><p>数组变量是const的指针，所以不能被赋值</p><blockquote><p>int a[] &lt;==&gt; int * const a=….</p></blockquote></blockquote><h2 id="指针与const-仅限C99">指针与const(仅限C99)</h2><p><img src="http://q7e8xd0qk.bkt.clouddn.com/blog/c6nnc3.png" alt="c6nnc3"></p><h3 id="表⽰⼀旦得到了某个变量的地址，不能再指向其他变量">表⽰⼀旦得到了某个变量的地址，不能再指向其他变量</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> * <span class="hljs-keyword">const</span> q = &amp;i; <span class="hljs-comment">// q 是 const</span><br> *q = <span class="hljs-number">26</span>; <span class="hljs-comment">// OK</span><br> q++; <span class="hljs-comment">// ERROR</span><br></code></pre></td></tr></table></figure><h2 id="所指是const">所指是const</h2><h3 id="表⽰不能通过这个指针去修改那个变量（并不能使得那个变量成为const）">表⽰不能通过这个指针去修改那个变量（并不能使得那个变量成为const）</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> *p = &amp;i;<br> *p = <span class="hljs-number">26</span>; <span class="hljs-comment">// ERROR! (*p) 是 const</span><br> i = <span class="hljs-number">26</span>; <span class="hljs-comment">//OK</span><br> p = &amp;j; <span class="hljs-comment">//OK</span><br></code></pre></td></tr></table></figure><h3 id="判断哪个被const了的标志是const在-的前⾯还是后⾯">判断哪个被const了的标志是const在*的前⾯还是后⾯</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> i;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span>* p1 = &amp;i;<br><span class="hljs-built_in">int</span> <span class="hljs-keyword">const</span>* p2 = &amp;i;<br><span class="hljs-built_in">int</span> *<span class="hljs-keyword">const</span> p3 = &amp;i;<br></code></pre></td></tr></table></figure><h2 id="const数组">const数组</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> a[] = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,&#125;;<br></code></pre></td></tr></table></figure><p>数组变量已经是const的指针了，这⾥的const表明数组的每个单元都是const int所以必须通过初始化进⾏赋值</p><ul><li>这样做的好处</li></ul><ul><li>因为把数组传⼊函数时传递的是地址，所以那个函数内部可以修改数组的值</li><li>为了保护数组不被函数破坏，可以设置参数为const</li><li>int sum(const int a[], int length);</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;指针与数组&lt;/h1&gt;
&lt;h2 id=&quot;传⼊函数的数组成了什么？&quot;&gt;传⼊函数的数组成了什么？&lt;/h2&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C语言指针" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/"/>
    
      <category term="指针的使用" scheme="http://yoursite.com/tags/%E6%8C%87%E9%92%88%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    
      <category term="数组和指针" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84%E5%92%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>Mac如何运行C语言</title>
    <link href="http://yoursite.com/2019/02/24/C/C-Mac/"/>
    <id>http://yoursite.com/2019/02/24/C/C-Mac/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-24T16:36:01.869Z</updated>
    
    <content type="html"><![CDATA[<h1>Mac如何运行C语言程序</h1><h2 id="前言">前言</h2><p>  C语言是我第一个学习的开发语言，在中国大学生MOOC平台学习C语言开启了我的coding生涯，也认识了我很喜欢的一位老师，我个人很喜欢C给我带来的编程思想，这种思想中在后来学习其他语言的时候，让我受益无穷。c语言是最基本的语言。全世界的高级语言现在有两千多种，但是几乎全国大部分的高校都学习C语言，它的重要性可见一斑。很多高校选择C语言作为计算机相关专业入门的第一课，主要是因为C是编写操作系统最常用的编程语言。用C编写的第一个操作系统是大名鼎鼎的Unix，现在的MacOS正基于此。后来的操作系统如GNU/Linux都是用C语言编写的.C不仅是操作系统的语言，它还是当今几乎所有最流行的高级语言的前身和灵感。事实上，Perl，PHP，Python和Ruby都是用C语言编写的。<br>  学习任何语言，关注的不应该是技术，而是技术的发展过程，技术背后那些看不见的东西，他们蕴含着无限可能和未来。</p><h2 id="Mac下的第一个-Hello-world！">Mac下的第一个&quot;Hello world！&quot;</h2><h3 id="打开终端">打开终端</h3><p><img src="http://q7e8xd0qk.bkt.clouddn.com/blog/dSYnXu.png" alt="终端"></p><h3 id="打开指定文件夹">打开指定文件夹</h3><p>例如：打开/Users/用户名/CStudy文件夹</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">$ <span class="hljs-keyword">cd</span> <span class="hljs-string">/Users/</span>用户名<span class="hljs-string">/cStudy</span><br></code></pre></td></tr></table></figure><p>当然，最简单的办法就是现在命令行输入&quot;cd&quot;<br>然后在fander窗口将文件夹图标拖到终端窗口，回车即可</p><h3 id="开始">开始</h3><p>输入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">vim</span> <span class="hljs-selector-tag">hello</span><span class="hljs-selector-class">.c</span>，<br></code></pre></td></tr></table></figure><p>用vim编辑hello.c文件。再按i进入编辑状态<br>写入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"hello world\n"</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>输入完毕后，保存并退出，先按“esc”键，然后输入:wq即可</p><h3 id="编译">编译</h3><p>输入命令</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">gcc</span> <span class="hljs-selector-tag">hello</span><span class="hljs-selector-class">.c</span><br></code></pre></td></tr></table></figure><p>此时如果电脑上没有编译工具，点击安装即可；若程序有错误，则再次进入步骤2修改程序；若无错则进入下一步骤；</p><h3 id="运行">运行</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">./<span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.out</span> hello.c<br></code></pre></td></tr></table></figure><p>即可看到结果<br><img src="http://q7e8xd0qk.bkt.clouddn.com/blog/0yVDsL.png" alt="0yVDsL"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Mac如何运行C语言程序&lt;/h1&gt;
&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;  C语言是我第一个学习的开发语言，在中国大学生MOOC平台学习C语言开启了我的coding生涯，也认识了我很喜欢的一位老师，我个人很喜欢C给我带来的编程思想，这种思想中在后来学习其他语言的
      
    
    </summary>
    
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Mac终端" scheme="http://yoursite.com/tags/Mac%E7%BB%88%E7%AB%AF/"/>
    
      <category term="C程序" scheme="http://yoursite.com/tags/C%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="Hello world" scheme="http://yoursite.com/tags/Hello-world/"/>
    
  </entry>
  
  <entry>
    <title>javaScrip表单校验如何实现</title>
    <link href="http://yoursite.com/2019/02/24/js/js-biaodan/"/>
    <id>http://yoursite.com/2019/02/24/js/js-biaodan/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-26T05:14:35.261Z</updated>
    
    <content type="html"><![CDATA[<h1>js实现表单校验</h1><p>一般的表单验证是用javascript在客户端完成的，这样做可以减轻服务器压力，并且验证效率高（不需要与服务器之间传递数据）。</p><p>但是这有个缺点，就是客户端通过一些简单的操作就可以看到校验代码。例如在页面上右击，选择“查看源文件”，就可以看见页面中的javascript验证代码，从而知道什么样的数据算“合法”，什么样的算“不合法”。对于一般网站这倒也没什么，但是对于安全性非常高的网站或者应用，例如银行、军事，这样很显然是非常不妥的，攻击者可以通过这些验证规则来猜测合法数据，使得被破解的可能性大大增加。因此有时候验证放在服务器端是必要的。用户不知道服务器端的验证规则是什么样的。</p><p>而且当你保存这个页面之后把其中的验证代码都删除，然后修改action中提交的连接，提交之后就可以绕过客户端验证了，这样是很不安全的，所以服务端也验证是比较保险的做法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkName</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">var</span> sUser=<span class="hljs-built_in">document</span>.forml.user.value;<br><span class="hljs-keyword">var</span> utip=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"usertip"</span>);<br><span class="hljs-keyword">if</span>(sUser==<span class="hljs-string">""</span>)&#123;<br>utip.innerHTML=<span class="hljs-string">"用户名不能为空！"</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkPwd</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">var</span> sPwd=<span class="hljs-built_in">document</span>.forml.pwd.value;<br><span class="hljs-keyword">var</span> utip=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"pwdtip"</span>);<br><span class="hljs-keyword">if</span>(sPwd.length&lt;<span class="hljs-number">4</span>||sPwd.length&gt;<span class="hljs-number">10</span>)&#123;<br>utip.innerHTML=<span class="hljs-string">"输入内容长度4-8位"</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkPwd2</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">var</span> sPwd=<span class="hljs-built_in">document</span>.forml.pwd.value;<br><span class="hljs-keyword">var</span> sPwd2=<span class="hljs-built_in">document</span>.forml.pwd2.value;<br><span class="hljs-keyword">var</span> utip=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"pwd2tip"</span>);<br><span class="hljs-keyword">if</span>(sPwd=<span class="hljs-string">""</span>||sPwd!=sPwd2||sPwd.length&lt;<span class="hljs-number">4</span>||sPwd.length&gt;<span class="hljs-number">15</span>)&#123;<br>utip.innerHTML=<span class="hljs-string">"密码长度不能为空，长度应为5-14位，两次输入密码应一致。"</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">var</span> imgs=[<span class="hljs-string">"2.png"</span>,<span class="hljs-string">"3.png"</span>,<span class="hljs-string">"4.png"</span>,<span class="hljs-string">"5.png"</span>];<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomImg</span>(<span class="hljs-params"></span>)</span>&#123;<br>vimg=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"verimg"</span>);<br><span class="hljs-keyword">var</span> rand=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*imgs.length);<br>vimg.src=<span class="hljs-string">"img/"</span>+imgs[rand];<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkMobile</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">var</span> s=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"phone"</span>);<br><span class="hljs-keyword">var</span> regu=<span class="hljs-regexp">/^[1][3][0-9]&#123;9&#125;$/</span>;<br><span class="hljs-keyword">var</span> re=<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(regu);<br><span class="hljs-keyword">var</span> utip=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"dianhua"</span>);<br><span class="hljs-keyword">if</span> (re.test(s.value))&#123;<br>utip.innerHTML=<span class="hljs-string">"输入正确"</span>;<br>utip.style.color=<span class="hljs-string">"#1adf05"</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>utip.innerHTML=<span class="hljs-string">"输入错误"</span>;<br>utip.style.color=<span class="hljs-string">"red"</span>; <br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isEmail</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">var</span> str=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"mail"</span>);<br><span class="hljs-keyword">var</span> myReg=<span class="hljs-regexp">/^[-_A-Za-z0-9]+@([_A-Za-z0-9]+\.)+[A-Za-z0-9]&#123;2,3&#125;$/</span>;<br><span class="hljs-keyword">var</span> utip=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"e"</span>);<br><span class="hljs-keyword">if</span>(myReg.test(str.value))&#123;<br>utip.innerHTML=<span class="hljs-string">"邮箱正确"</span>;<br>utip.style.color=<span class="hljs-string">"#1adf05"</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>utip.innerHTML=<span class="hljs-string">"邮箱错误"</span>;<br>utip.style.color=<span class="hljs-string">"red"</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>html部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"forml"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"forml"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"post"</span> <span class="hljs-attr">action</span>=<span class="hljs-string">""</span> <span class="hljs-attr">onsubmit</span>=<span class="hljs-string">"return checkForm()"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>用户注册<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"user"</span>&gt;</span>用户名:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"user"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"user"</span> <span class="hljs-attr">onblur</span>=<span class="hljs-string">"checkName()"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"usertip"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"pwd"</span>&gt;</span>密码:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"pwd"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"pwd"</span> <span class="hljs-attr">onblur</span>=<span class="hljs-string">"checkPwd()"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"pwdtip"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"pwd2"</span>&gt;</span>重复密码:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"pwd2"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"pwd2"</span> <span class="hljs-attr">onblur</span>=<span class="hljs-string">"checkPwd2()"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"pwd2tip"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"verifi"</span>&gt;</span>验证码:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"verifi"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"verifi"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"verimg"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.png"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"randomImg()"</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"phone"</span>&gt;</span>电话号码：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"phone"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"phone"</span> <span class="hljs-attr">onblur</span>=<span class="hljs-string">"checkMobile()"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dianhua"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"mail"</span>&gt;</span>电子邮箱：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"mail"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"mail"</span> <span class="hljs-attr">onblur</span>=<span class="hljs-string">"isEmail()"</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"e"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"button"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"提交"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"reset"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"button2"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"button2"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"重置"</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;js实现表单校验&lt;/h1&gt;
&lt;p&gt;一般的表单验证是用javascript在客户端完成的，这样做可以减轻服务器压力，并且验证效率高（不需要与服务器之间传递数据）。&lt;/p&gt;
&lt;p&gt;但是这有个缺点，就是客户端通过一些简单的操作就可以看到校验代码。例如在页面上右击，选择“查看源文
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript技巧" scheme="http://yoursite.com/tags/javaScript%E6%8A%80%E5%B7%A7/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>javaScript-菜单价格添加</title>
    <link href="http://yoursite.com/2019/02/24/js/js-caidan/"/>
    <id>http://yoursite.com/2019/02/24/js/js-caidan/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-26T05:14:50.800Z</updated>
    
    <content type="html"><![CDATA[<h1>js实现菜单价格添加</h1><p>js部分</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    $(<span class="hljs-string">"#button"</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">var</span> d=$(<span class="hljs-string">"#dishname"</span>).val();<span class="hljs-comment">/*获得表格的数据*/</span><br>    <span class="hljs-keyword">var</span> s=$(<span class="hljs-string">"#box input"</span>).val();<br>    <span class="hljs-keyword">if</span>(d!=<span class="hljs-string">""</span>)&#123;<br>    $(<span class="hljs-string">"ul"</span>).append(<span class="hljs-string">"&lt;li&gt;"</span>+d+<span class="hljs-string">" "</span>+s+<span class="hljs-string">"元"</span>+<span class="hljs-string">"&lt;/li&gt;"</span>);<br>    $(<span class="hljs-string">"#dishname"</span>).val(<span class="hljs-string">""</span>).focus();<span class="hljs-comment">/*清空表单内容并获取焦点*/</span><br>    &#125;<br>    &#125;)<br>    <span class="hljs-keyword">var</span> num=$(<span class="hljs-string">"#num"</span>).val();<br>    $(<span class="hljs-string">"#box button:first"</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    $(<span class="hljs-string">"#num"</span>).val(++num)<br>    &#125;)<br>    $(<span class="hljs-string">"#box button:last"</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    $(<span class="hljs-string">"#num"</span>).val(--num)<br>    &#125;)<br>&#125;)<br></code></pre></td></tr></table></figure><p>html部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"dishname"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dishname"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"添加菜单"</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"box"</span>&gt;</span><br>价格：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"num"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"num"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">disabled</span>=<span class="hljs-string">""</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>增加<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>减少<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>糖醋排骨<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>圆笼粉蒸肉<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>泡菜鱼<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>板栗烧鸡<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>麻婆豆腐<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;js实现菜单价格添加&lt;/h1&gt;
&lt;p&gt;js部分&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript技巧" scheme="http://yoursite.com/tags/javaScript%E6%8A%80%E5%B7%A7/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>javaScript-获取点击数据</title>
    <link href="http://yoursite.com/2019/02/24/js/js-huoqu/"/>
    <id>http://yoursite.com/2019/02/24/js/js-huoqu/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-26T05:15:12.933Z</updated>
    
    <content type="html"><![CDATA[<h1>js如何获取点击数据</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>$(<span class="hljs-string">".list"</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">var</span> index=$(<span class="hljs-string">".list"</span>).index(<span class="hljs-keyword">this</span>);<br>$(<span class="hljs-string">".list"</span>).eq(index).toggleClass(<span class="hljs-string">"clicked"</span>);<br>$(<span class="hljs-string">".amount"</span>).html(index+<span class="hljs-number">1</span>);<br>&#125;)<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>点击的的是第<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"amount"</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>个盒子<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>实现效果：<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/H9AzAC.png" alt="H9AzAC"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;js如何获取点击数据&lt;/h1&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript技巧" scheme="http://yoursite.com/tags/javaScript%E6%8A%80%E5%B7%A7/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>javaScript-P5实现canver动画</title>
    <link href="http://yoursite.com/2019/02/24/js/js-P5BG/"/>
    <id>http://yoursite.com/2019/02/24/js/js-P5BG/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-26T05:17:29.849Z</updated>
    
    <content type="html"><![CDATA[<h1>p5.js入坑指南</h1><p>p5.js 是一个JavaScript的函数库，它在制作之初就和Processing有同样的目标。就是让艺术家，设计师，教育工作者和编程初学者能够很容易，很轻松地学习和使用程序设计。<br>我们都有很多的想法和创意，透过编程来表达自己的创意和艺术构想，是一个全新的方式，也是一个很好的方式。设计师做设计，最初是使用的纸和笔。到后来可以使用电脑软件来辅助设计，例如大家熟悉的Ps，Ai,maya,3Dmax等等。但是当今这个时代的设计师需要学习编程，因为这样就可以不受设计软件的影响和限制，进行更加自由的创作，让自己的想象力和创意尽情的挥洒出来！当你自己能够制作出用来创作的工具时，那么唯一限制你的就是你的想象力了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> colors=[&#123;<span class="hljs-string">"r"</span>:<span class="hljs-number">255</span>,<span class="hljs-string">"g"</span>:<span class="hljs-number">193</span>,<span class="hljs-string">"b"</span>:<span class="hljs-number">37</span>&#125;,<br>            &#123;<span class="hljs-string">"r"</span>:<span class="hljs-number">177</span>,<span class="hljs-string">"g"</span>:<span class="hljs-number">193</span>,<span class="hljs-string">"b"</span>:<span class="hljs-number">37</span>&#125;,<br>            &#123;<span class="hljs-string">"r"</span>:<span class="hljs-number">155</span>,<span class="hljs-string">"g"</span>:<span class="hljs-number">153</span>,<span class="hljs-string">"b"</span>:<span class="hljs-number">30</span>&#125;,<br>            &#123;<span class="hljs-string">"r"</span>:<span class="hljs-number">125</span>,<span class="hljs-string">"g"</span>:<span class="hljs-number">133</span>,<span class="hljs-string">"b"</span>:<span class="hljs-number">25</span>&#125;,<br>            &#123;<span class="hljs-string">"r"</span>:<span class="hljs-number">145</span>,<span class="hljs-string">"g"</span>:<span class="hljs-number">143</span>,<span class="hljs-string">"b"</span>:<span class="hljs-number">10</span>&#125;];<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bubble</span>(<span class="hljs-params">x,y,r,speedX,speedY,red,green,blue</span>)</span>&#123;<br><span class="hljs-keyword">this</span>.x=x;<br><span class="hljs-keyword">this</span>.y=y;<br><span class="hljs-keyword">this</span>.r=r;<br><span class="hljs-keyword">this</span>.speedX=speedX;<br><span class="hljs-keyword">this</span>.speedY=speedY;<br><span class="hljs-keyword">this</span>.red=red;<br><span class="hljs-keyword">this</span>.green=green;<br><span class="hljs-keyword">this</span>.blue=blue;<br><span class="hljs-keyword">this</span>.overflow=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">this</span>.display=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>noStroke();<span class="hljs-comment">//无边框</span><br>fill(<span class="hljs-keyword">this</span>.red,<span class="hljs-keyword">this</span>.green,<span class="hljs-keyword">this</span>.blue,<span class="hljs-number">160</span>);<br>ellipse(<span class="hljs-keyword">this</span>.x,<span class="hljs-keyword">this</span>.y,<span class="hljs-keyword">this</span>.r+<span class="hljs-keyword">this</span>.overflow,<span class="hljs-keyword">this</span>.r+<span class="hljs-keyword">this</span>.overflow);<br>&#125;<br><span class="hljs-keyword">this</span>.move=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">this</span>.x+=<span class="hljs-keyword">this</span>.speedX;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.x&lt;<span class="hljs-number">0</span>||<span class="hljs-keyword">this</span>.x&gt;windowWidth)&#123;<br><span class="hljs-keyword">this</span>.speedX=-<span class="hljs-keyword">this</span>.speedX;<br>&#125;<br><span class="hljs-keyword">this</span>.y+=<span class="hljs-keyword">this</span>.speedY;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.y&lt;<span class="hljs-number">0</span>||<span class="hljs-keyword">this</span>.y&gt;windowHeight)&#123;<br><span class="hljs-keyword">this</span>.speedY=-<span class="hljs-keyword">this</span>.speedY;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.abs(mouseX-<span class="hljs-keyword">this</span>.x)&lt;=<span class="hljs-number">20</span>&amp;&amp;<span class="hljs-built_in">Math</span>.abs(mouseY-<span class="hljs-keyword">this</span>.y)&lt;=<span class="hljs-number">20</span>)&#123;<br><span class="hljs-keyword">this</span>.overflow=<span class="hljs-keyword">this</span>.r*<span class="hljs-number">4</span>;<br><span class="hljs-keyword">this</span>.x=mouseX+random(<span class="hljs-number">-20</span>,<span class="hljs-number">20</span>);<br><span class="hljs-keyword">this</span>.y=mouseY+random(<span class="hljs-number">-20</span>,<span class="hljs-number">20</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">this</span>.overflow=<span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">var</span> bubbles=[];<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span>&#123;<br>createCanvas(windowWidth,windowHeight)<br>background(<span class="hljs-number">255</span>);<br>frameRate(<span class="hljs-number">50</span>);<span class="hljs-comment">//每秒重绘的帧数,即速度</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">500</span>;i++) &#123;<br><span class="hljs-keyword">var</span> randomX=random(<span class="hljs-number">0</span>,windowWidth);<br><span class="hljs-keyword">var</span> randomY=random(<span class="hljs-number">0</span>,windowHeight);<br><span class="hljs-keyword">var</span> randomR=random(<span class="hljs-number">0</span>,<span class="hljs-number">20</span>);<span class="hljs-comment">//da xia</span><br><span class="hljs-keyword">var</span> randomSpeedX=random(<span class="hljs-number">-2</span>,<span class="hljs-number">2</span>);<span class="hljs-comment">//方向</span><br><span class="hljs-keyword">var</span> randomSpeedY=random(<span class="hljs-number">-2</span>,<span class="hljs-number">2</span>);<br><span class="hljs-keyword">var</span> r=colors[i%<span class="hljs-number">5</span>].r;<br><span class="hljs-keyword">var</span> g=colors[i%<span class="hljs-number">5</span>].g;<br><span class="hljs-keyword">var</span> b=colors[i%<span class="hljs-number">5</span>].b;<br>bubbles[i]=<span class="hljs-keyword">new</span> bubble(randomX,randomY,randomR,randomSpeedX,randomSpeedY,r,g,b)<br>bubbles[i].display(); <br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">draw</span>(<span class="hljs-params"></span>)</span>&#123;<br>background(<span class="hljs-number">255</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">500</span>;i++)&#123;<br>bubbles[i].move();<br>bubbles[i].display();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="上面代码实现效果展示">上面代码实现效果展示</h2><p><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/8WSJva.png" alt="8WSJva"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;p5.js入坑指南&lt;/h1&gt;
&lt;p&gt;p5.js 是一个JavaScript的函数库，它在制作之初就和Processing有同样的目标。就是让艺术家，设计师，教育工作者和编程初学者能够很容易，很轻松地学习和使用程序设计。&lt;br&gt;
我们都有很多的想法和创意，透过编程来表达自己
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript技巧" scheme="http://yoursite.com/tags/javaScript%E6%8A%80%E5%B7%A7/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>javaScript-随机数</title>
    <link href="http://yoursite.com/2019/02/24/js/js-redom/"/>
    <id>http://yoursite.com/2019/02/24/js/js-redom/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-26T05:13:36.041Z</updated>
    
    <content type="html"><![CDATA[<h1>js如何生成随机数</h1><h2 id="js-可以使用-Math（算数）-对象来实现随机数的生成。">js 可以使用 Math（算数） 对象来实现随机数的生成。</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>ceil(x)</td><td>对数进行上舍入，即向上取整。</td></tr><tr><td>floor(x)</td><td>对 x 进行下舍入，即向下取整。</td></tr><tr><td>round(x)</td><td>四舍五入。</td></tr><tr><td>random()</td><td>返回 0 ~ 1 之间的随机数，包含 0 不包含 1。</td></tr></tbody></table><p>比如要生成0～9之间的一个整数</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Math</span>.</span></span>random<span class="hljs-literal">()</span><span class="hljs-comment">//首先生成一个0-1（不包括1）之间的随机数</span><br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Math</span>.</span></span>random<span class="hljs-literal">()</span>*<span class="hljs-number">10</span><span class="hljs-comment">//将随机数乘10，变为0-9之间的随机数</span><br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Math</span>.</span></span>floor(<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Math</span>.</span></span>random<span class="hljs-literal">()</span>*<span class="hljs-number">10</span>);<span class="hljs-comment">//用floor函数取整</span><br></code></pre></td></tr></table></figure><p>这样我们的随机数就取好了</p><h1>js随机数的使用举例</h1><h2 id="随机变化box形状和背景">随机变化box形状和背景</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomColor</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">var</span> arrNum=[<span class="hljs-string">"0"</span>,<span class="hljs-string">"1"</span>,<span class="hljs-string">"2"</span>,<span class="hljs-string">"3"</span>,<span class="hljs-string">"4"</span>,<span class="hljs-string">"5"</span>,<span class="hljs-string">"6"</span>,<span class="hljs-string">"7"</span>,<span class="hljs-string">"8"</span>,<span class="hljs-string">"9"</span>,<span class="hljs-string">"A"</span>,<span class="hljs-string">"B"</span>,<span class="hljs-string">"C"</span>,<span class="hljs-string">"D"</span>,<span class="hljs-string">"E"</span>,<span class="hljs-string">"F"</span>];<br><span class="hljs-keyword">var</span> arrFirst=<span class="hljs-string">"#"</span>;<br><span class="hljs-keyword">var</span> index;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">6</span>;i++)&#123;<br>index=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">16</span>);<br>arrFirst+=arrNum[index];<br>&#125;<br><span class="hljs-keyword">return</span> arrFirst;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randombgcolor</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">var</span> color=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<br>color[i]=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">256</span>);<br>&#125;<br><span class="hljs-keyword">return</span> color;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeBox</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">var</span> kuan=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">501</span>)+<span class="hljs-number">100</span>;<br><span class="hljs-keyword">var</span> gao=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">501</span>)+<span class="hljs-number">100</span>;<br><span class="hljs-keyword">var</span> bgc=randombgcolor();<br><span class="hljs-keyword">var</span> box=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"yuan-box"</span>)<br>box.style.width=kuan+<span class="hljs-string">"px"</span>;<br>box.style.height=gao+<span class="hljs-string">"px"</span>;<br>box.style.backgroundColor=<span class="hljs-string">"rgb("</span>+bgc[<span class="hljs-number">0</span>]+<span class="hljs-string">","</span>+bgc[<span class="hljs-number">1</span>]+<span class="hljs-string">","</span>+bgc[<span class="hljs-number">2</span>]+<span class="hljs-string">")"</span><br>box.innerHTML=<span class="hljs-string">"width:"</span>+kuan+<span class="hljs-string">"px"</span>+<span class="hljs-string">"&lt;br&gt;height:"</span>+gao+<span class="hljs-string">"px"</span>+<span class="hljs-string">"&lt;br&gt;color"</span>+bgcolor;<br>&#125;<br></code></pre></td></tr></table></figure><p>html部分</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"changeBox()"</span>&gt;</span>随机变化<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"yuan-box"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>改代码实现了随机变换盒子长宽和背景颜色</p><h2 id="点击随机访问网址">点击随机访问网址</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> urls=[<span class="hljs-string">"https://www.sogou.com/?hdq=sogou-wsse-90fd4f88f588ae64&amp;np=1"</span>,<br><span class="hljs-string">"https://www.soso.com/?hdq=sogou-wsse-90fd4f88f588ae64&amp;np=1"</span>,<br><span class="hljs-string">"https://123.sogou.com/"</span>,<br><span class="hljs-string">"http://cn.chinadaily.com.cn/"</span>];<br>rdiv=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"random_link"</span>),<br>rand=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*urls.length);<br>rdiv.innerHTML=<span class="hljs-string">'&lt;a href="'</span>+urls[rand]+<span class="hljs-string">'"&gt;随机网址！&lt;/a&gt;'</span>;<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"random_link"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.baidu.com/"</span>&gt;</span>随机网址！<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="js随机更换背景颜色">js随机更换背景颜色</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomColor</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">var</span> arrNum=[<span class="hljs-string">"0"</span>,<span class="hljs-string">"1"</span>,<span class="hljs-string">"2"</span>,<span class="hljs-string">"3"</span>,<span class="hljs-string">"4"</span>,<span class="hljs-string">"5"</span>,<span class="hljs-string">"6"</span>,<span class="hljs-string">"7"</span>,<span class="hljs-string">"8"</span>,<span class="hljs-string">"9"</span>,<span class="hljs-string">"A"</span>,<span class="hljs-string">"B"</span>,<span class="hljs-string">"C"</span>,<span class="hljs-string">"D"</span>,<span class="hljs-string">"E"</span>,<span class="hljs-string">"F"</span>];<br>    <span class="hljs-keyword">var</span> arrFirst=<span class="hljs-string">"#"</span>;<br>    <span class="hljs-keyword">var</span> index;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">6</span>;i++)&#123;<br>    index=<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">16</span>);<br>    arrFirst+=arrNum[index];<br>    &#125;<br>    <span class="hljs-keyword">return</span> arrFirst;<br>&#125;<br><span class="hljs-comment">//调用更换背景的方法，在页面上设置一个按钮或者设置自动更换即可</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeColor</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">document</span>.bgColor=randomColor();<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;js如何生成随机数&lt;/h1&gt;
&lt;h2 id=&quot;js-可以使用-Math（算数）-对象来实现随机数的生成。&quot;&gt;js 可以使用 Math（算数） 对象来实现随机数的生成。&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript技巧" scheme="http://yoursite.com/tags/javaScript%E6%8A%80%E5%B7%A7/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>javaScript</title>
    <link href="http://yoursite.com/2019/02/24/js/js-lunbo/"/>
    <id>http://yoursite.com/2019/02/24/js/js-lunbo/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-26T05:15:35.007Z</updated>
    
    <content type="html"><![CDATA[<h1>如何用js实现图片轮播图片切换</h1><p>实现轮播的方式用到了几个js的原生函数和数组</p><h2 id="setInterval">setInterval()</h2><p>该方法可按照指定的 <strong>周期（以毫秒计)</strong> 来调用函数或计算表达式。<br>setInterval() 方法会不停地调用函数，直到 clearInterval() 被<strong>调用</strong> <em>或</em> <strong>窗口被关闭</strong>。由 setInterval() 返回的 ID 值可用作 clearInterval() 方法的参数。<br>tip:1000 毫秒= 1 秒<br>tip:如果你只想执行一次可以使用 setTimeout() 方法。</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>code/function</td><td>必需。要调用一个代码串，也可以是一个函数。</td></tr><tr><td>milliseconds</td><td>必须。周期性执行或调用 code/function 之间的时间间隔，以毫秒计。</td></tr><tr><td>param1, param2, …</td><td>可选。 传给执行函数的其他参数（IE9 及其更早版本不支持该参数）</td></tr></tbody></table><h2 id="和setTimeout-对比主要区别是循环与不循环">和setTimeout()对比主要区别是循环与不循环</h2><p>tip: 一定不要忘了用clearTimeout()阻止函数执行</p><p>实现代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> myimg=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-string">"1.png"</span>,<span class="hljs-string">"2.png"</span>,<span class="hljs-string">"3.png"</span>,<span class="hljs-string">"4.png"</span>);<br><span class="hljs-keyword">var</span> urls=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-string">"https://URL地址1"</span>,<br>                        <span class="hljs-string">"https://URL地址2"</span>,<br>                        <span class="hljs-string">"https://URL地址3"</span>,<br>                        <span class="hljs-string">"http://URL地址4"</span>);<br>    <span class="hljs-keyword">var</span> r=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-string">"图1"</span>,<span class="hljs-string">"图2"</span>,<span class="hljs-string">"图3"</span>,<span class="hljs-string">"图4"</span>);<br><span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">var</span> tupian=<span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">"img"</span>)[<span class="hljs-number">0</span>];<span class="hljs-comment">/*[0]是指html中第一个img，想要获取第二个img则用[1]。*/</span><br><span class="hljs-keyword">var</span> utip=<span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">"a"</span>)[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">var</span> u=<span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">"p"</span>)[<span class="hljs-number">0</span>];<br>setInterval(<span class="hljs-string">"changeimg()"</span>,<span class="hljs-number">2000</span>)<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeimg</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-comment">//tupian.setAttribute("src","img/"+myimg[i++]);</span><br>rand=i++;<br><span class="hljs-keyword">if</span>(i==myimg.length)&#123;<br>i=<span class="hljs-number">0</span>;<br>&#125;<br>utip.innerHTML=<span class="hljs-string">'&lt;a href="'</span>+urls[rand]+<span class="hljs-string">'"&gt;&lt;img src="img/'</span>+myimg[rand]+<span class="hljs-string">'" /&gt;&lt;/a&gt;'</span>;<br>u.innerHTML=r[rand];<br>&#125;<br></code></pre></td></tr></table></figure><p>htm部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"http://cn.chinadaily.com.cn/"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/4.png"</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>图4<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;如何用js实现图片轮播图片切换&lt;/h1&gt;
&lt;p&gt;实现轮播的方式用到了几个js的原生函数和数组&lt;/p&gt;
&lt;h2 id=&quot;setInterval&quot;&gt;setInterval()&lt;/h2&gt;
&lt;p&gt;该方法可按照指定的 &lt;strong&gt;周期（以毫秒计)&lt;/strong&gt; 来调用函数或
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript技巧" scheme="http://yoursite.com/tags/javaScript%E6%8A%80%E5%B7%A7/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>javaScript-图片蒙版</title>
    <link href="http://yoursite.com/2019/02/24/js/js-mengban/"/>
    <id>http://yoursite.com/2019/02/24/js/js-mengban/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-26T05:30:51.614Z</updated>
    
    <content type="html"><![CDATA[<h1>js如何实现图片蒙版</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css"><span class="hljs-selector-class">.box</span>&#123;</span><br>width: 800px;<br>height: 400px;<br>float: left;<br>position: relative;<br>overflow: hidden;<br>margin-left: 3px;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.box</span> <span class="hljs-selector-class">.brick</span>&#123;</span><br>position: absolute;<br>overflow: hidden;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.box</span> <span class="hljs-selector-class">.mask</span>&#123;</span><br><span class="css"><span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#666</span>;</span><br>position: absolute;<br>top: 0px;<br>left: 0px;<br>z-index: 100;<br><span class="css"><span class="hljs-selector-tag">opacity</span>: 0<span class="hljs-selector-class">.5</span>;</span><br>overflow: hidden;<br>&#125;<br>img&#123;<br>border: none;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick1</span> <span class="hljs-selector-tag">img</span>,<span class="hljs-selector-id">#brick1</span> <span class="hljs-selector-class">.mask</span>&#123;</span><br>width: 400px;<br>height: 240px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick2</span> <span class="hljs-selector-tag">img</span>,<span class="hljs-selector-id">#brick2</span> <span class="hljs-selector-class">.mask</span>&#123;</span><br>width: 200px;<br>height: 160px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick3</span> <span class="hljs-selector-tag">img</span>,<span class="hljs-selector-id">#brick3</span> <span class="hljs-selector-class">.mask</span>&#123;</span><br>width: 200px;<br>height: 160px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick4</span> <span class="hljs-selector-tag">img</span>,<span class="hljs-selector-id">#brick4</span> <span class="hljs-selector-class">.mask</span>&#123;</span><br>width: 200px;<br>height: 160px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick5</span> <span class="hljs-selector-tag">img</span>,<span class="hljs-selector-id">#brick5</span> <span class="hljs-selector-class">.mask</span>&#123;</span><br>width: 200px;<br>height: 160px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick6</span> <span class="hljs-selector-tag">img</span>,<span class="hljs-selector-id">#brick6</span> <span class="hljs-selector-class">.mask</span>&#123;</span><br>width: 400px;<br>height: 240px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick1</span>&#123;</span><br>left: 0px;<br>top: 0px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick2</span>&#123;</span><br>left: 400px;<br>top: 0px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick3</span>&#123;</span><br>left: 600px;<br>top: 0px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick4</span>&#123;</span><br>left: 0px;<br>top: 240px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick5</span>&#123;</span><br>left: 200px;<br>top: 240px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#brick6</span>&#123;</span><br>left: 400px;<br>top: 160px;<br>&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"js/jquery-3.3.1.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">$(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">$(<span class="hljs-string">".brick"</span>).hover(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">$(<span class="hljs-string">".mask"</span>).show();</span><br><span class="javascript">$(<span class="hljs-keyword">this</span>).find(<span class="hljs-string">".mask"</span>).hide();</span><br>&#125;,<br><span class="actionscript"><span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="javascript">$(<span class="hljs-string">".mask"</span>).hide();</span><br>&#125;)<br>&#125;)<br>/*(1)show();hide()<br>  (2)fadeIn();fadeOut()<br>  (3)slideUp();slideDown();*/<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"box"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"brick1"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"brick"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.1.png"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mask"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"brick2"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"brick"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.2.png"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mask"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"brick3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"brick"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.3.png"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mask"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"brick4"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"brick"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.4.png"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mask"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"brick5"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"brick"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.5.png"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mask"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"brick6"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"brick"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.6.png"</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mask"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>实现效果<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/mengban.gif" alt="mengban"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;js如何实现图片蒙版&lt;/h1&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/s
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript技巧" scheme="http://yoursite.com/tags/javaScript%E6%8A%80%E5%B7%A7/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>javaScript-轮播图</title>
    <link href="http://yoursite.com/2019/02/24/js/js-lunbotu/"/>
    <id>http://yoursite.com/2019/02/24/js/js-lunbotu/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-26T05:16:00.793Z</updated>
    
    <content type="html"><![CDATA[<h1>Js实现轮播图</h1><h2 id="Jquery实现轮播图">Jquery实现轮播图</h2><p>主要实现了以下几个功能：</p><ol><li>banner轮播效果</li><li>鼠标移入出现标题</li><li>鼠标移入放大图片</li><li>左右点击按钮</li></ol><p>js部分代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script type=<span class="hljs-string">"text/javascript"</span> src=<span class="hljs-string">"js/jquery-3.3.1.js"</span>&gt;&lt;<span class="hljs-regexp">/script&gt;</span><br><span class="hljs-regexp">&lt;script&gt;</span><br><span class="hljs-regexp">$(document).ready(function()&#123;</span><br><span class="hljs-regexp">var xuhao=0,kuan=340;</span><br><span class="hljs-regexp">var amount=6;</span><br><span class="hljs-regexp">$(".button-left").click(function()&#123;</span><br><span class="hljs-regexp">changelist("left");</span><br><span class="hljs-regexp">&#125;)</span><br><span class="hljs-regexp">$(".button-right").click(function()&#123;</span><br><span class="hljs-regexp">changelist("right");</span><br><span class="hljs-regexp">&#125;)</span><br><span class="hljs-regexp">$(".dian span").click(function()&#123;</span><br><span class="hljs-regexp">var index=$(".dian span").index(this);</span><br><span class="hljs-regexp">changelist(index);</span><br><span class="hljs-regexp">&#125;)</span><br><span class="hljs-regexp">function changelist(canshu)&#123;</span><br><span class="hljs-regexp">if(!isNaN(canshu))&#123;</span><br><span class="hljs-regexp">xuhao=canshu;</span><br><span class="hljs-regexp">&#125;</span><br><span class="hljs-regexp">else if(canshu=="left")&#123;</span><br><span class="hljs-regexp">xuhao--;</span><br><span class="hljs-regexp">if(xuhao==-1)</span><br><span class="hljs-regexp"> xuhao=amount-1</span><br><span class="hljs-regexp">&#125;</span><br><span class="hljs-regexp">else if(canshu=="right")&#123;</span><br><span class="hljs-regexp">xuhao=(xuhao+1)%amount;</span><br><span class="hljs-regexp">&#125;</span><br><span class="hljs-regexp">var change=-kuan*xuhao+"px"</span><br><span class="hljs-regexp">$(".slide").animate(&#123;marginLeft:change&#125;,1000)</span><br><span class="hljs-regexp">$(".dian span").removeClass("curr").eq(xuhao).addClass("curr");</span><br><span class="hljs-regexp">&#125;</span><br><span class="hljs-regexp">&#125;)</span><br><span class="hljs-regexp">var xuhao=0,kuan=340;</span><br><span class="hljs-regexp">var amount=6;</span><br><span class="hljs-regexp">$(function()&#123;</span><br><span class="hljs-regexp"></span><br><span class="hljs-regexp">$(".button-left").click(function()&#123;</span><br><span class="hljs-regexp"> </span><br><span class="hljs-regexp">&#125;)</span><br><span class="hljs-regexp">&#125;)</span><br></code></pre></td></tr></table></figure><p>html部分代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br>p,ul&#123;<br>padding: 0;<br>margin: 0;<br>&#125;<br>a&#123;<br>text-decoration: none;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.yuan-box</span>&#123;</span><br>position: relative;<br>width: 340px;<br>height: 260px;<br>overflow: hidden;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.slide</span>&#123;</span><br>position: relative;<br>width: 9999px;<br>height: 227px;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.button-left</span>,<span class="hljs-selector-class">.button-right</span>&#123;</span><br>position: absolute;<br>width: 19px;<br>height: 48px;<br>top: 100px;<br>z-index: 10;<br>cursor: pointer;<br>overflow: hidden;<br><span class="css"><span class="hljs-selector-tag">background</span>: <span class="hljs-selector-tag">rgba</span>(0,0,0,0<span class="hljs-selector-class">.5</span>) <span class="hljs-selector-tag">none</span> <span class="hljs-selector-tag">repeat</span> <span class="hljs-selector-tag">scroll</span> 0 0;</span><br>&#125;<br><span class="css"><span class="hljs-selector-class">.button-left</span> <span class="hljs-selector-tag">span</span>,<span class="hljs-selector-class">.button-right</span> <span class="hljs-selector-tag">span</span>&#123;</span><br>width: 34px;<br>height: 56px;<br>display: block;<br>overflow: hidden;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.button-left</span>&#123;</span><br>left: 0;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.button-left</span> <span class="hljs-selector-tag">span</span>&#123;</span><br>background-image: url(img/zhd.png);<br>&#125;<br><span class="css"><span class="hljs-selector-class">.button-right</span>&#123;</span><br>right: 0px;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.button-right</span> <span class="hljs-selector-tag">span</span>&#123;</span><br>background-image: url(img/yhd.png);<br>&#125;<br><span class="css"><span class="hljs-selector-class">.button-left</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-class">.button-right</span><span class="hljs-selector-pseudo">:hover</span>&#123;</span><br><span class="css"><span class="hljs-selector-tag">background</span>: <span class="hljs-selector-tag">rgba</span>(0,0,0,0<span class="hljs-selector-class">.8</span>) <span class="hljs-selector-tag">none</span> <span class="hljs-selector-tag">repeat</span> <span class="hljs-selector-tag">scroll</span> 0 0;</span><br>&#125;<br><span class="css"><span class="hljs-selector-class">.button-right</span>&#123;</span><br>position: absolute;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.list</span>&#123;</span><br>width: 340px;<br>height: 227px;<br>float: left;<br>position: relative;<br>overflow: hidden;<br><br>&#125;<br><span class="css"><span class="hljs-selector-class">.list</span> <span class="hljs-selector-tag">p</span>&#123;</span><br>font-size: 14px;<br>line-height: 33px;<br><span class="css"><span class="hljs-selector-tag">color</span>: <span class="hljs-selector-id">#fff</span>;</span><br><span class="css"><span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#000</span>;</span><br><span class="css"><span class="hljs-selector-tag">background</span>: <span class="hljs-selector-tag">rgba</span>(0,0,0,0<span class="hljs-selector-class">.5</span>);</span><br>text-align: center;<br>height: 33px;<br>width: 100%;<br>position: absolute;<br>left: 0px;<br>bottom: 0px;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.dian</span>&#123;</span><br>width: 140px;<br>height: 33px;<br>clear: both;<br>float: right;<br>padding-top: 8px;<br>text-align: right;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.dian</span> <span class="hljs-selector-tag">span</span>&#123;</span><br>width: 13px;<br>height: 13px;<br><span class="css"><span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#ccc</span>;</span><br><span class="css"><span class="hljs-selector-tag">opacity</span>: 0<span class="hljs-selector-class">.5</span>;</span><br>float: left;<br>margin-left: 7px;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.dian</span> <span class="hljs-selector-class">.curr</span>&#123;</span><br><span class="css"><span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#03c</span>;</span><br>&#125;<br><span class="css"><span class="hljs-selector-class">.list</span> <span class="hljs-selector-tag">img</span>&#123;</span><br>height: 227px;<br>width: 340px;<br>border: 0 none;<br>transition: all 2s;<br>&#125;<br><span class="css"><span class="hljs-selector-class">.list</span> <span class="hljs-selector-tag">img</span><span class="hljs-selector-pseudo">:hover</span>&#123;</span><br><span class="css"><span class="hljs-selector-tag">transform</span>: <span class="hljs-selector-tag">scale</span>(1<span class="hljs-selector-class">.6</span>);</span><br><br><br>&#125;<br><br><span class="css"><span class="hljs-selector-class">.list</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">p</span>&#123;</span><br>text-shadow: 6px 6px 6px white;<br>&#125;<br>body&#123;<br>background-color: white;<br>&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"yuan-box"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"button-left btnHover"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"button-right"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"slide"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.1.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>网站电脑版一级页面（网站首页）<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.2.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>网站电脑版二级页面（网站首页）<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.3.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>网站电脑版三级页面（网站首页）<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.4.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>网站手机版一级页面（网站首页）<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.5.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>网站手机版二级页面（网站首页）<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"list"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/1.6.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>网站手机版三级页面（网站首页）<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"dian"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"curr"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/mcYOvg.png" alt="mcYOvg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Js实现轮播图&lt;/h1&gt;
&lt;h2 id=&quot;Jquery实现轮播图&quot;&gt;Jquery实现轮播图&lt;/h2&gt;
&lt;p&gt;主要实现了以下几个功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;banner轮播效果&lt;/li&gt;
&lt;li&gt;鼠标移入出现标题&lt;/li&gt;
&lt;li&gt;鼠标移入放大图片&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript技巧" scheme="http://yoursite.com/tags/javaScript%E6%8A%80%E5%B7%A7/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>javaScript-手风琴</title>
    <link href="http://yoursite.com/2019/02/24/js/js-shoufq/"/>
    <id>http://yoursite.com/2019/02/24/js/js-shoufq/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-26T05:17:47.291Z</updated>
    
    <content type="html"><![CDATA[<h1>Jquery如何实现手风琴效果</h1><h3 id="js部分代码">js部分代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//设计师手风琴展示</span><br> <span class="hljs-keyword">if</span> (windowWidth &gt; <span class="hljs-number">1024</span>) &#123;<br>     $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>         <span class="hljs-keyword">var</span> gao = <span class="hljs-number">0</span>;<br>         gao = $(<span class="hljs-string">".shoufengqing-box li:nth-child(odd)"</span>).height() * <span class="hljs-number">1</span>;<br>         $(<span class="hljs-string">".shoufengqing-box li:nth-child(even)"</span>).height(gao); <span class="hljs-comment">//让偶数的li高自适应</span><br>         $(<span class="hljs-string">".shoufengqing-box li:nth-child(odd)"</span>).hide();<br>         $(<span class="hljs-string">".shoufengqing-box li:nth-child(7)"</span>).show();<br>         $(<span class="hljs-string">".shoufengqing-box li:odd"</span>).mouseover(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>             $(<span class="hljs-string">".shoufengqing-box li:even"</span>).hide();<br>             $(<span class="hljs-keyword">this</span>).prev().show();<br>         &#125;)<br>     &#125;)<br> &#125;<br></code></pre></td></tr></table></figure><h3 id="html部分代码">html部分代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shoufengqing"</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shoufengqing-text"</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>GUCCI2019设计师新款大秀<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shoufengqing-box"</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"box"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/GUCCI-1.png"</span>/ <span class="hljs-attr">width</span>=<span class="hljs-string">"100%"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>GUCCI2018设计师大秀<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"red"</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>G<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"box"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/GUCCI-2.jpg"</span>/ <span class="hljs-attr">width</span>=<span class="hljs-string">"100%"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>GUCCI2018设计师大秀<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"green"</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>U<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"box"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/GUCCI-3.jpg"</span>/ <span class="hljs-attr">width</span>=<span class="hljs-string">"100%"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>GUCCI2018设计师大秀<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"red"</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>C<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"box"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/GUCCI-4.jpg"</span>/ <span class="hljs-attr">width</span>=<span class="hljs-string">"100%"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>GUCCI2018设计师大秀<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"green"</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>C<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"box"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/GUCCI-6.jpg"</span>/ <span class="hljs-attr">width</span>=<span class="hljs-string">"100%"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>GUCCI2018设计师大秀<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"red"</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"box"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/GUCCI-7.jpg"</span>/ <span class="hljs-attr">width</span>=<span class="hljs-string">"100%"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"img2"</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>GUCCI2018设计师大秀<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"green"</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&amp;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="css部分">css部分</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.shoufengqing</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">height</span>: auto;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">20px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.shoufengqing-text</span> <span class="hljs-selector-tag">h1</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">3.2em</span>;<br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">75%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.shoufengqing-box</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">80%</span>;<br>    <span class="hljs-attribute">height</span>: auto;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> auto;<br>&#125;<br><br><span class="hljs-selector-class">.shoufengqing-box</span> <span class="hljs-selector-tag">ul</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">80%</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0px</span> auto;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">7%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.shoufengqing-box</span> <span class="hljs-selector-tag">li</span> &#123;<br>    <span class="hljs-attribute">float</span>: left;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#228B22</span>;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">0px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.shoufengqing-box</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(odd)</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">20%</span>;<br>    <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.shoufengqing-box</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(even)</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">10%</span>;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">350%</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.shoufengqing-box</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(even)</span> <span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">color</span>: white;<br>&#125;<br><br><span class="hljs-selector-class">.red</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: red;<br>&#125;<br><br><span class="hljs-selector-class">.green</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: green;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="最终效果">最终效果</h3><p><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/shoufengqing.gif" alt="shoufengqing"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Jquery如何实现手风琴效果&lt;/h1&gt;
&lt;h3 id=&quot;js部分代码&quot;&gt;js部分代码&lt;/h3&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/s
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript技巧" scheme="http://yoursite.com/tags/javaScript%E6%8A%80%E5%B7%A7/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>javaScript实现菜单栏</title>
    <link href="http://yoursite.com/2019/02/24/js/js-show/"/>
    <id>http://yoursite.com/2019/02/24/js/js-show/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-26T05:13:56.370Z</updated>
    
    <content type="html"><![CDATA[<h1>javaScript原生代码实现隐藏和显示</h1><h2 id="tab选项卡">tab选项卡</h2><p>通过控制盒子的隐藏显示来实现</p><p>JS部分</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">showtab</span>(<span class="hljs-params">n</span>)</span>&#123;<br><span class="hljs-keyword">var</span> t1=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"tab1"</span>);<br><span class="hljs-keyword">var</span> t2=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"tab2"</span>);<br><span class="hljs-keyword">var</span> t3=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"tab3"</span>);<br>t1.style.display=<span class="hljs-string">"none"</span>;<br>t1.style.backgroundImage=<span class="hljs-string">"url(img/下载.jpg)"</span>;<br>t2.style.display=<span class="hljs-string">"none"</span>;<br>t2.style.backgroundImage=<span class="hljs-string">"url(img/下载1.jpg)"</span>;<br>t3.style.display=<span class="hljs-string">"none"</span>;<br>t3.style.backgroundImage=<span class="hljs-string">"url(img/u=623156728,2425808261&amp;fm=200&amp;gp=0.jpg)"</span>;<br><span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>)&#123;<br>t1.style.display=<span class="hljs-string">"block"</span>;<br>t1.style.fontSize=<span class="hljs-string">"100px"</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(n==<span class="hljs-number">2</span>)&#123;<br>t2.style.display=<span class="hljs-string">"block"</span>;<br>t2.style.fontSize=<span class="hljs-string">"100px"</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(n==<span class="hljs-number">3</span>)&#123;<br>t3.style.display=<span class="hljs-string">"block"</span>;<br>t3.style.fontSize=<span class="hljs-string">"100px"</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>html部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"yuan-tab"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tab-top"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">onmouseover</span>=<span class="hljs-string">"showtab(1)"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"change()"</span>&gt;</span>手机<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">onmouseover</span>=<span class="hljs-string">"showtab(2)"</span>&gt;</span>数码<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">onmouseover</span>=<span class="hljs-string">"showtab(3)"</span>&gt;</span>咨询<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tab1"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"tab-content"</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tab2"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"tab-content none"</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tab3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"tab-content none"</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>实现效果<br><img src="http://jonyblog.oss-cn-beijing.aliyuncs.com/blog/tb567l.png" alt="tb567l"></p><h2 id="下拉菜单">下拉菜单</h2><p>通过使用onmouseover=&quot;showmenu()&quot;方法，当鼠标放入的时候执行函数，让盒子显示和隐藏</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">showmenu</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">var</span> box=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"box"</span>)<br>box.style.display=<span class="hljs-string">"block"</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hidemenu</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">var</span> box=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"box"</span>)<br>box.style.display=<span class="hljs-string">"none"</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>html部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css"><span class="hljs-selector-id">#menu</span>&#123;</span><br>position: relative;<br>width: 100px;<br>height: 36px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#menu</span> <span class="hljs-selector-tag">h3</span>&#123;</span><br>height: 36px;<br>padding: 0;<br>margin: 0;<br>font-size: 20px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#box</span>&#123;</span><br>position: absolute;<br>top: 36px;<br>width: 120px;<br>height: 120px;<br>left: -12px;<br><span class="css"><span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#c00</span>;</span><br>display: none;<br>&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"menu"</span> <span class="hljs-attr">onmouseover</span>=<span class="hljs-string">"showmenu()"</span> <span class="hljs-attr">onmouseout</span>=<span class="hljs-string">"hidemenu()"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>下拉菜单<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"box"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="js原生实现菜单栏">js原生实现菜单栏</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>$(<span class="hljs-string">"#box ul li"</span>).hover(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>$(<span class="hljs-keyword">this</span>).find(<span class="hljs-string">"ul"</span>).show();<br>&#125;,<br><span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>$(<span class="hljs-keyword">this</span>).find(<span class="hljs-string">"ul"</span>).hide();<br>&#125;)<br>&#125;)<br></code></pre></td></tr></table></figure><p>html部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br>ul&#123;<br>margin: 0px;<br>padding: 0px;<br>list-style: none;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#box</span>&#123;</span><br>width: 700px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#box</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span>&#123;</span><br>float: left;<br>width: 95px;<br>font-size: 14px;<br>position: relative;<br>line-height: 30px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#box</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">a</span>&#123;</span><br><span class="css"><span class="hljs-selector-tag">color</span>: <span class="hljs-selector-id">#903</span>;</span><br>text-decoration: none;<br>font-size: 14px;<br>font-weight: bold;<br>text-align: center;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#box</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span>&#123;</span><br>text-align: center;<br><span class="css"><span class="hljs-selector-tag">color</span>: <span class="hljs-selector-id">#009</span>;</span><br>padding-bottom: 4px;<br>border-bottom-width: 1px;<br>border-bottom-style: dotted;<br><span class="css"><span class="hljs-selector-tag">border-bottom-color</span>: <span class="hljs-selector-id">#00c</span>;</span><br>line-height: 18px;<br>padding-top: 4px;<br>width: 90px;<br>&#125;<br><span class="css"><span class="hljs-selector-id">#box</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">ul</span>&#123;</span><br>position: absolute;<br>left: -10px;<br>top: 30px;<br>display: none;<br><span class="css"><span class="hljs-selector-tag">border</span>: 1<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">dotted</span> <span class="hljs-selector-id">#009</span>;</span><br>border-bottom: none;<br>width: 90px;<br>&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"box"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>JavaScript<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>javaScript基础<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>函数和事件<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>对象<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>数组<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>表单校验<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>定时器<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>jQuery<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"3-1.html"</span>&gt;</span>项目3-1<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"3-3.html"</span>&gt;</span>项目3-3<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"3-4.html"</span>&gt;</span>项目3-4<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"3-5.html"</span>&gt;</span>项目3-5<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"3-6.html"</span>&gt;</span>项目3-6<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"3-7.html"</span>&gt;</span>项目3-7<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"3-8.html"</span>&gt;</span>项目3-8<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"3-9.html"</span>&gt;</span>项目3-9<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"3-10.html"</span>&gt;</span>项目3-10<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Photoshop<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Dreamweaver<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Flash<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Fireworks<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Notepad++<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>高级知识<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>JavaScript<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>jQuery<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>HTML5<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>SEO<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>实现的方法还有很多种，例如jqery、css的实现方法，但是还是那句话，学习任何一门语言，任何一个技术，不要垢泥于技术本身，而应该关注技术的发展，技术背后的编程思想。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;javaScript原生代码实现隐藏和显示&lt;/h1&gt;
&lt;h2 id=&quot;tab选项卡&quot;&gt;tab选项卡&lt;/h2&gt;
&lt;p&gt;通过控制盒子的隐藏显示来实现&lt;/p&gt;
&lt;p&gt;JS部分&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript技巧" scheme="http://yoursite.com/tags/javaScript%E6%8A%80%E5%B7%A7/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
