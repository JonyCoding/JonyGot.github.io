<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jony&#39;s blog</title>
  
  <subtitle>记录每一次成长</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-27T04:11:33.175Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jony</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>tip-阿里云作为图床</title>
    <link href="http://yoursite.com/2020/03/25/tip/tip-fdl/"/>
    <id>http://yoursite.com/2020/03/25/tip/tip-fdl/</id>
    <published>2020-03-25T15:02:34.000Z</published>
    <updated>2020-03-27T04:11:33.175Z</updated>
    
    <content type="html"><![CDATA[<h1>为什么用阿里云OSS作图床</h1><h2 id="免费图床">免费图床</h2><ul><li>完全免费图床<br>我知道的完全免费而且好用的就是<strong>SMMS</strong>和<strong>码云</strong>，但是他们有一个弊端就是不够安全，将图片上传后，万一有一天网站挂了或者停止外链获取之后，你的博客或者应用就会出现一堆无图片的情况。那会看着一大堆图片，还有需要修改一大堆链接地址……emmm不多说。虽然现在网上有很多python写的脚本可以自动化完成，但是依旧很费心费力，而且一个操作失误也可能会酿成大错。</li></ul><a id="more"></a><ul><li>一定额度内免费切稳定安全的<br>七牛储存，这个作为国内云服务提供商，稳定性还是挺不错的，新注册用户自带10G免费额度，如果你不用https来解析的话，完全不用花钱。之前一直用用七牛云做图床，其实在速度方面还是可以的，我的很多图片都储存在上面。</li></ul><h2 id="七牛云做图床的坑点">七牛云做图床的坑点</h2><p>七牛云因为有不法分子利用这个免费空间的空子，将一些违法的东西上传到上面（比如你硬盘里的东西），导致七牛云开始强制域名绑定且必须是<strong>备案</strong>的域名，否则只能用三十天测试域名，<strong>到期后不能找回！！！</strong> 我用图床主要是为小程序和博客以及一些小项目做外链，小程序的后台放在了新浪云应用，所以也没有租服务器的需求，新浪云应用的域名备案需要花费费用达到一定额度才可以，所以放弃。这就导致了……迁移图床，于是综合考虑，把域名迁移到阿里云。</p><p>7.2元成本购买一年40G的OSS对博客里说完全够用</p><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/nLDYQ6.png" alt="nLDYQ6"></p><p>具体如何配置百度很多教程，不多赘述，主要说说几个需要注意的点：</p><h1>阿里云OSS坑点</h1><h2 id="购买完OSS记着往余额充点钱">购买完OSS记着往余额充点钱</h2><p>购买完OSS并配置完成后，一切功能正常，就没再管，但是过了两天突然发现博客图片不见了，作者页面的视频也没了，复制src链接到浏览器也无法访问，进入控制后台才发现原来是欠费了！！！因为是按量计费，如果你之前没用过阿里云的服务的话，那你购买完OSS一定要记着再充点钱进去，tip:其实如果你绑定了邮箱的话它会邮箱提醒你的。<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/J7aqUJ.png" alt="J7aqUJ"></p><h2 id="设置-Referer-白名单">设置 Referer 白名单</h2><p>防盗链可以很好的防止其他用户盗用自己的图片链接，用在自己的应用下面，因为阿里云按量付费，所以设置白名单很有必要。还有现在恶意爬虫也会让你分分钟余额清零。<br>设置防盗链这也是一个坑点，一定要记着给域名前面加请求协议，也就是&quot;http://“或者&quot;https://”，我刚开始没有加（因为给的样例就没有），所以一直无法访问，百思不得其解，最后直接从浏览器复制地址进去才OK了。</p><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/HmXGPz.png" alt="HmXGPz"></p><h2 id="一定要注意选择标准储存（补）">一定要注意选择标准储存（补）</h2><p>购买的“标准存储包(中国大陆)”只能用来抵扣“标准”的Bucket，不能用来抵扣“低频访问”的Bucket，之前买的标准储存实际上没有使用！得亏发现的及时，于是下载了阿里的图形化工具进行了图床的迁移（在同一地区且文件小于1G）</p>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;为什么用阿里云OSS作图床&lt;/h1&gt;
&lt;h2 id=&quot;免费图床&quot;&gt;免费图床&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;完全免费图床&lt;br&gt;
我知道的完全免费而且好用的就是&lt;strong&gt;SMMS&lt;/strong&gt;和&lt;strong&gt;码云&lt;/strong&gt;，但是他们有一个弊端就是不够安全，将图片上传后，万一有一天网站挂了或者停止外链获取之后，你的博客或者应用就会出现一堆无图片的情况。那会看着一大堆图片，还有需要修改一大堆链接地址……emmm不多说。虽然现在网上有很多python写的脚本可以自动化完成，但是依旧很费心费力，而且一个操作失误也可能会酿成大错。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="tip" scheme="http://yoursite.com/categories/tip/"/>
    
    
      <category term="避坑指南" scheme="http://yoursite.com/tags/%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97/"/>
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>tip-微信跳转第三方小程序</title>
    <link href="http://yoursite.com/2020/03/25/tip/tip-xcxtz/"/>
    <id>http://yoursite.com/2020/03/25/tip/tip-xcxtz/</id>
    <published>2020-03-25T15:02:34.000Z</published>
    <updated>2020-03-27T04:11:45.985Z</updated>
    
    <content type="html"><![CDATA[<h1>微信如何跳转第三方小程序</h1><h2 id="首先设置app-json">首先设置app.json</h2><p>这个一定不要忘了，当时我设置就是忘了这个，浪费了很多时间。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-string">"navigateToMiniProgramAppIdList"</span>: [<br>    <span class="hljs-string">"wx32540bd863b27570"</span><br>],<br></code></pre></td></tr></table></figure><a id="more"></a><h2 id="在js界面设置跳转函数">在js界面设置跳转函数</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs 1c">wx.navigateToMiniProgram(&#123;<br>  appId: 'wx<span class="hljs-number">3254</span>0bd863b<span class="hljs-number">2757</span>0',<span class="hljs-comment">//这个是跳转拼多多的</span><br>  path: that.data.mobilUrl,<br>  success(res) &#123;<br>    console.<span class="hljs-built_in">log</span>(<span class="hljs-string">"我已经到达PDD了"</span>)<br>  &#125;,<br>  fail(err) &#123;<br>    <span class="hljs-comment">// 打开失败</span><br>    console.<span class="hljs-built_in">log</span>(err)<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p>很早以前小程序跳转需要绑定公众号才可以，很麻烦，但是2018年微信发出一个公告，可以不用绑定了，确实方便了很多。<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/EcVWHC.png" alt="小程序跳转"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;微信如何跳转第三方小程序&lt;/h1&gt;
&lt;h2 id=&quot;首先设置app-json&quot;&gt;首先设置app.json&lt;/h2&gt;
&lt;p&gt;这个一定不要忘了，当时我设置就是忘了这个，浪费了很多时间。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs js&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;navigateToMiniProgramAppIdList&quot;&lt;/span&gt;: [&lt;br&gt;    &lt;span class=&quot;hljs-string&quot;&gt;&quot;wx32540bd863b27570&quot;&lt;/span&gt;&lt;br&gt;],&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="tip" scheme="http://yoursite.com/categories/tip/"/>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="避坑指南" scheme="http://yoursite.com/tags/%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>小程序发布及上线</title>
    <link href="http://yoursite.com/2020/02/23/wx/wx-bushu/"/>
    <id>http://yoursite.com/2020/02/23/wx/wx-bushu/</id>
    <published>2020-02-23T15:34:26.000Z</published>
    <updated>2020-03-27T04:14:32.170Z</updated>
    
    <content type="html"><![CDATA[<h1>发布前准备</h1><p>小程序发布之前，开发者首先需要在自己的移动终端上预览确保没有任何的问 题，当确认无误时，上传代码到小程序的管理后台，并设置版本，具体操作:</p><a id="more"></a><h2 id="预览">预览</h2><p>点击开发者工具顶部操作栏的预览按钮，开发者工具会自动打包当前项目，并 上传小程序代码至微信的服务器，成功之后会在界面上显示一个二维码。使用当前 小程序开发者的微信扫码即可看到小程序在手机客户端上的真实表现。</p><h2 id="上传代码">上传代码</h2><p>点击开发者工具顶部操作栏的上传按钮，填写版本号以及项目备注，需要注意 的是，这里版本号以及项目备注是为了方便管理员检查版本使用的，开发者可以根 据自己的实际要求来填写这两个字段。<br>上传成功之后，登录小程序管理后台 - 开发管理 - 开发版本 就可以找到刚提 交上传的版本了。</p><h2 id="可以将这个版本设置“体验版”-或者“提交审核”。">可以将这个版本设置“体验版” 或者“提交审核”。</h2><blockquote><p>小程序版本</p></blockquote><table><thead><tr><th>版   本</th><th>说明</th></tr></thead><tbody><tr><td>开发版本</td><td>使用开发者工具，可将代码上传到开发版本中。开发版本只保留每人最新的一份上传的代码。点击提交审核，可将代码提交审核。开发版本可删除，不 影响线上版本和审核中版本的代码。</td></tr><tr><td>审核中版 本</td><td>只能有一份代码处于审核中。有审核结果后可以发布到线上，也可直接重新 提交审核，覆盖原审核版本。</td></tr><tr><td>线上版本</td><td>线上所有用户使用的代码版本，该版本代码在新版本代码发布后被覆盖更新。</td></tr></tbody></table><h1>小程序上线</h1><p>当小程序开发完成时提交审核，等待微信管理员审核通过后，发布后成为线上版本，即完成小程序的发布，开发者可以随时查看运营数据的情况。步骤如下:</p><h2 id="提交审核">提交审核</h2><ol><li>为了保证小程序的质量，以及符合相关的规范，小程序的发布是需要经过审核的。在开发者工具中上传了小程序代码之后，登录小程序管理后台- 开发管理 - 开发版本，找到提交上传的版本。</li><li>在开发版本的列表中，点击提交审核，按照页面提示，填写相关的信息，即可 以将小程序提交审核。</li><li>需要注意的是，开发者需要严格测试了版本之后，再提交审核，过多的审核不通过，可能会影响后续的时间。<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/gZF00R.png" alt="gZF00R"></li></ol><h2 id="发布">发布</h2><p>审核通过之后，管理员的微信中会收到小程序通过审核的通知，此时登录小程序管理后台- 开发管理 -审核版本中可以看到通过审核的版本。 选择点击发布，即可发布小程序。</p><center><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/gh_0785db6f1e67_344.jpg"></img></center>  <center><h1>通过扫码查看作者最新发布的小程序。</h1></center>  ]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;发布前准备&lt;/h1&gt;
&lt;p&gt;小程序发布之前，开发者首先需要在自己的移动终端上预览确保没有任何的问 题，当确认无误时，上传代码到小程序的管理后台，并设置版本，具体操作:&lt;/p&gt;
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="小程序发布流程" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E5%B8%83%E6%B5%81%E7%A8%8B/"/>
    
      <category term="实践总结" scheme="http://yoursite.com/tags/%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发-注册</title>
    <link href="http://yoursite.com/2020/02/13/wx/wx-zhuce/"/>
    <id>http://yoursite.com/2020/02/13/wx/wx-zhuce/</id>
    <published>2020-02-13T07:34:13.000Z</published>
    <updated>2020-03-27T04:13:04.290Z</updated>
    
    <content type="html"><![CDATA[<h1>微信官方 UI 库 WeUI库的使用</h1><p>WeUI 是一套同微信原生视觉体验一致的基础样式库，由微信官方设计团队为 微信内网页和微信小程序量身设计，令用户的使用感知更加统一。包含 button、cell、 dialog、 progress、 toast、article、actionsheet、icon 等各式元素。WeUI 基础样式 库下载地址:<br><a href="https://github.com/Tencent/weui-wxss" target="_blank" rel="noopener">github-小程序WeUI样式库</a></p> <a id="more"></a> <p>开发者可以将样式库下载并使 用微信 web 开发者工具打开 dist 目录(请注意，是 dist 目录，不是整个项目)，导 入 dist 目录后，可以预览样式库<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/z4iw2i.png" alt="z4iw2i"><br>可以在样式库里选择自己所需要的样式，然后直接将需要的样式的wxml复制黏贴至自己的项目中，然后将 WeUI 中 style 文件拷贝至自己的项目目录中.<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/KfAjHn.png" alt="KfAjHn"><br>将 style 文件夹拷贝至自己开发的项目后，还需要在 app.wxss 文件中使用 @import 导入 weui 的样式，如图 3–20 所示。到这里，就可以正常使用 WeUI 库中 微信的官方样式了。</p><h1>bindchange事件</h1><p>bindchange 事件与 bindtap 事件不同，它主要是当输入框中的内容发生改变时，<br>触发对应的事件处理函数，并且输入框中的值可以通过 event.detail.value 来获取<br>wxml 文件代码:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-cells weui-cells_after-title"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-cell weui-cell_input"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-cell__hd"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-label"</span>&gt;</span>qq<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>89<br> <br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-cell__bd"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-input"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入 qq"</span> <span class="hljs-attr">bindchange</span>=<span class="hljs-string">"changevalue"</span>/&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><p>js 文件代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">Page(&#123;<br>  data: &#123;<br>qq:<span class="hljs-number">0</span> &#125;,<br>changevalue:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>)</span>&#123; <span class="hljs-built_in">console</span>.log(event) <span class="hljs-keyword">this</span>.setData(&#123;<br>qq: event.detail.value &#125;)<br>&#125;, &#125;)<br></code></pre></td></tr></table></figure><p>嗅券实现的js关键代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs js">bindSubmit: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> that = <span class="hljs-keyword">this</span><br>    wx.request(&#123;<br>      url: userUrl+<span class="hljs-string">'register_by_openid'</span>,<br>      data: &#123;<br>        openid: wx.getStorageSync(<span class="hljs-string">'showquan_OPENID'</span>),<br>        globalData: <span class="hljs-built_in">JSON</span>.stringify(app.globalData.userInfo),<br>        name: <span class="hljs-keyword">this</span>.data.name,<br>        tel: <span class="hljs-keyword">this</span>.data.tel,<br>        email: <span class="hljs-keyword">this</span>.data.email,<br>        school: <span class="hljs-keyword">this</span>.data.school,<br>        birthday: <span class="hljs-keyword">this</span>.data.year,<br>        address: <span class="hljs-keyword">this</span>.data.address,<span class="hljs-comment">//地址</span><br>      &#125;,<br>      success: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"12333res"</span>,res)<br>        <span class="hljs-keyword">if</span> (res.data.is_register) &#123;<br>          wx.request(&#123;<br>            url: userUrl + <span class="hljs-string">'getInfo'</span>,<br>            data: &#123;<br>              <span class="hljs-string">'openid'</span>: wx.getStorageSync(<span class="hljs-string">'showquan_OPENID'</span>),<br>            &#125;,<br>            success: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res1</span>) </span>&#123;<br>              wx.setStorageSync(<span class="hljs-string">'userinfo'</span>, res1.data.data)<br>            &#125;,<br>          &#125;)<br>          wx.switchTab(&#123;<br>            url: <span class="hljs-string">'../index/index'</span>,<br>          &#125;)<br>        &#125;<br>      &#125;,<br>      fail: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;&#125;,<span class="hljs-comment">//如果调用错误，这里暂时不定义</span><br>    &#125;)<br>  &#125;,<br></code></pre></td></tr></table></figure><p>还涉及到了一个微信位置API接口的调用，主要是获取用户所在位置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.chooseLocation</span>(&#123;<br>      <span class="hljs-attribute">type</span>: <span class="hljs-string">"gcj02"</span>,<br>      success: (res) =&gt; &#123;<br>        console.<span class="hljs-built_in">log</span>(<span class="hljs-string">'地址'</span>,res)<br>        this.<span class="hljs-built_in">setData</span>(&#123;<br>          choosen:res,<br>          address: res.address+res.name,<br>        &#125;)<br>      &#125;,<br>    &#125;)<br></code></pre></td></tr></table></figure><p>最终实现效果：<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/Y6bmxF.png" alt="Y6bmxF"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;微信官方 UI 库 WeUI库的使用&lt;/h1&gt;
&lt;p&gt;WeUI 是一套同微信原生视觉体验一致的基础样式库，由微信官方设计团队为 微信内网页和微信小程序量身设计，令用户的使用感知更加统一。包含 button、cell、 dialog、 progress、 toast、article、actionsheet、icon 等各式元素。WeUI 基础样式 库下载地址:&lt;br&gt;
&lt;a href=&quot;https://github.com/Tencent/weui-wxss&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github-小程序WeUI样式库&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发-登录</title>
    <link href="http://yoursite.com/2020/01/22/wx/wx-denglu/"/>
    <id>http://yoursite.com/2020/01/22/wx/wx-denglu/</id>
    <published>2020-01-22T15:34:26.000Z</published>
    <updated>2020-03-27T04:12:36.986Z</updated>
    
    <content type="html"><![CDATA[<h1>授权页面</h1><h2 id="小程序登录">小程序登录</h2><p>小程序可以通过微信官方提供的登录能力方便地获取微信提供的用户身份标<br>识，快速建立小程序内的用户体系。如图所示，小程序通过wx.login()获取code， 然后通过*wx.request()*发送 code 至开发者服务器，开发者服务器将登录凭证 <strong>appid、 appsecret</strong>与<strong>code</strong>用于校验微信接口，微信接口服务向开发者服务器返回用户唯一 标识 <strong>OpenID</strong>和会话密钥session—key。开发者服务器实现自定义登录状态与 openid 与 session_key关联，并向小程序返回自定义状态。小程序将自定义登录状态 存入 storage，并用于后续 wx.request 发起业务请求。</p><a id="more"></a><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/urFvwF.png" alt="urFvwF"><br>对于某个微信小程序，每个用户访问该小程序都有产生一个唯一的 openid，这 个 openid 为用户访问该小程序的标识符，即每个用户的 openid 都是不一样的。因 此，可以把 **openid **作为用户唯一标识符(类似身份证号)，并存于数据库中用以后续操作。</p><h2 id="wx-login">wx.login()</h2><p>调用wx.login()接口获取登录凭证(code),通过凭证进而换取用户登录态信息,其中wx.login( )接口</p><table><thead><tr><th>属性</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>timeout</td><td>number</td><td>否</td><td>超时时间，单位 ms</td></tr><tr><td>success</td><td>function</td><td>否</td><td>接口调用成功的回调函数</td></tr><tr><td>fail</td><td>function</td><td>否</td><td>接口调用失败的回调函数</td></tr><tr><td>complete</td><td>function</td><td>否</td><td>接口调用结束的回调函数(调用成功失败都会执行)</td></tr></tbody></table><p>由于 app.js 会先于其他页面执行，所以比较适合处理一些注册函数，因此将 wx.login( )方法写在 app.js 文件中。</p><h2 id="wx-request">wx.request()</h2><h3 id="这个函数很重要，一定要很熟练">!!!这个函数很重要，一定要很熟练</h3><p>wx.request( )主要用于发送 https 网络请求,一些基本属性表<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/kpFd4f.png" alt="kpFd4f"><br>在实际应用中，最常用的还是<em><strong>URL</strong></em>和<em><strong>data</strong></em>，这两项作为向后台发送数据请求的链接地址和传送的参数，重要程度可见一斑，后台接收数据的方式一般为GET方法。</p><p>success回调函数也很重要，通过判断是否调用成功，来做相应的动作，比如回掉成功之后为data赋值：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">wx.request(&#123;<br>  url: userUrl + <span class="hljs-string">'getInfo'</span>,<br>  data: &#123;<br>    <span class="hljs-string">'openid'</span>: res.data.openid,<br>  &#125;,<br>  success: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res1</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"用户信息app.js"</span>, res1)<br>    wx.setStorageSync(<span class="hljs-string">'userinfo'</span>, res1.data.data)<br>  &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><p>上面这段代码，掩饰了用wx.request函数，通过调用API接口，向后台传入参数’openid’，来查询用户的用户信息，如果调用成功的话，把获取到的数据赋值给<strong>Storage</strong>。</p><h2 id="数据缓存">数据缓存</h2><p>每个微信小程序都可以有自己的本地缓存，可以通过数据缓存 API 可以对本地<br>缓存进行设置、获取和清理。同一个微信用户，同一个小程序 storage 上限为 10MB。 localStorage 以用户维度隔离，同一台设备上，A 用户无法读取到 B 用户的数据。<br>注意: 如果用户储存空间不足，微信会清空最近最久未使用的小程序的本地缓 存。因此不建议将关键信息全部存在localStorage，以防储存空间不足或用户换设备 的情况。<br>数据缓存 API 主要有 5 类，包括数据的存储、获取、移除、清空，以及获取存 储信息，每类均包含同步与异步两种</p><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>wx.setStorage(Object object)</td><td>数据的存储(异步)</td></tr><tr><td>wx.setStorageSync(string key, any data)</td><td>数据的存储(同步)</td></tr><tr><td>wx.getStorage(Object object)</td><td>数据的获取(异步)</td></tr><tr><td>wx.getStorageSync(string key)</td><td>数据的获取(同步)</td></tr><tr><td>wx.getStorageInfo(Object object)</td><td>存储信息的获取(异步)</td></tr><tr><td>wx.getStorageInfoSync()</td><td>存储信息的获取(同步)</td></tr><tr><td>wx.removeStorage(Object object)</td><td>数据的移除(异步)</td></tr><tr><td>wx.removeStorageSync(string key)</td><td>数据的移除(同步)</td></tr><tr><td>wx.clearStorage(Object object)</td><td>数据的清空(异步)</td></tr><tr><td>wx.clearStorageSync()</td><td>数据的清空(同步)</td></tr></tbody></table><p>表示同步，因此 API 函数中带有Sync后缀的函数为同步函数。</p><h3 id="同步函数与异步函数之间的区别">同步函数与异步函数之间的区别</h3><p>异步不会阻塞当前任务，同步缓存直到同步方法处理完才能继续往下执行。另外异步函数中 含有成功回调函数，可用于表示数据处理成功后的操作。<br>以 wx.setStroage()为例子：<br>通过 wx.request()返回的openid 存储于本地，方便 openid 的获取，使用wx.setStorage()的代码示例如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">wx.setStorageSync(<span class="hljs-string">'OPENID'</span>, res.data.openid)<br></code></pre></td></tr></table></figure><p>如果使用 wx.setStorageSync()进行数据存储，可以对数据存储成功后进行操作，<br>代码较 wx.setStorage()有变化，具体代码如下:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.setStorage</span>(&#123; <span class="hljs-attribute">key</span>: <span class="hljs-string">'test'</span>,<br>data: <span class="hljs-string">'begin'</span>, success:<span class="hljs-built_in">function</span>()&#123;<br>console.<span class="hljs-built_in">log</span>(<span class="hljs-string">'存储成功'</span>) &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="wx-showModal">wx.showModal()</h2><p>小程序使用 wx.showModel(Object object)显示模态对话框<br>基本参数：<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/MUcsiq.png" alt="MUcsiq"><br>例如嗅券小程序，当发现没有用户未注册，则跳转出注册窗口提示用户注册</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> (!res.data.is_register) &#123; wx.showModal(&#123;<br>title: <span class="hljs-string">'提示'</span>,<br>content: <span class="hljs-string">'请先注册'</span>, <span class="hljs-attr">showCancel</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">confirmText</span>: <span class="hljs-string">"确定"</span>, <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) </span>&#123;<br>wx.navigateTo(&#123;<br>url: <span class="hljs-string">'/pages/register/userlogin'</span>, &#125;)<br>&#125; &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;授权页面&lt;/h1&gt;
&lt;h2 id=&quot;小程序登录&quot;&gt;小程序登录&lt;/h2&gt;
&lt;p&gt;小程序可以通过微信官方提供的登录能力方便地获取微信提供的用户身份标&lt;br&gt;
识，快速建立小程序内的用户体系。如图所示，小程序通过wx.login()获取code， 然后通过*wx.request()*发送 code 至开发者服务器，开发者服务器将登录凭证 &lt;strong&gt;appid、 appsecret&lt;/strong&gt;与&lt;strong&gt;code&lt;/strong&gt;用于校验微信接口，微信接口服务向开发者服务器返回用户唯一 标识 &lt;strong&gt;OpenID&lt;/strong&gt;和会话密钥session—key。开发者服务器实现自定义登录状态与 openid 与 session_key关联，并向小程序返回自定义状态。小程序将自定义登录状态 存入 storage，并用于后续 wx.request 发起业务请求。&lt;/p&gt;
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发-页面跳转</title>
    <link href="http://yoursite.com/2020/01/16/wx/wx-tiaozhuan/"/>
    <id>http://yoursite.com/2020/01/16/wx/wx-tiaozhuan/</id>
    <published>2020-01-16T07:34:13.000Z</published>
    <updated>2020-03-27T04:14:55.003Z</updated>
    
    <content type="html"><![CDATA[<h1>navigator 组件</h1><p>navigator 跳转分为两个状态， 一种是关闭当前页面，一种是不关闭当前页面。<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/8kE3OI.png" alt="8kE3OI"></p><a id="more"></a><p>其中 open-type 的合法值<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/soyKFe.png" alt="soyKFe"><br>使用示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">navigator</span> <span class="hljs-attr">url</span>=<span class="hljs-string">"需要跳转的页面"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"样式类"</span> <span class="hljs-attr">hover-class</span>=<span class="hljs-string">"点击后的样式"</span>&gt;</span><br></code></pre></td></tr></table></figure><h1>wx.showToast()</h1><p>wx.showToast( )与 wx.showMaodel( )一样是界面交互中的一种消息提示框，基本属性如下<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/64OMJD.png" alt="64OMJD"></p><p>icon的合法属性如下<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/aRK9pR.png" alt="aRK9pR"><br>在嗅券中，有很多处使用的案例，例如在签到页面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">wx.showToast(&#123;<br>    icon: <span class="hljs-string">'loading'</span>,<span class="hljs-comment">//图标是loading</span><br>    title: sum.data.info,<span class="hljs-comment">//显示后台返回结果中的info信息</span><br>&#125;)<br></code></pre></td></tr></table></figure><h1>配置文件的使用</h1><p>所有的 wx.request()请求，url的网址都有很多共同之处，所以把共同之处作为一个宏进行定义，后面维护起来方便修改与迁移</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// var apiUrl = "http://localhost/show/index.php/Api/"//本地测试地址</span><br><span class="hljs-comment">// var ddApi = "http://localhost/show/pddApi/show/"</span><br><br><span class="hljs-keyword">var</span> apiUrl = <span class="hljs-string">"https://服务器地址/show/index.php/Api/"</span><span class="hljs-comment">//小程序内部接口</span><br><span class="hljs-keyword">var</span> ddApi = <span class="hljs-string">"https://服务器地址/show//pddApi/show/"</span><span class="hljs-comment">//拼多多接口</span><br><br><span class="hljs-keyword">var</span> config = &#123;<br>  apiUrl,<br>  appid,<br>  wxUrl: <span class="hljs-string">`<span class="hljs-subst">$&#123;apiUrl&#125;</span>Weixin/`</span>,<span class="hljs-comment">//注意这里使用的是反斜杠！</span><br>  userUrl: <span class="hljs-string">`<span class="hljs-subst">$&#123;apiUrl&#125;</span>User/`</span>,<br>  signUrl: <span class="hljs-string">`<span class="hljs-subst">$&#123;apiUrl&#125;</span>Sign/`</span>,<br>  pddApi: <span class="hljs-string">`<span class="hljs-subst">$&#123;ddApi&#125;</span>`</span>,<br>&#125;;<br><br><span class="hljs-built_in">module</span>.exports = config<span class="hljs-comment">// 接口暴露，可以在其他文件中用到它</span><br></code></pre></td></tr></table></figure><p>配置文件方便的把一些常用的，或者有共同之处的代码宏定义，当下次使用时直接调用就可以，这就类似于C语言的宏。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;navigator 组件&lt;/h1&gt;
&lt;p&gt;navigator 跳转分为两个状态， 一种是关闭当前页面，一种是不关闭当前页面。&lt;br&gt;
&lt;img src=&quot;http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/8kE3OI.png&quot; alt=&quot;8kE3OI&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>心理测试小程序学习笔记</title>
    <link href="http://yoursite.com/2020/01/06/wx/wx-bushu%206/"/>
    <id>http://yoursite.com/2020/01/06/wx/wx-bushu%206/</id>
    <published>2020-01-06T07:34:13.000Z</published>
    <updated>2020-03-27T04:12:07.688Z</updated>
    
    <content type="html"><![CDATA[<h1>知识点整理</h1><h2 id="bindtap事件绑定">bindtap事件绑定</h2><p>事件是视图层到逻辑层的通讯方式。事件可以将用户的行为反馈到逻辑层进行 处理。事件可以绑定在组件上，当达到触发事件，就会执行逻辑层中对应的事件处 理函数。代码示例如下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--index.wxml--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"begininfo"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">'beginAnswer'</span>&gt;</span> 开始测试 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//index.js</span><br>beginAnswer: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123; wx.navigateTo(&#123;<br>url: <span class="hljs-string">'../test/test'</span> &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>在 index.wxml 文件中，将 bindtap 事件绑定在 button 组件上，其中 bindtap=’beginAnswer’。当测试者单击“开始测试”按钮时，会触发事件，就会执行 index.js 中对应的事件处理函数 beginAnswer，该事件处理函数在触发后，执行页面 跳转，跳转至 test 页面。</p><table><thead><tr><th>事件处理函数</th><th>所处页面</th><th>事件触发结果</th></tr></thead><tbody><tr><td>beginAnswer</td><td>row 1 col 2</td><td>跳转至 test 页面</td></tr><tr><td>answerClickA</td><td>test</td><td>显示下一题，并判断 A 对应的是题库中哪个选择，给对应选项的值+1，满足 index=20 时，跳至 result页面</td></tr><tr><td>answerClickB</td><td>test</td><td>显示下一题，并判断 B 对应的是题库中 哪个选择，给对应选项的值+1，满足 index=20</td></tr><tr><td>answerClickC</td><td>test</td><td>显示下一题，并判断 B 对应的是题库中哪个选择，给对应选项的值+1，满足 index=20 时，跳至 result 页面</td></tr></tbody></table><h2 id="路由">路由</h2><p>小程序 API 中的路由共有 5 种</p><table><thead><tr><th>路由</th><th>路由规则</th></tr></thead><tbody><tr><td>wx.switchTab</td><td>跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面</td></tr><tr><td>wx.reLaunch</td><td>关闭当前页面，跳转到应用内的某个页面。</td></tr><tr><td>wx.redirectTo</td><td>关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面</td></tr><tr><td>wx.navigateTo</td><td>保留当前页面，跳转到应用内的某个页面。但是不能跳到tabbar 页面。使用 wx.navigateBack 可以返回到原页面。小程序 中页面栈最多十层</td></tr><tr><td>wx.navigateBack</td><td>关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages 获取当前的页面栈，决定需要返回几层。</td></tr></tbody></table><h2 id="声明变量与变量赋值">声明变量与变量赋值</h2><h3 id="声明变量">声明变量</h3><p>在 js 中，未在 data 数组中定义的变量，可以通过 var语句来进行变量声明，在声明变量的同时也可以向变量赋值，如 test.js 文件中的一段代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">setList: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">var</span> newList = <span class="hljs-keyword">this</span>.data.list.sort(<span class="hljs-keyword">this</span>.randSort);<br><span class="hljs-keyword">this</span>.setData(&#123; <span class="hljs-attr">list</span>: newList,<br>&#125;); &#125;,<br></code></pre></td></tr></table></figure><h3 id="变量赋值">变量赋值</h3><p>在 js 文件的函数中给变量赋值的方法有两种，这里举一个简单的例子，首先将 index.wxml 文件中 button 的“开始测试”改为“{{msg}}”，使 button 中的文字变成 一个变量，然后在 index.js 文件的 data 数组中添加变量 msg，并赋予初值“开始测 试”，最后将事件处理函数 beginAnswer 进行修改</p><!--index.wxml--><view class="begininfo"><button bindtap='beginAnswer'> {{msg}} </button> </view><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-comment">//index.js</span><br><span class="hljs-selector-tag">Page</span>(&#123;<br>  <span class="hljs-attribute">data</span>: &#123;<br><span class="hljs-attribute">msg</span>:<span class="hljs-string">'开始测试'</span><br>&#125;,<br><span class="hljs-comment">//事件处理函数</span><br><span class="hljs-attribute">beginAnswer</span>: function () &#123;<br>this.setData(&#123; <span class="hljs-attribute">msg</span>:<span class="hljs-string">'测试结束'</span><br>&#125;) &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><p>使用 this.setData({ })可以将数据从逻辑层发送到视图层(异步)，同时改变对 应的 this.data 的值(同步)，当单击“开始测试”按钮时，msg 的值变为“测试结 束”，页面按钮中文字内容也变为“测试结束”。<br>如果将 this.setData({ })改为使用 this.data.msg = ‘测试结束’ 来改变 msg 变量的 值，会发现虽然可以改变 msg 的值，但是页面不会更新。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//index.js</span><br>Page(&#123;<br>  data: &#123;<br>msg:<span class="hljs-string">'开始测试'</span> &#125;,<br><span class="hljs-comment">//事件处理函数</span><br>beginAnswer: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">this</span>.data.msg = <span class="hljs-string">'测试结束'</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">'msg 的值:'</span>,<span class="hljs-keyword">this</span>.data.msg) &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><blockquote><p>总的来说，this.setData 是用来更新界面的，this.data 是用来获取页面 data对象的，它们都可以用于给变量赋值，注意 this.setData 中不能使用 console.log( )语句,如果需要查看赋值后变量的值，需要在 this.setData({ })语句外使用 console.log( )打印 查看变量的值。</p></blockquote><h2 id="绝对路径与相对路径">绝对路径与相对路径</h2><h3 id="相对路径">相对路径</h3><p>在 index.js 文件中，事件处理函数 beginAnswer 的 wx.navigateTo 路由的 url 使用的就是相对路径，其中“…/”指的是当前文件所在的上一级目录，即 index 文件夹 所在的目录，“…/test/test”指的就是 index 所在目录中 test 文件夹中的 test 文件。 另外“./”指的是当前目录，“…/…/”指的是当前文件所在的上上级目录，以此类推。</p><h3 id="绝对路径">绝对路径</h3><p>“/pages/test/test”即为 test 文件所在的绝对路径，若将 url 改为绝对路径 “/pages/test/test”也能实现页面的跳转。</p><h2 id="带参跳转">带参跳转</h2><p>在 test.js 文件中，answerClickA 的一段代码实现了当 index=20 时，从 test 页面 跳转至 result 页面，跳转时携带参数 A、B 和 C 的值</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.<span class="hljs-keyword">data</span>.index == <span class="hljs-number">20</span>) &#123; wx.redirectTo(&#123;<br>url: <span class="hljs-string">'/pages/result/result?A='</span> + <span class="hljs-keyword">this</span>.<span class="hljs-keyword">data</span>.A + <span class="hljs-string">'&amp;B='</span> + <span class="hljs-keyword">this</span>.<span class="hljs-keyword">data</span>.B + <span class="hljs-string">'&amp;C='</span> + <span class="hljs-keyword">this</span>.<span class="hljs-keyword">data</span>.C,<br>&#125;) &#125;<br></code></pre></td></tr></table></figure><p>如果想用使用页面参数，可以在 result 页面的 js 文件中使用生命周期函数来获 取页面参数，给生命周期函数 function()中定义一个值，这边定义为 options，即 可使用 option.A 获取 A 的值，并赋值给 result 页面的变量 A，B、C 也一样。开发者 可以尝试用 console.log(options)打印看一下 options 中的值，</p>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;知识点整理&lt;/h1&gt;
&lt;h2 id=&quot;bindtap事件绑定&quot;&gt;bindtap事件绑定&lt;/h2&gt;
&lt;p&gt;事件是视图层到逻辑层的通讯方式。事件可以将用户的行为反馈到逻辑层进行 处理。事件可以绑定在组件上，当达到触发事件，就会执行逻辑层中对应的事件处 理函数。代码示例如下。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs html&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!--index.wxml--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;begininfo&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;bindtap&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&#39;beginAnswer&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt; 开始测试 &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="小程序路由" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发-传值</title>
    <link href="http://yoursite.com/2020/01/06/wx/wx-chuanzhi/"/>
    <id>http://yoursite.com/2020/01/06/wx/wx-chuanzhi/</id>
    <published>2020-01-06T07:34:13.000Z</published>
    <updated>2020-03-27T04:12:25.301Z</updated>
    
    <content type="html"><![CDATA[<h1>小程序如何愉快的传值</h1><h2 id="巧用Storage">巧用Storage</h2><p>这个数据是小程序官方给予的一种储存能力，如果用户不主动删除缓存里面的值，会一直保持在小程序中，在调试器的storage选项中可以看到已经缓存的数据。</p><p>比如将会经常用到的openID存在里面，在用的时候调用。<br>具体实现：</p><blockquote><p>存入</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//将 SESSIONID 保存到本地 storage </span><br> wx.setStorageSync(<span class="hljs-string">'showquan_OPENID'</span>, res.data.openid)<br></code></pre></td></tr></table></figure><a id="more"></a><blockquote><p>获取使用</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-comment">//作为参数提交给后台接口</span><br><span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.request</span>(&#123;<br>  <span class="hljs-attribute">url</span>: signUrl + <span class="hljs-string">"signin"</span>,<br>  <span class="hljs-attribute">data</span>: &#123;<br>    <span class="hljs-attribute">sum</span>: num,<br>    <span class="hljs-attribute">lntegral</span>: that.data.lntegral,<br>    <span class="hljs-attribute">openid</span>: wx.getStorageSync(<span class="hljs-string">'showquan_OPENID'</span>),<br>  &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="前端给js传值-data-oid">前端给js传值-data-oid</h2><p>在开发中有时候会遇到想给后台js反馈，比如告诉js我现在点击的是第几个按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--html--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mp-slideview</span> <span class="hljs-attr">buttons</span>=<span class="hljs-string">"&#123;&#123;slideButtons&#125;&#125;"</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"&#123;&#123;true&#125;&#125;"</span> <span class="hljs-attr">bindbuttontap</span>=<span class="hljs-string">"slideButtonTap"</span> <span class="hljs-attr">data-oid</span>=<span class="hljs-string">"&#123;&#123;de&#125;&#125;"</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;!--js通过前端点击按钮的日志信息中，获取到返回的参数oid--&gt;<br>slideButtonTap(e) &#123;<br>    <span class="hljs-keyword">var</span> idx = e.currentTarget.dataset.oid<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="通过get方法">通过get方法</h2><p>这有点类似于web的地址传值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">navigator</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"weui-slidecells"</span>  <span class="hljs-attr">id</span>=<span class="hljs-string">"sp-&#123;&#123;item.goods_id&#125;&#125;"</span> <span class="hljs-attr">wx:for</span>=<span class="hljs-string">"&#123;&#123;goods_list&#125;&#125;"</span> <span class="hljs-attr">wx:key</span>=<span class="hljs-string">"goods_id"</span> <span class="hljs-attr">wx:for-index</span>=<span class="hljs-string">"de"</span> <span class="hljs-attr">url</span>=<span class="hljs-string">"../goodsDetail/goodsDetail?id=&#123;&#123;item.goods_id&#125;&#125;&amp;search=&#123;&#123;searchID&#125;&#125;"</span> &gt;</span><br>//通过   地址？key1=参数1 &amp; key2=参数2的方式传入两个参数<br></code></pre></td></tr></table></figure><p>目的页面获取</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js">onLoad: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">pid</span>) </span>&#123;<span class="hljs-comment">//获取传入参数</span><br>    <span class="hljs-keyword">let</span> that = <span class="hljs-keyword">this</span><br>    <span class="hljs-keyword">this</span>.setData(&#123;<br>      userinfo: wx.getStorageSync(<span class="hljs-string">'userinfo'</span>),<br>      searchID: pid.search  <span class="hljs-comment">//参数的调用</span><br>    &#125;)<br>    wx.request(&#123;<br>      url: pddApi + <span class="hljs-string">"PddDdkGoodsDetail.php"</span>,<br>      data:&#123;<br>        pid : pid.id,  <span class="hljs-comment">//参数调用</span><br>        searchID:pid.search<br>      &#125;,<br>      ……………………<br>      &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="后台给前端传值">后台给前端传值</h2><p>后台可以将json数据发送给前端</p><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/VGK5NR.png" alt="VGK5NR"></p><p>例如首页的专题内容，就是通过前端调用后台接口，后台在拼多多查询活动信息，并将拼多多的数据用json格式转发给前端，前端解析即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;小程序如何愉快的传值&lt;/h1&gt;
&lt;h2 id=&quot;巧用Storage&quot;&gt;巧用Storage&lt;/h2&gt;
&lt;p&gt;这个数据是小程序官方给予的一种储存能力，如果用户不主动删除缓存里面的值，会一直保持在小程序中，在调试器的storage选项中可以看到已经缓存的数据。&lt;/p&gt;
&lt;p&gt;比如将会经常用到的openID存在里面，在用的时候调用。&lt;br&gt;
具体实现：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;存入&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs js&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//将 SESSIONID 保存到本地 storage &lt;/span&gt;&lt;br&gt; wx.setStorageSync(&lt;span class=&quot;hljs-string&quot;&gt;&#39;showquan_OPENID&#39;&lt;/span&gt;, res.data.openid)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="实践总结" scheme="http://yoursite.com/tags/%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发-unix时间戳转换</title>
    <link href="http://yoursite.com/2020/01/06/wx/wx-unix/"/>
    <id>http://yoursite.com/2020/01/06/wx/wx-unix/</id>
    <published>2020-01-06T07:34:13.000Z</published>
    <updated>2020-03-27T04:15:36.901Z</updated>
    
    <content type="html"><![CDATA[<h1>js如何将unix时间戳转换为正常时间</h1><p>通常我们在PHP或者数据库中获取的时间都位unix时间戳，需要格式转换才能正常显示。<br>在项目中定义一个js文件，将时间戳转换代码封装起来</p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 接口暴露</span><br><span class="hljs-built_in">module</span>.exports = &#123;<br>  formatTime: formatTime,<br>  js_date_time: js_date_time<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">js_date_time</span>(<span class="hljs-params">unixtime</span>) </span>&#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"111111111111111"</span>, unixtime);<br>  <span class="hljs-keyword">var</span> dateTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">parseInt</span>(unixtime) * <span class="hljs-number">1000</span>)<br>  <span class="hljs-keyword">var</span> year = dateTime.getFullYear();<br>  <span class="hljs-keyword">var</span> month = dateTime.getMonth() + <span class="hljs-number">1</span>;<br>  <span class="hljs-keyword">var</span> day = dateTime.getDate();<br>  <span class="hljs-keyword">var</span> hour = dateTime.getHours();<br>  <span class="hljs-keyword">var</span> minute = dateTime.getMinutes();<br>  <span class="hljs-keyword">var</span> second = dateTime.getSeconds();<br>  <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<br>  <span class="hljs-keyword">var</span> now_new = <span class="hljs-built_in">Date</span>.parse(now.toDateString()); <span class="hljs-comment">//typescript转换写法</span><br>  <span class="hljs-keyword">var</span> milliseconds = now_new - dateTime;<br>  <span class="hljs-keyword">var</span> timeSpanStr = year + <span class="hljs-string">'-'</span> + month + <span class="hljs-string">'-'</span> + day + <span class="hljs-string">' '</span> + hour + <span class="hljs-string">':'</span> + minute;<br>  <span class="hljs-keyword">return</span> timeSpanStr;<br>&#125;<br></code></pre></td></tr></table></figure><p>在需要时间戳转换的页面引用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> utils = <span class="hljs-built_in">require</span>(<span class="hljs-string">"../../utils/util.js"</span>)<br></code></pre></td></tr></table></figure><p>转换代码的使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">utils.js_date_time(wx.getStorageSync(<span class="hljs-string">'userinfo'</span>).gmt_create)<br><span class="hljs-comment">//例如将 1585025901=&gt;处理后显示为2020-3-24 12:58</span><br></code></pre></td></tr></table></figure><h1>以上</h1><p>unix时间戳转换在开发中是很常用的工具，有些框架将其封装了起来，比如thinkPHP直接调用data()函数即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;js如何将unix时间戳转换为正常时间&lt;/h1&gt;
&lt;p&gt;通常我们在PHP或者数据库中获取的时间都位unix时间戳，需要格式转换才能正常显示。&lt;br&gt;
在项目中定义一个js文件，将时间戳转换代码封装起来&lt;/p&gt;
    
    </summary>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="javaScript技巧" scheme="http://yoursite.com/tags/javaScript%E6%8A%80%E5%B7%A7/"/>
    
      <category term="避坑指南" scheme="http://yoursite.com/tags/%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>数据结构-线性表</title>
    <link href="http://yoursite.com/2019/03/05/C/C-lianbiao/"/>
    <id>http://yoursite.com/2019/03/05/C/C-lianbiao/</id>
    <published>2019-03-05T14:02:13.000Z</published>
    <updated>2020-03-27T04:06:52.537Z</updated>
    
    <content type="html"><![CDATA[<h1>数据结构-线性表</h1><p>由同类型数据元素构成有序序列的线性结构，例如由数组和指针组成的线性结构</p><h2 id="储存结构实现">储存结构实现</h2><h3 id="链表的顺序储存结构：">链表的顺序储存结构：</h3><p>利用数组的连续存储空间顺序存放线性表的各元素</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LNode</span> *<span class="hljs-title">List</span>;</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LNode</span>&#123;</span><br>    ElementType Data[MAXSIZE];<br>    <span class="hljs-keyword">int</span> Last;<br>&#125; ;<br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LNode</span> <span class="hljs-title">L</span>;</span><br>List PtrL;<br></code></pre></td></tr></table></figure><a id="more"></a><p>访问下标为 i 的元素：L.Data[i] 或 PtrL-&gt;Data[i]<br>线性表的长度：L.Last+1 或 PtrL-&gt;Last+1</p><h3 id="链表的链式储存结构：">链表的链式储存结构：</h3><p>不要求逻辑上相邻的两个元素物理上也相邻；通过“链”建<br>立起数据元素之间的逻辑关系。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LNode</span> *<span class="hljs-title">List</span>;</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LNode</span>&#123;</span><br> ElementType Data;<br> List Next;<br>&#125;;<br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Lnode</span> <span class="hljs-title">L</span>;</span><br>List PtrL;<br></code></pre></td></tr></table></figure><h2 id="主要操作的实现（链式）">主要操作的实现（链式）</h2><h3 id="求表长">求表长</h3><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs zephir"><span class="hljs-keyword">int</span> Length ( <span class="hljs-keyword">List</span> PtrL )<br>&#123; <span class="hljs-keyword">List</span> p = PtrL; <span class="hljs-comment">/* p指向表的第一个结点*/</span><br> <span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>;<br> <span class="hljs-keyword">while</span> ( p ) &#123;<br> p = p-&gt;Next;<br> j++; <span class="hljs-comment">/* 当前p指向的是第 j 个结点*/</span><br> &#125;<br> <span class="hljs-keyword">return</span> j;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="查找">查找</h3><h4 id="按序号查找-FindKth">按序号查找: FindKth;</h4><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs zephir"><span class="hljs-keyword">List</span> FindKth( <span class="hljs-keyword">int</span> K, <span class="hljs-keyword">List</span> PtrL )<br>&#123; <span class="hljs-keyword">List</span> p = PtrL;<br> <span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>;<br> <span class="hljs-keyword">while</span> (p !=<span class="hljs-keyword">NULL</span> &amp;&amp; i &lt; K )&#123;<br> p = p-&gt;Next;<br> i++;<br> &#125;<br> <span class="hljs-keyword">if</span> ( i == K ) <span class="hljs-keyword">return</span> p;<br> <span class="hljs-comment">/* 找到第K个，返回指针 */</span><br> <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-keyword">NULL</span>;<br> <span class="hljs-comment">/* 否则返回空 */</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="按值查找-Find">按值查找: Find</h4><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-meta">List</span> Find( ElementType <span class="hljs-meta">X</span>, <span class="hljs-meta">List</span> PtrL )<br>&#123;<br> <span class="hljs-meta">List</span> p = PtrL;<br> <span class="hljs-meta">while</span> ( p!=<span class="hljs-meta">NULL</span> <span class="hljs-variable">&amp;&amp;</span> p-&gt;Data != <span class="hljs-meta">X</span> )<br> p = p-&gt;Next;<br> <span class="hljs-meta">return</span> p;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="插入（在第-i-1-1≤i≤n-1-个结点后插入一个值为X的新结点">插入（在第 i-1(1≤i≤n+1)个结点后插入一个值为X的新结点)</h3><ul><li>先构造一个新结点，用s指向；</li><li>再找到链表的第 i-1个结点，用p指向；</li><li>然后修改指针，插入结点 ( p之后插入新结点是 s)</li></ul><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs zephir"><span class="hljs-keyword">List</span> Insert( ElementType X, <span class="hljs-keyword">int</span> i, <span class="hljs-keyword">List</span> PtrL )<br>&#123; <span class="hljs-keyword">List</span> p, s;<br> <span class="hljs-keyword">if</span> ( i == <span class="hljs-number">1</span> ) &#123; <span class="hljs-comment">/* 新结点插入在表头 */</span><br> s = (<span class="hljs-keyword">List</span>)malloc(sizeof(struct LNode)); <span class="hljs-comment">/*申请、填装结点*/</span><br> s-&gt;Data = X;<br> s-&gt;Next = PtrL;<br> <span class="hljs-keyword">return</span> s; <span class="hljs-comment">/*返回新表头指针*/</span><br> &#125;<br> p = FindKth( i<span class="hljs-number">-1</span>, PtrL ); <span class="hljs-comment">/* 查找第i-1个结点 */</span><br> <span class="hljs-keyword">if</span> ( p == <span class="hljs-keyword">NULL</span> ) &#123; <span class="hljs-comment">/* 第i-1个不存在，不能插入 */</span><br> printf(＂参数i错＂);<br> <span class="hljs-keyword">return</span> <span class="hljs-keyword">NULL</span>;<br> &#125;<span class="hljs-keyword">else</span> &#123;<br> s = (<span class="hljs-keyword">List</span>)malloc(sizeof(struct LNode)); <span class="hljs-comment">/*申请、填装结点*/</span><br> s-&gt;Data = X;<br> s-&gt;Next = p-&gt;Next; <span class="hljs-comment">/*新结点插入在第i-1个结点的后面*/</span><br> p-&gt;Next = s;<br> <span class="hljs-keyword">return</span> PtrL;<br> &#125;<br></code></pre></td></tr></table></figure><h3 id="删除（删除链表的第-i-1≤i≤n-个位置上的结点">删除（删除链表的第 i (1≤i≤n)个位置上的结点)</h3><ul><li>先找到链表的第 i-1个结点，用p指向；</li><li>再用指针s指向要被删除的结点（p的下一个结点）;</li><li>然后修改指针，删除s所指结点;</li><li>最后释放s所指结点的空间。</li></ul><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs zephir"><span class="hljs-keyword">List</span> Delete( <span class="hljs-keyword">int</span> i, <span class="hljs-keyword">List</span> PtrL )<br>&#123; <span class="hljs-keyword">List</span> p, s;<br> <span class="hljs-keyword">if</span> ( i == <span class="hljs-number">1</span> ) &#123; <span class="hljs-comment">/* 若要删除的是表的第一个结点 */</span><br> s = PtrL; <span class="hljs-comment">/*s指向第1个结点*/</span><br> <span class="hljs-keyword">if</span> (PtrL!=<span class="hljs-keyword">NULL</span>) PtrL = PtrL-&gt;Next; <span class="hljs-comment">/*从链表中删除*/</span><br> <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-keyword">NULL</span>;<br> free(s); <span class="hljs-comment">/*释放被删除结点 */</span><br> <span class="hljs-keyword">return</span> PtrL;<br> &#125;<br> p = FindKth( i<span class="hljs-number">-1</span>, PtrL ); <span class="hljs-comment">/*查找第i-1个结点*/</span><br> <span class="hljs-keyword">if</span> ( p == <span class="hljs-keyword">NULL</span> ) &#123;<br> printf(“第%d个结点不存在”, i<span class="hljs-number">-1</span>); <span class="hljs-keyword">return</span> <span class="hljs-keyword">NULL</span>;<br> &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( p-&gt;Next == <span class="hljs-keyword">NULL</span> )&#123;<br> printf(“第%d个结点不存在”, i); <span class="hljs-keyword">return</span> <span class="hljs-keyword">NULL</span>;<br> &#125; <span class="hljs-keyword">else</span> &#123;<br> s = p-&gt;Next; <span class="hljs-comment">/*s指向第i个结点*/</span><br> p-&gt;Next = s-&gt;Next; <span class="hljs-comment">/*从链表中删除*/</span><br> free(s); <span class="hljs-comment">/*释放被删除结点 */</span><br> <span class="hljs-keyword">return</span> PtrL;<br> &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;数据结构-线性表&lt;/h1&gt;
&lt;p&gt;由同类型数据元素构成有序序列的线性结构，例如由数组和指针组成的线性结构&lt;/p&gt;
&lt;h2 id=&quot;储存结构实现&quot;&gt;储存结构实现&lt;/h2&gt;
&lt;h3 id=&quot;链表的顺序储存结构：&quot;&gt;链表的顺序储存结构：&lt;/h3&gt;
&lt;p&gt;利用数组的连续存储空间顺序存放线性表的各元素&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;LNode&lt;/span&gt; *&lt;span class=&quot;hljs-title&quot;&gt;List&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;LNode&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    ElementType Data[MAXSIZE];&lt;br&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; Last;&lt;br&gt;&amp;#125; ;&lt;br&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;LNode&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;List PtrL;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C程序设计" scheme="http://yoursite.com/tags/C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>指针和数组</title>
    <link href="http://yoursite.com/2019/02/28/C/C-shuzu/"/>
    <id>http://yoursite.com/2019/02/28/C/C-shuzu/</id>
    <published>2019-02-28T12:02:36.000Z</published>
    <updated>2020-03-27T04:08:28.963Z</updated>
    
    <content type="html"><![CDATA[<h1>指针与数组</h1><h2 id="传⼊函数的数组成了什么？">传⼊函数的数组成了什么？</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> isPrime(<span class="hljs-built_in">int</span> x,<span class="hljs-built_in">int</span> knownPrimes[], <span class="hljs-built_in">int</span> numbe rOfKnownPrimes )<br>&#123;<br><span class="hljs-built_in">int</span> ret = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">int</span> i; <br>    <span class="hljs-keyword">for</span> ( i=<span class="hljs-number">0</span>; i&lt;numbe rOfKnownP rimes;i++)&#123;<br>        <span class="hljs-keyword">if</span> ( X %knownPrimes[i] ==<span class="hljs-number">0</span> )&#123;<br>            ret = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>        <span class="hljs-keyword">return</span> ret;<br>&#125;<br></code></pre></td></tr></table></figure><a id="more"></a><blockquote><p>函数参数表中的数组实际上是指针</p><blockquote><p>sizeof(a) == sizeof(int*)<br>但是可以⽤数组的运算符[]进⾏运算</p></blockquote></blockquote><h2 id="数组参数">数组参数</h2><h3 id="以下四种函数原型是等价的：">以下四种函数原型是等价的：</h3><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs excel"><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">int</span> *ar, <span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>);<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">int</span> *, <span class="hljs-built_in">int</span>);<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">int</span> ar[], <span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>);<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">int</span> [], <span class="hljs-built_in">int</span>);<br></code></pre></td></tr></table></figure><h2 id="数组变量是特殊的指针">数组变量是特殊的指针</h2><blockquote><p>数组变量本⾝表达地址，所以</p><blockquote><p>int a[10]; int*p=a; // ⽆需⽤&amp;取地址<br>但是数组的单元表达的是变量，需要⽤&amp;取地址<br>a == &amp;a[0]</p></blockquote></blockquote><blockquote><p>[]运算符可以对数组做，也可以对指针做：</p><blockquote><p>p[0] &lt;= =&gt; a[0]</p></blockquote></blockquote><blockquote><p>*运算符可以对指针做，也可以对数组做：</p><blockquote><p>*a = 25;</p></blockquote></blockquote><blockquote><p>数组变量是const的指针，所以不能被赋值</p><blockquote><p>int a[] &lt;==&gt; int * const a=….</p></blockquote></blockquote><h2 id="指针与const-仅限C99">指针与const(仅限C99)</h2><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/c6nnc3.png" alt="c6nnc3"></p><h3 id="表⽰⼀旦得到了某个变量的地址，不能再指向其他变量">表⽰⼀旦得到了某个变量的地址，不能再指向其他变量</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> * <span class="hljs-keyword">const</span> q = &amp;i; <span class="hljs-comment">// q 是 const</span><br> *q = <span class="hljs-number">26</span>; <span class="hljs-comment">// OK</span><br> q++; <span class="hljs-comment">// ERROR</span><br></code></pre></td></tr></table></figure><h2 id="所指是const">所指是const</h2><h3 id="表⽰不能通过这个指针去修改那个变量（并不能使得那个变量成为const）">表⽰不能通过这个指针去修改那个变量（并不能使得那个变量成为const）</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> *p = &amp;i;<br> *p = <span class="hljs-number">26</span>; <span class="hljs-comment">// ERROR! (*p) 是 const</span><br> i = <span class="hljs-number">26</span>; <span class="hljs-comment">//OK</span><br> p = &amp;j; <span class="hljs-comment">//OK</span><br></code></pre></td></tr></table></figure><h3 id="判断哪个被const了的标志是const在-的前⾯还是后⾯">判断哪个被const了的标志是const在*的前⾯还是后⾯</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> i;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span>* p1 = &amp;i;<br><span class="hljs-built_in">int</span> <span class="hljs-keyword">const</span>* p2 = &amp;i;<br><span class="hljs-built_in">int</span> *<span class="hljs-keyword">const</span> p3 = &amp;i;<br></code></pre></td></tr></table></figure><h2 id="const数组">const数组</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> a[] = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,&#125;;<br></code></pre></td></tr></table></figure><p>数组变量已经是const的指针了，这⾥的const表明数组的每个单元都是const int所以必须通过初始化进⾏赋值</p><ul><li>这样做的好处</li></ul><ul><li>因为把数组传⼊函数时传递的是地址，所以那个函数内部可以修改数组的值</li><li>为了保护数组不被函数破坏，可以设置参数为const</li><li>int sum(const int a[], int length);</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;指针与数组&lt;/h1&gt;
&lt;h2 id=&quot;传⼊函数的数组成了什么？&quot;&gt;传⼊函数的数组成了什么？&lt;/h2&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs angelscript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; isPrime(&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; x,&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; knownPrimes[], &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; numbe rOfKnownPrimes )&lt;br&gt;&amp;#123;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; ret = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;&lt;br&gt;    &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; i; &lt;br&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ( i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;numbe rOfKnownP rimes;i++)&amp;#123;&lt;br&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( X %knownPrimes[i] ==&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; )&amp;#123;&lt;br&gt;            ret = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;&lt;br&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ret;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C程序设计" scheme="http://yoursite.com/tags/C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="指针" scheme="http://yoursite.com/tags/%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>C语言难点-指针</title>
    <link href="http://yoursite.com/2019/02/28/C/C-zhizhen/"/>
    <id>http://yoursite.com/2019/02/28/C/C-zhizhen/</id>
    <published>2019-02-28T12:02:36.000Z</published>
    <updated>2020-03-27T04:08:37.372Z</updated>
    
    <content type="html"><![CDATA[<h1>C语言难点-指针</h1><h2 id="指针">指针</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> i;<br><span class="hljs-built_in">int</span>* p=&amp;i;<br><span class="hljs-built_in">int</span>* p,q;<br><span class="hljs-built_in">int</span> *p,q;<br></code></pre></td></tr></table></figure><h2 id="指针变量">指针变量</h2><blockquote><p>变量的值是内存的地址<br>普通变量的值是实际的值<br>指针变量的值是具有实际值的变量的地址<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/YpixqE.png" alt="YpixqE"></p></blockquote><a id="more"></a><h2 id="作为参数的指针">作为参数的指针</h2><p>在被调用的时候得到了某个变量的地址:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">f</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *p)</span></span>;<br></code></pre></td></tr></table></figure><p>在函数里面可以通过这个指针访问外面的这个i</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>; f(&amp;i);<br></code></pre></td></tr></table></figure><h3 id="访问那个地址-上的变量">访问那个地址.上的变量*</h3><p>是一个单目运算符，用来访问指针的值所表示的地<br>可以做右值也可以做左值</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span>k= *p;<br>*p= k+<span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h3 id="左值为什么叫左值，">*左值为什么叫左值，</h3><p>是因为出现在赋值号左边的不是变量，而是值，是表达式计算的结果:</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">a[O]=<span class="hljs-number">2</span><span class="hljs-comment">;</span><br>*p= <span class="hljs-number">3</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h2 id="指针应用场景">指针应用场景</h2><h3 id="交换变量的值">交换变量的值</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *pa, <span class="hljs-keyword">int</span> *pb)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">int</span> t = *pa;<br>*pa = *pb;<br>*pb =t;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="函数返回多个值，某些值就只能通过指针返回">函数返回多个值，某些值就只能通过指针返回</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">传入的参数实际上是需要保存带回的结果的变量<br>函数返回运算的状态，结果通过指针返回<br>常用的套路是让函数返回特殊的不属于有效范围内的值来表示出错:<br><span class="hljs-number">-1</span>或<span class="hljs-number">0</span> (在文件操作会看到大量的例子)<br>但是当任何数值都是有效的可能结果时，就得分开返回了<br>需要注意的是后续的语言(C++,Java) 采用了异常机制来解决这个问题<br></code></pre></td></tr></table></figure><h2 id="指针最常见的错误">指针最常见的错误</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">定义了指针变量，还没有指向任何变量，就开始使用指针<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;C语言难点-指针&lt;/h1&gt;
&lt;h2 id=&quot;指针&quot;&gt;指针&lt;/h2&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs angelscript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; i;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;* p=&amp;amp;i;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;* p,q;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; *p,q;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;指针变量&quot;&gt;指针变量&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;变量的值是内存的地址&lt;br&gt;
普通变量的值是实际的值&lt;br&gt;
指针变量的值是具有实际值的变量的地址&lt;br&gt;
&lt;img src=&quot;http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/YpixqE.png&quot; alt=&quot;YpixqE&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C程序设计" scheme="http://yoursite.com/tags/C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="指针" scheme="http://yoursite.com/tags/%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>Mac如何运行C语言</title>
    <link href="http://yoursite.com/2019/02/24/C/C-Mac/"/>
    <id>http://yoursite.com/2019/02/24/C/C-Mac/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-27T04:20:06.359Z</updated>
    
    <content type="html"><![CDATA[<h1>Mac如何运行C语言程序</h1><h2 id="前言">前言</h2><p>  C语言是我第一个学习的开发语言，在中国大学生MOOC平台学习C语言开启了我的coding生涯，也认识了我很喜欢的一位老师，我个人很喜欢C给我带来的编程思想，这种思想中在后来学习其他语言的时候，让我受益无穷。c语言是最基本的语言。全世界的高级语言现在有两千多种，但是几乎全国大部分的高校都学习C语言，它的重要性可见一斑。很多高校选择C语言作为计算机相关专业入门的第一课，主要是因为C是编写操作系统最常用的编程语言。用C编写的第一个操作系统是大名鼎鼎的Unix，现在的MacOS正基于此。后来的操作系统如GNU/Linux都是用C语言编写的.C不仅是操作系统的语言，它还是当今几乎所有最流行的高级语言的前身和灵感。事实上，Perl，PHP，Python和Ruby都是用C语言编写的。<br>  学习任何语言，关注的不应该是技术，而是技术的发展过程，技术背后那些看不见的东西，他们蕴含着无限可能和未来。</p><a id="more"></a><h2 id="Mac下的第一个-Hello-world！">Mac下的第一个&quot;Hello world！&quot;</h2><h3 id="打开终端">打开终端</h3><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/dSYnXu%20%281%29.png" alt="终端"></p><h3 id="打开指定文件夹">打开指定文件夹</h3><p>例如：打开/Users/用户名/CStudy文件夹</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">$ <span class="hljs-keyword">cd</span> <span class="hljs-string">/Users/</span>用户名<span class="hljs-string">/cStudy</span><br></code></pre></td></tr></table></figure><p>当然，最简单的办法就是现在命令行输入&quot;cd&quot;<br>然后在fander窗口将文件夹图标拖到终端窗口，回车即可</p><h3 id="开始">开始</h3><p>输入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">vim</span> <span class="hljs-selector-tag">hello</span><span class="hljs-selector-class">.c</span>，<br></code></pre></td></tr></table></figure><p>用vim编辑hello.c文件。再按i进入编辑状态<br>写入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"hello world\n"</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>输入完毕后，保存并退出，先按“esc”键，然后输入:wq即可</p><h3 id="编译">编译</h3><p>输入命令</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">gcc</span> <span class="hljs-selector-tag">hello</span><span class="hljs-selector-class">.c</span><br></code></pre></td></tr></table></figure><p>此时如果电脑上没有编译工具，点击安装即可；若程序有错误，则再次进入步骤2修改程序；若无错则进入下一步骤；</p><h3 id="运行">运行</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">./<span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.out</span> hello.c<br></code></pre></td></tr></table></figure><p>即可看到结果<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/0yVDsL.png" alt="0yVDsL"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;Mac如何运行C语言程序&lt;/h1&gt;
&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;  C语言是我第一个学习的开发语言，在中国大学生MOOC平台学习C语言开启了我的coding生涯，也认识了我很喜欢的一位老师，我个人很喜欢C给我带来的编程思想，这种思想中在后来学习其他语言的时候，让我受益无穷。c语言是最基本的语言。全世界的高级语言现在有两千多种，但是几乎全国大部分的高校都学习C语言，它的重要性可见一斑。很多高校选择C语言作为计算机相关专业入门的第一课，主要是因为C是编写操作系统最常用的编程语言。用C编写的第一个操作系统是大名鼎鼎的Unix，现在的MacOS正基于此。后来的操作系统如GNU/Linux都是用C语言编写的.C不仅是操作系统的语言，它还是当今几乎所有最流行的高级语言的前身和灵感。事实上，Perl，PHP，Python和Ruby都是用C语言编写的。&lt;br&gt;
  学习任何语言，关注的不应该是技术，而是技术的发展过程，技术背后那些看不见的东西，他们蕴含着无限可能和未来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Mac使用" scheme="http://yoursite.com/tags/Mac%E4%BD%BF%E7%94%A8/"/>
    
      <category term="C程序设计" scheme="http://yoursite.com/tags/C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>css3如何实现炫酷背景</title>
    <link href="http://yoursite.com/2019/02/24/HC/cssbg/"/>
    <id>http://yoursite.com/2019/02/24/HC/cssbg/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-27T16:40:12.119Z</updated>
    
    <content type="html"><![CDATA[<h1>小程序如何实现炫酷背景</h1><p>该背景主要是通过css让多个元素在不同时间旋转来实现，再给元素加边框和阴影即可。</p><p>该实例虽然是小程序的，但是依然可是在html中实现，只需要将view改为ul&gt;li标签无序列表即可。</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cos">&lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shadows"</span> id=<span class="hljs-string">"bg"</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt; &lt;/<span class="hljs-keyword">view</span>&gt;<br> &lt;<span class="hljs-keyword">view</span>&gt; &lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt; &lt;/<span class="hljs-keyword">view</span>&gt;<br> &lt;<span class="hljs-keyword">view</span>&gt; &lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt; &lt;/<span class="hljs-keyword">view</span>&gt;<br> &lt;<span class="hljs-keyword">view</span>&gt; &lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt; &lt;/<span class="hljs-keyword">view</span>&gt;<br> &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>&lt;/<span class="hljs-keyword">view</span>&gt;<br>&lt;<span class="hljs-keyword">view</span>  <span class="hljs-keyword">class</span>=<span class="hljs-string">"img"</span>&gt;<br>&lt;image src=<span class="hljs-string">"url.png"</span>&gt;&lt;/image&gt;<br>&lt;/<span class="hljs-keyword">view</span>&gt;<br>&lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"drive"</span>&gt;<br> &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br> &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br> &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>&lt;/<span class="hljs-keyword">view</span>&gt;<br></code></pre></td></tr></table></figure><p>css部分<br>/* pages/my/version/version.wxss */</p><p>page {<br>background: #060700;<br>height: 100vh;<br>}<br>.drive,<br>.shadows {<br>background-color: rgb(0, 0, 0);<br>position: fixed;<br>top: 0;<br>right: 0;<br>bottom: 0;<br>left: 0;<br>}<br>.shadows text{<br>color: black;<br>font-size: 12px;<br>}<br>.drive view {</p><p>position: absolute;<br>left: 50%;<br>top: 50%;<br>border: 1px solid rgba(8, 61, 235, 0.993);<br>box-shadow: 0 4vw 8vw rgba(2, 203, 238, 0.582) inset;<br>width: 100vw;<br>height: 100vh;<br>animation: drive 10s linear infinite;<br>animation-direction: reverse;<br>}</p><p>.shadows view {<br>position: absolute;<br>left: 50%;<br>top: 50%;<br>background: rgb(34, 47, 224);<br>width: 100vw;<br>height: 100vh;<br>animation: shadows 10s linear infinite;<br>animation-direction: reverse;<br>}</p><p>.drive view:nth-child(1) {<br>animation-delay: 0;<br>}</p><p>.drive view:nth-child(2) {<br>animation-delay: -1s;<br>}</p><p>.drive view:nth-child(3) {<br>animation-delay: -2s;<br>}</p><p>.drive view:nth-child(4) {<br>animation-delay: -3s;<br>}</p><p>.drive view:nth-child(5) {<br>animation-delay: -4s;<br>}</p><p>.drive view:nth-child(6) {<br>animation-delay: -5s;<br>}</p><p>.drive view:nth-child(7) {<br>animation-delay: -6s;<br>}</p><p>.drive view:nth-child(8) {<br>animation-delay: -7s;<br>}</p><p>.drive view:nth-child(9) {<br>animation-delay: -8s;<br>}</p><p>.drive view:nth-child(10) {<br>animation-delay: -9s;<br>}</p><p>.shadows view:nth-child(1) {<br>animation-delay: 0;<br>}</p><p>.shadows view:nth-child(2) {<br>animation-delay: -1s;<br>}</p><p>.shadows view:nth-child(3) {<br>animation-delay: -2s;<br>}</p><p>.shadows view:nth-child(4) {<br>animation-delay: -3s;<br>}</p><p>.shadows view:nth-child(5) {<br>animation-delay: -4s;<br>}</p><p>.shadows view:nth-child(6) {<br>animation-delay: -5s;<br>}</p><p>.shadows view:nth-child(7) {<br>animation-delay: -6s;<br>}</p><p>.shadows view:nth-child(8) {<br>animation-delay: -7s;<br>}</p><p>.shadows view:nth-child(9) {<br>animation-delay: -8s;<br>}</p><p>.shadows view:nth-child(10) {<br>animation-delay: -9s;<br>}</p><p>@keyframes drive {<br>0% {<br>transform: translate(-50%, -50%) scale(1.05) rotate(0deg);<br>}<br>100% {<br>transform: translate(-50%, -50%) scale(0) rotate(-45deg);<br>}<br>}</p><p>@keyframes shadows {<br>0% {<br>transform: translate(-50%, -50%) scale(1.05) rotate(0deg);<br>opacity: 0;<br>}<br>100% {<br>transform: translate(-50%, -50%) scale(0) rotate(-45deg);<br>opacity: 0.25;<br>}<br>}</p><h1>小程序实现效果</h1><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/WqGP8w.png" alt="WqGP8w"><br>可以改为html实现，原理是一样的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;小程序如何实现炫酷背景&lt;/h1&gt;
&lt;p&gt;该背景主要是通过css让多个元素在不同时间旋转来实现，再给元素加边框和阴影即可。&lt;/p&gt;
&lt;p&gt;该实例虽然是小程序的，但是依然可是在html中实现，只需要将view改为ul&amp;gt;li标签无序列表即可。&lt;/p&gt;
&lt;figure cl
      
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="实战总结" scheme="http://yoursite.com/tags/%E5%AE%9E%E6%88%98%E6%80%BB%E7%BB%93/"/>
    
      <category term="源码分享" scheme="http://yoursite.com/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>css3实现炫酷卡片反转</title>
    <link href="http://yoursite.com/2019/02/24/HC/csscard/"/>
    <id>http://yoursite.com/2019/02/24/HC/csscard/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-27T16:40:21.996Z</updated>
    
    <content type="html"><![CDATA[<h1>css3实现流星雨动画</h1><h2 id="css3实现卡片动画">css3实现卡片动画</h2><p>超文本部分</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs cos">&lt;!--背景的源码--&gt;<br>&lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"night"</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"shooting_star"</span>&gt;&lt;/<span class="hljs-keyword">view</span>&gt;<br><br><span class="hljs-comment">//卡片部分的源码</span><br>  &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"card"</span>&gt;<br>    &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"all"</span>&gt;<br>      &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"center"</span>&gt;<br>        &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"explainer"</span>&gt;<br>          &lt;span&gt;戳我一下&lt;/span&gt;<br>        &lt;/<span class="hljs-keyword">view</span>&gt;<br>        &lt;<span class="hljs-keyword">view</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">"text"</span>&gt;交个朋友吧：<br>        &lt;!-- &lt;<span class="hljs-keyword">view</span>&gt;blog:💻Jony.city&lt;/<span class="hljs-keyword">view</span>&gt; --&gt;<br>        &lt;<span class="hljs-keyword">view</span>&gt;QQ:😝<span class="hljs-number">1070474647</span>&lt;/<span class="hljs-keyword">view</span>&gt;<br>        &lt;<span class="hljs-keyword">view</span>&gt;Weibo:🔍Jony呗&lt;/<span class="hljs-keyword">view</span>&gt;<br>        &lt;<span class="hljs-keyword">view</span>&gt;GitHub：🐱JonyGot&lt;/<span class="hljs-keyword">view</span>&gt;<br>        &lt;/<span class="hljs-keyword">view</span>&gt;<br>      &lt;/<span class="hljs-keyword">view</span>&gt;<br>    &lt;/<span class="hljs-keyword">view</span>&gt;<br>  &lt;/<span class="hljs-keyword">view</span>&gt;<br><br><br>&lt;/<span class="hljs-keyword">view</span>&gt;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">css</span>部分<br><span class="hljs-selector-tag">page</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">radial-gradient</span>(ellipse at bottom, #<span class="hljs-number">1</span>b2735 <span class="hljs-number">0%</span>, #<span class="hljs-number">090</span>a0f <span class="hljs-number">100%</span>);<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-comment">/* overflow: hidden; */</span><br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">'Anton'</span>, sans-serif;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">align-items</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.night</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">rotateZ</span>(<span class="hljs-number">45deg</span>);<br>          <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateZ</span>(<span class="hljs-number">45deg</span>);<br>  <span class="hljs-comment">/* -webkit-animation: sky 200000ms linear infinite;</span><br><span class="hljs-comment">          animation: sky 200000ms linear infinite; */</span><br>&#125;<br><br><span class="hljs-selector-class">.shooting_star</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">2px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(-<span class="hljs-number">45deg</span>, #<span class="hljs-number">5</span>f91ff, rgba(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>));<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">999px</span>;<br>  <span class="hljs-attribute">-webkit-filter</span>: <span class="hljs-built_in">drop-shadow</span>(<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">6px</span> #<span class="hljs-number">699</span>bff);<br>          <span class="hljs-attribute">filter</span>: <span class="hljs-built_in">drop-shadow</span>(<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">6px</span> #<span class="hljs-number">699</span>bff);<br>  <span class="hljs-attribute">-webkit-animation</span>: tail <span class="hljs-number">3000ms</span> ease-in-out infinite, shooting <span class="hljs-number">3000ms</span> ease-in-out infinite;<br>          <span class="hljs-attribute">animation</span>: tail <span class="hljs-number">3000ms</span> ease-in-out infinite, shooting <span class="hljs-number">3000ms</span> ease-in-out infinite;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">''</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">1px</span>);<br>  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">2px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(-<span class="hljs-number">45deg</span>, rgba(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>), <span class="hljs-number">#5f91ff</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>));<br>  <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">50%</span>) <span class="hljs-built_in">rotateZ</span>(<span class="hljs-number">45deg</span>);<br>          <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">50%</span>) <span class="hljs-built_in">rotateZ</span>(<span class="hljs-number">45deg</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">-webkit-animation</span>: shining <span class="hljs-number">3000ms</span> ease-in-out infinite;<br>          <span class="hljs-attribute">animation</span>: shining <span class="hljs-number">3000ms</span> ease-in-out infinite;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">50%</span>) <span class="hljs-built_in">rotateZ</span>(-<span class="hljs-number">45deg</span>);<br>          <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">50%</span>) <span class="hljs-built_in">rotateZ</span>(-<span class="hljs-number">45deg</span>);<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">185px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">150px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">8971ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">8971ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(1)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(1)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(1)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">8971ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">8971ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(2)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">50px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">179px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">9256ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">9256ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(2)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(2)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(2)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">9256ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">9256ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(3)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - -<span class="hljs-number">146px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">135px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">8700ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">8700ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(3)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(3)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(3)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">8700ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">8700ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(4)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - -<span class="hljs-number">77px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">157px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">3147ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">3147ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(4)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(4)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(4)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">3147ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">3147ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(5)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - -<span class="hljs-number">183px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">8px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">6588ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">6588ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(5)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(5)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(5)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">6588ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">6588ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(6)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - -<span class="hljs-number">29px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">195px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">8009ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">8009ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(6)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(6)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(6)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">8009ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">8009ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(7)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">95px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">69px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">5420ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">5420ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(7)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(7)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(7)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">5420ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">5420ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(8)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - -<span class="hljs-number">59px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">70px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">9378ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">9378ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(8)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(8)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(8)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">9378ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">9378ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(9)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">76px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">238px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">2845ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">2845ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(9)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(9)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(9)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">2845ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">2845ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(10)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">83px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">6px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">5205ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">5205ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(10)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(10)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(10)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">5205ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">5205ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(11)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - -<span class="hljs-number">137px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">267px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">808ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">808ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(11)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(11)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(11)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">808ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">808ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(12)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">12px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">8px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">2406ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">2406ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(12)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(12)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(12)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">2406ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">2406ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(13)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">148px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">47px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">7566ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">7566ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(13)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(13)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(13)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">7566ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">7566ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(14)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - -<span class="hljs-number">28px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">75px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">7634ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">7634ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(14)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(14)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(14)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">7634ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">7634ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(15)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - -<span class="hljs-number">37px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">203px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">7743ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">7743ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(15)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(15)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(15)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">7743ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">7743ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(16)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">41px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">256px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">2888ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">2888ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(16)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(16)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(16)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">2888ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">2888ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(17)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - -<span class="hljs-number">35px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">121px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">5864ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">5864ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(17)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(17)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(17)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">5864ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">5864ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(18)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">73px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">225px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">7883ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">7883ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(18)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(18)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(18)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">7883ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">7883ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(19)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - -<span class="hljs-number">69px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">47px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">3339ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">3339ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(19)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(19)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(19)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">3339ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">3339ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(20)</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">162px</span>);<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">129px</span>);<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">7963ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">7963ms</span>;<br>&#125;<br><span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(20)</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(20)</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.shooting_star</span><span class="hljs-selector-pseudo">:nth-child(20)</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">-webkit-animation-delay</span>: <span class="hljs-number">7963ms</span>;<br>          <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">7963ms</span>;<br>&#125;<br><br><span class="hljs-keyword">@-webkit-keyframes</span> tail &#123;<br>  0% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  &#125;<br>  30% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>  &#125;<br>  100% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> tail &#123;<br>  0% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  &#125;<br>  30% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>  &#125;<br>  100% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@-webkit-keyframes</span> shining &#123;<br>  0% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  &#125;<br>  50% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;<br>  &#125;<br>  100% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@keyframes</span> shining &#123;<br>  0% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  &#125;<br>  50% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;<br>  &#125;<br>  100% &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@-webkit-keyframes</span> shooting &#123;<br>  0% &#123;<br>    <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">0</span>);<br>            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">0</span>);<br>  &#125;<br>  100% &#123;<br>    <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">300px</span>);<br>            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">300px</span>);<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@keyframes</span> shooting &#123;<br>  0% &#123;<br>    <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">0</span>);<br>            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">0</span>);<br>  &#125;<br>  100% &#123;<br>    <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">300px</span>);<br>            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">300px</span>);<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@-webkit-keyframes</span> sky &#123;<br>  0% &#123;<br>    <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">45deg</span>);<br>            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">45deg</span>);<br>  &#125;<br>  100% &#123;<br>    <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">405deg</span>);<br>            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">405deg</span>);<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@keyframes</span> sky &#123;<br>  0% &#123;<br>    <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">45deg</span>);<br>            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">45deg</span>);<br>  &#125;<br>  100% &#123;<br>    <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">405deg</span>);<br>            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">405deg</span>);<br>  &#125;<br>&#125;<br><br><br><span class="hljs-comment">/* 试试水 */</span><br><span class="hljs-selector-class">.card</span> &#123;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">'Raleway'</span>, sans-serif;<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">radial-gradient</span>(circle at center, #<span class="hljs-number">899</span>Dc4, #<span class="hljs-number">495</span>D84);<br>  <span class="hljs-attribute">background-size</span>: cover;<br>  <span class="hljs-attribute">background-repeat</span>: no-repeat;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">radial-gradient</span>(ellipse at bottom, #<span class="hljs-number">1</span>b2735, #<span class="hljs-number">090</span>a0f);<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">300</span>;<br>&#125;<br><br><span class="hljs-selector-class">.all</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">-webkit-perspective</span>: <span class="hljs-number">10px</span>;<br>          <span class="hljs-attribute">perspective</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">perspective</span>(<span class="hljs-number">300px</span>) <span class="hljs-built_in">rotateX</span>(<span class="hljs-number">20deg</span>);<br>          <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">perspective</span>(<span class="hljs-number">300px</span>) <span class="hljs-built_in">rotateX</span>(<span class="hljs-number">20deg</span>);<br>  <span class="hljs-attribute">will-change</span>: perspective;<br>  <span class="hljs-attribute">-webkit-perspective-origin</span>: center center;<br>          <span class="hljs-attribute">perspective-origin</span>: center center;<br>  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">1.3s</span> ease-out;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">-webkit-transform-style</span>: preserve-<span class="hljs-number">3</span>d;<br>          <span class="hljs-attribute">transform-style</span>: preserve-<span class="hljs-number">3</span>d;<br>&#125;<br><br><span class="hljs-selector-class">.all</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">-webkit-perspective</span>: <span class="hljs-number">1000px</span>;<br>          <span class="hljs-attribute">perspective</span>: <span class="hljs-number">1000px</span>;<br>  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">1.3s</span> ease-in;<br>  <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">perspective</span>(<span class="hljs-number">10000px</span>) <span class="hljs-built_in">rotateX</span>(<span class="hljs-number">0deg</span>);<br>          <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">perspective</span>(<span class="hljs-number">10000px</span>) <span class="hljs-built_in">rotateX</span>(<span class="hljs-number">0deg</span>);<br>&#125;<br><span class="hljs-selector-class">.all</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.text</span> &#123;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-selector-class">.all</span><span class="hljs-selector-pseudo">:hover</span> &gt; <span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">transition-delay</span>: <span class="hljs-number">0s</span>;<br>&#125;<br><span class="hljs-selector-class">.all</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.explainer</span> &#123;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br> <span class="hljs-selector-class">.center</span>&#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;<br>  <span class="hljs-attribute">-webkit-transform-style</span>: preserve-<span class="hljs-number">3</span>d;<br>          <span class="hljs-attribute">transform-style</span>: preserve-<span class="hljs-number">3</span>d;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid <span class="hljs-built_in">rgb</span>(<span class="hljs-number">252</span>, <span class="hljs-number">205</span>, <span class="hljs-number">78</span>);<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.4</span>);<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span> ease;<br>  <span class="hljs-attribute">transition-delay</span>: <span class="hljs-number">1s</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">background-position</span>: center center;<br>  <span class="hljs-attribute">background-size</span>: contain;<br>  <span class="hljs-attribute">background-repeat</span>: no-repeat;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">34</span>, <span class="hljs-number">58</span>, <span class="hljs-number">99</span>);<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  <span class="hljs-attribute">background-blend-mode</span>: color-burn;<br>&#125;<br> <span class="hljs-selector-class">.center</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-comment">/* box-shadow: 0 0 30px 10px rgba(100, 100, 255, 0.6); */</span><br>   <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">30px</span> <span class="hljs-number">10px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">71</span>, <span class="hljs-number">240</span>, <span class="hljs-number">20</span>, <span class="hljs-number">0.6</span>);<br>   <span class="hljs-comment">/* background-image: url(cloud://showquan-mn2sh.7368-showquan-mn2sh-1301439647/WechatIMG19.jpeg); */</span><br>  <span class="hljs-comment">/* background-color: #ccf; */</span><br>&#125;<br><br><span class="hljs-selector-class">.text</span> &#123;<br>  <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">30px</span>);<br>          <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">30px</span>);<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span> ease;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">30px</span>;<br>  <span class="hljs-attribute">will-change</span>: transform;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">252</span>, <span class="hljs-number">205</span>, <span class="hljs-number">78</span>);<br>  <span class="hljs-attribute">margin-top</span>:-<span class="hljs-number">50px</span>; <br>  <span class="hljs-comment">/* text-shadow: 0 0 5px rgba(100, 100, 255, 0.6); */</span><br>&#125;<br><br><span class="hljs-selector-class">.lefter</span> &#123;<br>  <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">translateX</span>(-<span class="hljs-number">60px</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">50px</span>) <span class="hljs-built_in">rotateY</span>(-<span class="hljs-number">10deg</span>);<br>          <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(-<span class="hljs-number">60px</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">50px</span>) <span class="hljs-built_in">rotateY</span>(-<span class="hljs-number">10deg</span>);<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(img/organization-<span class="hljs-number">512</span>.png);<br>&#125;<br><br><span class="hljs-selector-class">.left</span> &#123;<br>  <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">translateX</span>(-<span class="hljs-number">30px</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">25px</span>) <span class="hljs-built_in">rotateY</span>(-<span class="hljs-number">5deg</span>);<br>          <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(-<span class="hljs-number">30px</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">25px</span>) <span class="hljs-built_in">rotateY</span>(-<span class="hljs-number">5deg</span>);<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(img/creative_draw-<span class="hljs-number">512</span>.png);<br>&#125;<br><br><span class="hljs-selector-class">.center</span> &#123;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">rotateZ</span>(-<span class="hljs-number">45deg</span>);<br>          <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateZ</span>(-<span class="hljs-number">45deg</span>);<br>&#125;<br><br><span class="hljs-selector-class">.right</span> &#123;<br>  <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">30px</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">25px</span>) <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">5deg</span>);<br>          <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">30px</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">25px</span>) <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">5deg</span>);<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(img/cloud_weather-<span class="hljs-number">512</span>.png);<br>&#125;<br><br><span class="hljs-selector-class">.righter</span> &#123;<br>  <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">60px</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">50px</span>) <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">10deg</span>);<br>          <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">60px</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">50px</span>) <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">10deg</span>);<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(img/search-<span class="hljs-number">512</span>.png);<br>&#125;<br><br><span class="hljs-selector-class">.explainer</span> &#123;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">300</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2rem</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">252</span>, <span class="hljs-number">205</span>, <span class="hljs-number">78</span>);<br>  <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">6s</span> ease;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#303050</span>;<br>  <span class="hljs-comment">/* background-image: radial-gradient(circle at center top, #cce, #33a); */</span><br>  <span class="hljs-attribute">background-image</span>: <br>  <span class="hljs-built_in">radial-gradient</span>(circle at center top, rgb(<span class="hljs-number">99</span>, <span class="hljs-number">100</span>, <span class="hljs-number">105</span>), <span class="hljs-built_in">rgb</span>(<span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">80</span>));<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.8</span>);<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">align-items</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.ref</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#000</span>;<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">linear-gradient</span>(to bottom, #d80, #c00);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">3px</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">7px</span> <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">right</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">text-decoration</span>: none;<br>  <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">3px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.4</span>);<br>&#125;<br><span class="hljs-selector-class">.ref</span><span class="hljs-selector-pseudo">::first-letter</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1>点击前效果</h1><p>（颜色显示有点不正常，图床上传处理原因）<br><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/1oRsnv.png" alt="1oRsnv"></p><h1>点击后效果（动画打开）</h1><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/1QCzP7.png" alt="1QCzP7"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;css3实现流星雨动画&lt;/h1&gt;
&lt;h2 id=&quot;css3实现卡片动画&quot;&gt;css3实现卡片动画&lt;/h2&gt;
&lt;p&gt;超文本部分&lt;/p&gt;
&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="小程序开发" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="实战总结" scheme="http://yoursite.com/tags/%E5%AE%9E%E6%88%98%E6%80%BB%E7%BB%93/"/>
    
      <category term="源码分享" scheme="http://yoursite.com/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>HTML的DOM是什么</title>
    <link href="http://yoursite.com/2019/02/24/HC/dom/"/>
    <id>http://yoursite.com/2019/02/24/HC/dom/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-27T16:41:18.740Z</updated>
    
    <content type="html"><![CDATA[<h1>DOM是什么？</h1><p>HTML DOM (Document Object Model) 译为文档对象模型，是 HTML 和 XML 文档的编程接口,定义了访问和操作 HTML 文档的标准方法。它允许程序和脚本动态地访问和更新文档的内容、结构和样式。</p><h2 id="W3C-DOM-标准被分为-3-个不同的部分：">W3C DOM 标准被分为 3 个不同的部分：</h2><ul><li>核心 DOM - 针对任何结构化文档的标准模型</li><li>XML DOM - 针对 XML 文档的标准模型</li><li>HTML DOM - 针对 HTML 文档的标准模型</li></ul><h2 id="DOM-以树结构表达-HTML-文档。">DOM 以树结构表达 HTML 文档。</h2><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/6QPLSN.png" alt="DOM树结构 "><br>你可以这么理解，HTML中每一个元素甚至包括文档本身都是节点，而且这有点类似数据结构的树形结构，根节点、子节点、父节点都类似。</p><ul><li>整个文档是一个文档节点</li><li>每个 HTML 元素是元素节点</li><li>HTML 元素内的文本是文本节点</li><li>每个 HTML 属性是属性节点</li><li>注释是注释节点</li></ul><h1>为什么要知道DOM？</h1><h2 id="HTML和HTML-DOM">HTML和HTML DOM</h2><p>HTML使用标记标签来描述网页，Web浏览器的作用是读取HTML文档，并以网页的形式显示出它们。浏览器不会显示HTML标签，而是使用标签来解释页面的内容。</p><p>通过HTML DOM我们编程语言才能访问和修改HTML元素，DOM为我们提供了很多方法，之前学习js的时候，老师没有提到DOM的概念，所以使用了很多DOM的方法而不知晓其原因。其实这些js的方法都是通过DOM来实现的。</p><div class="note warning"><p>HTML是标记语言，而DOM为其他语言提供改变HTML的接口</p></div><p>DOM将HTML文档拆分成树状结构供其他语言操作。</p><h2 id="HTML-DOM-对象-方法和属性">HTML DOM 对象 - 方法和属性</h2><h3 id="常用的-HTML-DOM-方法：">常用的 HTML DOM 方法：</h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>getElementById()</td><td>返回带有指定 ID 的元素。</td></tr><tr><td>getElementsByTagName()</td><td>返回包含带有指定标签名称的所有元素的节点列表（集合/节点数组）。</td></tr><tr><td>getElementsByClassName()</td><td>返回包含带有指定类名的所有元素的节点列表。</td></tr><tr><td>appendChild()</td><td>把新的子节点添加到指定节点。</td></tr><tr><td>removeChild()</td><td>删除子节点。</td></tr><tr><td>replaceChild()</td><td>替换子节点。</td></tr><tr><td>insertBefore()</td><td>在指定的子节点前面插入新的子节点。</td></tr><tr><td>createAttribute()</td><td>创建属性节点。</td></tr><tr><td>createElement()</td><td>创建元素节点。</td></tr><tr><td>createTextNode()</td><td>创建文本节点。</td></tr><tr><td>getAttribute()</td><td>返回指定的属性值。</td></tr><tr><td>setAttribute()</td><td>把指定属性设置或修改为指定的值。</td></tr></tbody></table><h3 id="常用的-HTML-DOM-属性：">常用的 HTML DOM 属性：</h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>innerHTML</td><td>节点（元素）的文本值</td></tr><tr><td>parentNode</td><td>节点（元素）的父节点</td></tr><tr><td>childNodes</td><td>节点（元素）的子节点</td></tr><tr><td>attributes</td><td>节点（元素）的属性节点</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;DOM是什么？&lt;/h1&gt;
&lt;p&gt;HTML DOM (Document Object Model) 译为文档对象模型，是 HTML 和 XML 文档的编程接口,定义了访问和操作 HTML 文档的标准方法。它允许程序和脚本动态地访问和更新文档的内容、结构和样式。&lt;/p&gt;
&lt;h
      
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>css3动画总结</title>
    <link href="http://yoursite.com/2019/02/24/HC/cssdh/"/>
    <id>http://yoursite.com/2019/02/24/HC/cssdh/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-27T16:41:04.188Z</updated>
    
    <content type="html"><![CDATA[<h1>如何使用动画</h1><h2 id="使用简写属性把-animation-绑定到一个块元素：">使用简写属性把 animation 绑定到一个块元素：</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span><br>&#123;<br>    <span class="hljs-attribute">animation</span>:mymove <span class="hljs-number">5s</span> infinite;<br>    <span class="hljs-attribute">-webkit-animation</span>:mymove <span class="hljs-number">5s</span> infinite; <span class="hljs-comment">/* Safari 和 Chrome */</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="animation语法">animation语法</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali">animation: name duration timing-function delay iteration-count direction<span class="hljs-built_in"> fill-mode </span>play-state;<br></code></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>animation-name</td><td>指定要绑定到选择器的关键帧的名称</td></tr><tr><td>animation-duration</td><td>动画指定需要多少秒或毫秒完成</td></tr><tr><td>animation-timing-function</td><td>设置动画将如何完成一个周期</td></tr><tr><td>animation-delay</td><td>设置动画在启动前的延迟间隔。</td></tr><tr><td>animation-iteration-count</td><td>定义动画的播放次数。</td></tr><tr><td>animation-direction</td><td>指定是否应该轮流反向播放动画。</td></tr><tr><td>animation-fill-mode</td><td>规定当动画不播放时（当动画完成时，或当动画有一个延迟未开始播放时），要应用到元素的样式。</td></tr><tr><td>animation-play-state</td><td>指定动画是否正在运行或已暂停。</td></tr><tr><td>initial</td><td>设置属性为其默认值。 阅读关于 initial的介绍。</td></tr><tr><td>inherit</td><td>从父元素继承属性。 阅读关于 initinherital的介绍。</td></tr></tbody></table><h2 id="animation-timing-function属性">animation-timing-function属性</h2><p>这个属性经常会被用到,animation-timing-function指定动画将如何完成一个周期。<br>速度曲线定义动画从一套 CSS 样式变为另一套所用的时间。速度曲线用于使变化更为平滑。</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>linear</td><td>动画从头到尾的速度是相同的。</td></tr><tr><td>ease</td><td>默认。动画以低速开始，然后加快，在结束前变慢。</td></tr><tr><td>ease-in</td><td>动画以低速开始。</td></tr><tr><td>ease-out</td><td>动画以低速结束。</td></tr><tr><td>ease-in-out</td><td>动画以低速开始和结束。</td></tr><tr><td>cubic-bezier(n,n,n,n)</td><td>在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。</td></tr></tbody></table><p>可以在自己的编辑器复制代码体验一下这五种属性的差距</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"utf-8"</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span> <br>div<br>&#123;<br><span class="css"><span class="hljs-selector-tag">width</span><span class="hljs-selector-pseudo">:100px</span>;</span><br><span class="css"><span class="hljs-selector-tag">height</span><span class="hljs-selector-pseudo">:50px</span>;</span><br><span class="css"><span class="hljs-selector-tag">background</span><span class="hljs-selector-pseudo">:red</span>;</span><br><span class="css"><span class="hljs-selector-tag">color</span><span class="hljs-selector-pseudo">:white</span>;</span><br><span class="css"><span class="hljs-selector-tag">font-weight</span><span class="hljs-selector-pseudo">:bold</span>;</span><br><span class="css"><span class="hljs-selector-tag">position</span><span class="hljs-selector-pseudo">:relative</span>;</span><br><span class="css"><span class="hljs-selector-tag">animation</span><span class="hljs-selector-pseudo">:mymove</span> 5<span class="hljs-selector-tag">s</span> <span class="hljs-selector-tag">infinite</span>;</span><br><span class="css"><span class="hljs-selector-tag">-webkit-animation</span><span class="hljs-selector-pseudo">:mymove</span> 5<span class="hljs-selector-tag">s</span> <span class="hljs-selector-tag">infinite</span>; <span class="hljs-comment">/* Safari and Chrome */</span></span><br>&#125;<br><br><span class="css"><span class="hljs-selector-id">#div1</span> &#123;<span class="hljs-attribute">animation-timing-function</span>:linear;&#125;</span><br><span class="css"><span class="hljs-selector-id">#div2</span> &#123;<span class="hljs-attribute">animation-timing-function</span>:ease;&#125;</span><br><span class="css"><span class="hljs-selector-id">#div3</span> &#123;<span class="hljs-attribute">animation-timing-function</span>:ease-in;&#125;</span><br><span class="css"><span class="hljs-selector-id">#div4</span> &#123;<span class="hljs-attribute">animation-timing-function</span>:ease-out;&#125;</span><br><span class="css"><span class="hljs-selector-id">#div5</span> &#123;<span class="hljs-attribute">animation-timing-function</span>:ease-in-out;&#125;</span><br><br><span class="css"><span class="hljs-comment">/* Safari and Chrome: */</span></span><br><span class="css"><span class="hljs-selector-id">#div1</span> &#123;<span class="hljs-attribute">-webkit-animation-timing-function</span>:linear;&#125;</span><br><span class="css"><span class="hljs-selector-id">#div2</span> &#123;<span class="hljs-attribute">-webkit-animation-timing-function</span>:ease;&#125;</span><br><span class="css"><span class="hljs-selector-id">#div3</span> &#123;<span class="hljs-attribute">-webkit-animation-timing-function</span>:ease-in;&#125;</span><br><span class="css"><span class="hljs-selector-id">#div4</span> &#123;<span class="hljs-attribute">-webkit-animation-timing-function</span>:ease-out;&#125;</span><br><span class="css"><span class="hljs-selector-id">#div5</span> &#123;<span class="hljs-attribute">-webkit-animation-timing-function</span>:ease-in-out;&#125;</span><br><br><span class="css"><span class="hljs-keyword">@keyframes</span> mymove</span><br>&#123;<br><span class="css"><span class="hljs-selector-tag">from</span> &#123;<span class="hljs-attribute">left</span>:<span class="hljs-number">0px</span>;&#125;</span><br><span class="css"><span class="hljs-selector-tag">to</span> &#123;<span class="hljs-attribute">left</span>:<span class="hljs-number">300px</span>;&#125;</span><br>&#125;<br><br><span class="css"><span class="hljs-keyword">@-webkit-keyframes</span> mymove /* Safari <span class="hljs-keyword">and</span> Chrome */</span><br>&#123;<br><span class="css"><span class="hljs-selector-tag">from</span> &#123;<span class="hljs-attribute">left</span>:<span class="hljs-number">0px</span>;&#125;</span><br><span class="css"><span class="hljs-selector-tag">to</span> &#123;<span class="hljs-attribute">left</span>:<span class="hljs-number">300px</span>;&#125;</span><br>&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>注意:<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> animation-timing-funtion属性不兼容 Internet Explorer 9以及更早版本的浏览器<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"div1"</span>&gt;</span>linear<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"div2"</span>&gt;</span>ease<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"div3"</span>&gt;</span>ease-in<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"div4"</span>&gt;</span>ease-out<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"div5"</span>&gt;</span>ease-in-out<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1>css动画一般和Transform配合使用（不仅限于此）</h1><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>matrix(n,n,n,n,n,n)</td><td>定义 2D 转换，使用六个值的矩阵。</td></tr><tr><td>translate(x,y)</td><td>定义 2D 转换，沿着 X 和 Y 轴移动元素。</td></tr><tr><td>translateX(n)</td><td>定义 2D 转换，沿着 X 轴移动元素。</td></tr><tr><td>translateY(n)</td><td>定义 2D 转换，沿着 Y 轴移动元素。</td></tr><tr><td>scale(x,y)</td><td>定义 2D 缩放转换，改变元素的宽度和高度。</td></tr><tr><td>scaleX(n)</td><td>定义 2D 缩放转换，改变元素的宽度。</td></tr><tr><td>scaleY(n)</td><td>定义 2D 缩放转换，改变元素的高度。</td></tr><tr><td>rotate(angle)</td><td>定义 2D 旋转，在参数中规定角度。</td></tr><tr><td>skew(x-angle,y-angle)</td><td>定义 2D 倾斜转换，沿着 X 和 Y 轴。</td></tr><tr><td>skewX(angle)</td><td>定义 2D 倾斜转换，沿着 X 轴。</td></tr><tr><td>skewY(angle)</td><td>定义 2D 倾斜转换，沿着 Y 轴。</td></tr></tbody></table><h1>CSS3 过渡</h1><p>通过 CSS3，我们可以在不使用 Flash 动画或 JavaScript 的情况下，当元素从一种样式变换为另一种样式时为元素添加效果。<br>请把鼠标移动到下面的元素上</p><h2 id="首先规定需要绑定在哪个元素上并设置时长">首先规定需要绑定在哪个元素上并设置时长</h2><p>需要在需要设置的元素规定动画属性和时长</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-comment">//单项改变</span><br>div<br>&#123;<br>transition: width <span class="hljs-number">2</span>s;<span class="hljs-comment">//宽度，时长两秒</span><br>-moz-transition: width <span class="hljs-number">2</span>s;<span class="hljs-comment">/* Firefox 4 */</span><br>-webkit-transition: width <span class="hljs-number">2</span>s;<span class="hljs-comment">/* Safari 和 Chrome */</span><br>-o-transition: width <span class="hljs-number">2</span>s;<span class="hljs-comment">/* Opera */</span><br><span class="hljs-comment">//多项改变</span><br>div<br>&#123;<br>transition: width <span class="hljs-number">2</span>s, height <span class="hljs-number">2</span>s, transform <span class="hljs-number">2</span>s;<br>-moz-transition: width <span class="hljs-number">2</span>s, height <span class="hljs-number">2</span>s, -moz-transform <span class="hljs-number">2</span>s;<br>-webkit-transition: width <span class="hljs-number">2</span>s, height <span class="hljs-number">2</span>s, -webkit-transform <span class="hljs-number">2</span>s;<br>-o-transition: width <span class="hljs-number">2</span>s, height <span class="hljs-number">2</span>s,-o-transform <span class="hljs-number">2</span>s;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>然后规定当鼠标指针悬浮于&lt; div&gt;元素上时：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:hover</span><br>&#123;<br><span class="hljs-attribute">width</span>:<span class="hljs-number">300px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1>以上</h1><p>在前端开发中，使用css3的动画，会减少js脚本的编写，很多动画用css来做就可以了。使用css3动画可以实现很多好看的动画，你感兴趣可以移步<a href="">css实现炫酷背景</a>和<a href="">css实现卡片</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;如何使用动画&lt;/h1&gt;
&lt;h2 id=&quot;使用简写属性把-animation-绑定到一个块元素：&quot;&gt;使用简写属性把 animation 绑定到一个块元素：&lt;/h2&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>css3特殊技巧总结</title>
    <link href="http://yoursite.com/2019/02/24/HC/cssjq/"/>
    <id>http://yoursite.com/2019/02/24/HC/cssjq/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-27T16:40:58.340Z</updated>
    
    <content type="html"><![CDATA[<h1>css3不常见但是很实用的技巧总结</h1><p>在前端制作时，难免会遇到很多特殊问题或者小技巧的使用，在这里总结一些，如果你有更好的或者我说的不完善的地方，可以给我留言。</p><h2 id="如何不浮动让li横向排列">如何不浮动让li横向排列</h2><p>之前一直以为只有浮动才能让li横向排列，但是之前在开发中遇到一个问题，由于浮动框不在文档的普通流中，所以文档的普通流中的块框表现得就像浮动框不存在一样。这样只有清除浮动来解决，而且有时候浮动会带来意想不到的错误，如果包含框太窄，无法容纳水平排列的三个浮动元素，那么其它浮动块向下移动，直到有足够的空间。如果浮动元素的高度不同，那么当它们向下移动时可能被其它浮动元素“卡住”，那么怎么解决这个问题呢：</p><div class="note danger"><p>给li设置display：inline-block属性</p></div><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-tag">li</span>&#123;<br>    <span class="hljs-attribute">display</span>：inline-block;<br>    <span class="hljs-attribute">width</span>:<span class="hljs-number">30%</span><br>    marge:<span class="hljs-number">10px</span> <span class="hljs-number">15px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="css渐变色">css渐变色</h2><p>我个人非常喜欢渐变色，它可以摈弃原有单一颜色的单调，还可以增强视觉冲击，在开发时经常使用渐变色。</p><h3 id="两种颜色的渐变色（注意浏览器兼容问题）">两种颜色的渐变色（注意浏览器兼容问题）</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">background</span>: <span class="hljs-number">#3494E6</span>;  <span class="hljs-comment">/* fallback for old browsers */</span><br><span class="hljs-attribute">background</span>: -webkit-linear-gradient(to right, <span class="hljs-number">#EC6EAD</span>, <span class="hljs-number">#3494E6</span>);  <span class="hljs-comment">/* Chrome 10-25, Safari 5.1-6 */</span><br><span class="hljs-attribute">background</span>: linear-gradient(to right, <span class="hljs-number">#EC6EAD</span>, <span class="hljs-number">#3494E6</span>); <span class="hljs-comment">/* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */</span><br></code></pre></td></tr></table></figure><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/t1B4Lm.png" alt="t1B4Lm"></p><h3 id="两种及以上颜色的渐变色（注意浏览器兼容问题）">两种及以上颜色的渐变色（注意浏览器兼容问题）</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">background</span>: <span class="hljs-number">#1E9600</span>;  <span class="hljs-comment">/* fallback for old browsers */</span><br><span class="hljs-attribute">background</span>: -webkit-linear-gradient(to right, <span class="hljs-number">#FF0000</span>, <span class="hljs-number">#FFF200</span>, <span class="hljs-number">#1E9600</span>);  <span class="hljs-comment">/* Chrome 10-25, Safari 5.1-6 */</span><br><span class="hljs-attribute">background</span>: linear-gradient(to right, <span class="hljs-number">#FF0000</span>, <span class="hljs-number">#FFF200</span>, <span class="hljs-number">#1E9600</span>); <span class="hljs-comment">/* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */</span><br></code></pre></td></tr></table></figure><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/VrFvY4.png" alt="VrFvY4"></p><h3 id="渐变角度">渐变角度</h3><p>第一个例子还可以向下渐变，</p><div class="note success"><p>只需要将to right改为to bottom</p></div>  <p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/95bJv5.png" alt="95bJv5"></p><p>如果需要其他角度，只需要将to right改为（顺时针角度）deg即可<br>如</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">background</span>: -webkit-linear-gradient(<span class="hljs-number">45deg</span>, <span class="hljs-number">#FF0000</span>, <span class="hljs-number">#FFF200</span>, <span class="hljs-number">#1E9600</span>);<br></code></pre></td></tr></table></figure><h3 id="渐变透明">渐变透明</h3><p>这样可以增加图片展示的高级感，或者说神秘感<br>把颜色换成rgba显示就可以<em><strong>rgba(0,0,0,.9)</strong></em> 透明度90%</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">background: linear-gradient(<span class="hljs-number">0</span>deg,rgba(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">.9</span>),rgba(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">70</span>%),rgba(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>%));<br></code></pre></td></tr></table></figure><p><img src="http://jony-blog.oss-cn-beijing.aliyuncs.com/blog/I1GPZt.png" alt="I1GPZt"></p><p>在这张图片上增加了一个渐变的黑色透明。</p><h2 id="粘性定位">粘性定位</h2><p>元素在屏幕显示区域内时表示为relative，当快要滚出显示屏的区域时，表示为fixed，适合那种随着 屏幕滚动 固定在上方或者下方的导航条。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">position</span>: <span class="hljs-selector-tag">sticky</span>;<br></code></pre></td></tr></table></figure><h2 id="文字超出省略">文字超出省略</h2><h3 id="单行文字">单行文字</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.textEllipsis</span>&#123;<br>     <span class="hljs-attribute">overflow</span>: hidden;<br>    <span class="hljs-attribute">white-space</span>: nowrap;<br>    <span class="hljs-attribute">text-overflow</span>: ellipsis; <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="多行文字">多行文字</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.textEllipse</span>&#123;<br>    <span class="hljs-attribute">text-overflow</span>: -o-ellipsis-lastline;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>    <span class="hljs-attribute">text-overflow</span>: ellipsis;<br>    <span class="hljs-attribute">display</span>: -webkit-box;<br>    <span class="hljs-attribute">-webkit-line-clamp</span>: <span class="hljs-number">2</span>;<br>    <span class="hljs-attribute">-webkit-box-orient</span>: vertical; <br>&#125;<br>## <span class="hljs-selector-tag">CSS</span> <span class="hljs-selector-tag">all</span> 属性(<span class="hljs-selector-tag">css3</span>特有)<br>修改所有元素或其父元素的属性为初始值：<br></code></pre></td></tr></table></figure><p>div {<br>background-color: yellow;<br>color: red;<br>all: initial;<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain"><br><br></code></pre></td></tr></table></figure><h2 id="伪类选择器">伪类选择器</h2><p>例如在.tag-cloud a前面加一个emoji表情</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.tag-cloud</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">"✊ "</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>给链接定义不同状态</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:link</span> &#123;<span class="hljs-attribute">color</span>: <span class="hljs-number">#FF0000</span>&#125;<br><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:visited</span> &#123;<span class="hljs-attribute">color</span>: <span class="hljs-number">#00FF00</span>&#125;<br><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<span class="hljs-attribute">color</span>: <span class="hljs-number">#FF00FF</span>&#125;<br><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:active</span> &#123;<span class="hljs-attribute">color</span>: <span class="hljs-number">#0000FF</span>&#125;<br></code></pre></td></tr></table></figure><div class="noto warning"><p>在 CSS 定义中，a:hover 必须位于 a:link 和 a:visited 之后，这样才能生效  <p>在 CSS 定义中，a:active 必须位于 a:hover 之后，这样才能生效！</p></p></div>伪类参考表<table><thead><tr><th>属性</th><th>描述</th><th>CSS</th></tr></thead><tbody><tr><td>:active</td><td>向被激活的元素添加样式。</td><td>1</td></tr><tr><td>:focus</td><td>向拥有键盘输入焦点的元素添加样式。</td><td>2</td></tr><tr><td>:hover</td><td>当鼠标悬浮在元素上方时，向元素添加样式。</td><td>1</td></tr><tr><td>:link</td><td>向未被访问的链接添加样式。</td><td>1</td></tr><tr><td>:visited</td><td>向已被访问的链接添加样式。</td><td>1</td></tr><tr><td>:first-child</td><td>向元素的第一个子元素添加样式。</td><td>2</td></tr><tr><td>:lang</td><td>向带有指定 lang 属性的元素添加样式。</td><td>2</td></tr></tbody></table><h2 id="table自动合并边框">table自动合并边框</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">table</span>&#123;<br>    <span class="hljs-attribute">border-collapse</span>: collapse;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="计算属性">计算属性</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">width: calc(<span class="hljs-number">100</span>%/<span class="hljs-number">3</span> - <span class="hljs-number">5</span>px) <span class="hljs-comment">//兼容性良好</span><br></code></pre></td></tr></table></figure><h2 id="首行锁进">首行锁进</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">text-indent</span>:<span class="hljs-number">2em</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;css3不常见但是很实用的技巧总结&lt;/h1&gt;
&lt;p&gt;在前端制作时，难免会遇到很多特殊问题或者小技巧的使用，在这里总结一些，如果你有更好的或者我说的不完善的地方，可以给我留言。&lt;/p&gt;
&lt;h2 id=&quot;如何不浮动让li横向排列&quot;&gt;如何不浮动让li横向排列&lt;/h2&gt;
&lt;p&gt;之
      
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅的使用emmet-css篇</title>
    <link href="http://yoursite.com/2019/02/24/HC/emmetCSS/"/>
    <id>http://yoursite.com/2019/02/24/HC/emmetCSS/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-27T16:41:38.900Z</updated>
    
    <content type="html"><![CDATA[<h1>如何优雅的使用emmet-css篇</h1><p>如果你想知道如何使用emmet编辑html，请打开<a href="">如何优雅的使用emmet-html篇</a></p><h2 id="emmet语法-css">emmet语法-css</h2><p>CSS3的新功能为Web开发人员带来了福气：只需几行代码，我们就可以完成几年前几乎不可能的事情。Emmet的CSS解析器具有一个不错的功能，可以极大地改善您的CSS3体验。每次在CSS属性或其缩写前面加上连字符时，Emmet都会自动创建该属性的供应商前缀副本。例如，-bdrs缩写将扩展为</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs maxima">-webkit-<span class="hljs-built_in">border</span>-<span class="hljs-built_in">radius</span>: ;<br>-moz-<span class="hljs-built_in">border</span>-<span class="hljs-built_in">radius</span>: ;<br><span class="hljs-built_in">border</span>-<span class="hljs-built_in">radius</span>: ;<br></code></pre></td></tr></table></figure><h2 id="怎么运行的？">怎么运行的？</h2><p>每当你在前面加上连字符的情况下扩展缩写时，Emmet都会删除连字符，并snippets.json在其余的缩写中查找代码段定义。例如，对于-bdrs缩写，它将查找bdrs定义。snippet.json具有以下定义：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">"bdrs"</span>: <span class="hljs-string">"border-radius:|;"</span><br></code></pre></td></tr></table></figure><p>这意味着bdrs将扩展为border-radius<br>CSS解析器找出应输出的属性名称后，它将在特殊的供应商目录中查找它的出现。这些目录被定义为首css.{vendor}Properties选项中的条目，并且可以被用户覆盖。{vendor}是浏览器的供应商前缀，例如webkit，moz等等。</p><p>如果在这些目录中的任何一个中都找到扩展属性，则将使用其供应商前缀来产生前缀属性。否则，将使用所有前缀。</p><p>例如，在border-radius中定义了属性css.webkitProperties，css.mozProperties因此该属性将与webkit和moz前缀一起输出。在另一方面，foo物业没有定义，因此它会与所有可用的前缀输出，当你在任何地方展开-foo简称：webkit，moz，ms和o。使用最近实现的尖端CSS属性特别有用。</p><p>想象一下，谷歌浏览器super-foo昨天实现了属性，而你想在项目中使用它。您可以扩展-super-foo缩写，从而产生以下代码段：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs groovy">-webkit-<span class="hljs-keyword">super</span>-<span class="hljs-string">foo:</span> ;<br>-moz-<span class="hljs-keyword">super</span>-<span class="hljs-string">foo:</span> ;<br>-ms-<span class="hljs-keyword">super</span>-<span class="hljs-string">foo:</span> ;<br>-o-<span class="hljs-keyword">super</span>-<span class="hljs-string">foo:</span> ;<br><span class="hljs-keyword">super</span>-<span class="hljs-string">foo:</span> ;<br></code></pre></td></tr></table></figure><h2 id="Gradients">Gradients</h2><p>必须使用不同的供应商前缀多次重复长渐变定义。另外，如果要覆盖所有受梯度支持的浏览器，则必须使用三种不同的符号：旧的Webkit，当前支持的（linear-gradient(top, …)）和W3C建议的（linear-gradient(to bottom, …)）。</p><p>通常，用户更喜欢使用第三方GUI来生成渐变定义，但是您可以在编辑器中更快地完成相同的操作。</p><h2 id="模糊搜索（重点！）">模糊搜索（重点！）</h2><p>如果查看Cheat Sheet，您会发现有太多CSS片段需要记住。另外，出于逻辑上的分离，其中一些可能会有些冗长。</p><p>为了使CSS编写更加容易，Emmet 对CSS代码段实施了模糊搜索逻辑：每次输入未知缩写时，Emmet都会尝试查找最接近的代码段定义。</p><p>例如，除了写ov:h（overflow: hidden;）缩写外，您还可以编写ov-h，ovh甚至oh。您可以在下面的文本编辑器中进行模糊搜索。试着找到尽可能多的变化愈好（用Tab键展开缩写）的bxz:cb，ovx:h和pos:a片段。</p><h3 id="例如：">例如：</h3><p>你想输入background-image: url();<br>在编辑器输入</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">bgi</span><br></code></pre></td></tr></table></figure><p>按下TAB</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-attribute">background-image</span>: url(<span class="hljs-string"></span>);<br></code></pre></td></tr></table></figure><h1>以上</h1><p>看完不代表你回了，一定要自己动手多练习，熟练了之后，你的代码速度会有很大的飞跃。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;如何优雅的使用emmet-css篇&lt;/h1&gt;
&lt;p&gt;如果你想知道如何使用emmet编辑html，请打开&lt;a href=&quot;&quot;&gt;如何优雅的使用emmet-html篇&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;emmet语法-css&quot;&gt;emmet语法-css&lt;/h2&gt;
&lt;p&gt;CSS3的新
      
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="实战总结" scheme="http://yoursite.com/tags/%E5%AE%9E%E6%88%98%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅的使用emmet-html篇</title>
    <link href="http://yoursite.com/2019/02/24/HC/emmetHTML/"/>
    <id>http://yoursite.com/2019/02/24/HC/emmetHTML/</id>
    <published>2019-02-24T01:02:13.000Z</published>
    <updated>2020-03-27T16:41:50.661Z</updated>
    
    <content type="html"><![CDATA[<h1>如何优雅的使用emmet</h1><h2 id="什么是emmet">什么是emmet</h2><p>这篇文章将教你如何用emmet快速编写html代码和css代码<br>官方解释：</p><blockquote><p>Emmet uses syntax similar to CSS selectors for describing elements’ positions inside generated tree and elements’ attributes.<br>翻译：<br>Emmet使用类似于CSS选择器的语法来描述元素在生成的树中的位置和元素的属性。</p></blockquote><p>通俗来说，emmet为前端开发提供了快速编辑能力，能大大提高代码书写，只需要敲一行代码就能生成你想要的完整HTML结构，</p><h2 id="举个栗子">举个栗子</h2><p>在html编辑器输入如下内容</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">div</span>.box1&gt;<span class="hljs-selector-tag">p</span>.title+<span class="hljs-selector-tag">ul</span>.list&gt;<span class="hljs-selector-tag">li</span>.list_li$*<span class="hljs-number">5</span>&#123;我是第$个&#125;^<span class="hljs-selector-tag">div</span>.box2&gt;ul&gt;li<br></code></pre></td></tr></table></figure><p>按下TAB键，就发现出现了一个DOM数</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">&lt;div <span class="hljs-keyword">class</span>="<span class="hljs-symbol">box1</span>"&gt;<br>    &lt;<span class="hljs-symbol">p</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">title</span>"&gt;&lt;/<span class="hljs-symbol">p</span>&gt;<br>    &lt;<span class="hljs-symbol">ul</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">list</span>"&gt;<br>        &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">list_li1</span>"&gt;我是第<span class="hljs-symbol">1</span>个&lt;/<span class="hljs-symbol">li</span>&gt;<br>        &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">list_li2</span>"&gt;我是第<span class="hljs-symbol">2</span>个&lt;/<span class="hljs-symbol">li</span>&gt;<br>        &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">list_li3</span>"&gt;我是第<span class="hljs-symbol">3</span>个&lt;/<span class="hljs-symbol">li</span>&gt;<br>        &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">list_li4</span>"&gt;我是第<span class="hljs-symbol">4</span>个&lt;/<span class="hljs-symbol">li</span>&gt;<br>        &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">list_li5</span>"&gt;我是第<span class="hljs-symbol">5</span>个&lt;/<span class="hljs-symbol">li</span>&gt;<br>    &lt;/<span class="hljs-symbol">ul</span>&gt;<br>    &lt;<span class="hljs-symbol">div</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">box2</span>"&gt;<br>        &lt;<span class="hljs-symbol">ul</span>&gt;<br>            &lt;<span class="hljs-symbol">li</span>&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>            &lt;<span class="hljs-symbol">li</span>&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>            &lt;<span class="hljs-symbol">li</span>&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>        &lt;/<span class="hljs-symbol">ul</span>&gt;<br>    &lt;/<span class="hljs-symbol">div</span>&gt;<br>&lt;/<span class="hljs-symbol">div</span>&gt;<br></code></pre></td></tr></table></figure><p>是不是瞬间理解了并且发现了他的强大之处。</p><h2 id="emmet语法">emmet语法</h2><h3 id="元素">元素</h3><div class="note warning"><p>可以使用元素的名字，如div或p以生成HTML标签。Emmet没有一组预定义的可用标签名称，您可以编写任何单词并将其转换为标签：</p></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">div → <span class="hljs-tag">&lt; <span class="hljs-attr">div</span>&gt;</span><span class="hljs-tag">&lt;/ <span class="hljs-attr">div</span>&gt;</span><br>foo → <span class="hljs-tag">&lt; <span class="hljs-attr">foo</span>&gt;</span><span class="hljs-tag">&lt; /<span class="hljs-attr">foo</span>&gt;</span><br></code></pre></td></tr></table></figure><p>等其他元素。</p><h3 id="Child">Child: &gt;</h3><div class="note warning"><p>您可以使用>运算符将元素相互嵌套：</p></div> <figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">div</span>&gt;ul&gt;li<br></code></pre></td></tr></table></figure><p>按下TAB</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;div&gt;</span><br>    <span class="hljs-section">&lt;ul&gt;</span><br>        <span class="hljs-section">&lt;li&gt;</span><span class="hljs-section">&lt;/li&gt;</span><br>    <span class="hljs-section">&lt;/ul&gt;</span><br><span class="hljs-section">&lt;/div&gt;</span><br></code></pre></td></tr></table></figure><h3 id="兄弟：">兄弟： +</h3><div class="note warning"><p>使用+运算符将元素彼此放置在同一DOM层级上：</p></div><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">div</span>+p+bq<br></code></pre></td></tr></table></figure><p>按下TAB</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;div&gt;</span><span class="hljs-section">&lt;/div&gt;</span><br><span class="hljs-section">&lt;p&gt;</span><span class="hljs-section">&lt;/p&gt;</span><br><span class="hljs-section">&lt;blockquote&gt;</span><span class="hljs-section">&lt;/blockquote&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Climb-up">Climb-up: ^</h3><div class="note warning"><p>使用>运算符，您将向下生成树，所有同级元素的位置将针对最深的元素进行解析</p></div>例如：如果你使用<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">div</span>+<span class="hljs-keyword">div</span>&gt;p&gt;span+em<br></code></pre></td></tr></table></figure><p>按下TAB</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;div&gt;</span><span class="hljs-section">&lt;/div&gt;</span><br><span class="hljs-section">&lt;div&gt;</span><br>    <span class="hljs-section">&lt;p&gt;</span><span class="hljs-section">&lt;span&gt;</span><span class="hljs-section">&lt;/span&gt;</span><span class="hljs-section">&lt;em&gt;</span><span class="hljs-section">&lt;/em&gt;</span><span class="hljs-section">&lt;/p&gt;</span><br><span class="hljs-section">&lt;/div&gt;</span><br></code></pre></td></tr></table></figure><div class="note warning"><p>如果使用^运算符，您可以在DOM树上爬上一层，并更改应显示以下元素的上下文：请和上面的例子做对比</p></div><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">div</span>+<span class="hljs-keyword">div</span>&gt;p&gt;span+em^bq<br></code></pre></td></tr></table></figure><p>按下TAB</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;div&gt;</span><span class="hljs-section">&lt;/div&gt;</span><br><span class="hljs-section">&lt;div&gt;</span><br>    <span class="hljs-section">&lt;p&gt;</span><span class="hljs-section">&lt;span&gt;</span><span class="hljs-section">&lt;/span&gt;</span><span class="hljs-section">&lt;em&gt;</span><span class="hljs-section">&lt;/em&gt;</span><span class="hljs-section">&lt;/p&gt;</span><br>    <span class="hljs-section">&lt;blockquote&gt;</span><span class="hljs-section">&lt;/blockquote&gt;</span><br><span class="hljs-section">&lt;/div&gt;</span><br></code></pre></td></tr></table></figure><div class="note warning"><p>可以根据需要使用任意多个^运算符，每个运算符将上移一个级别：</p></div><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">div</span>+<span class="hljs-keyword">div</span>&gt;p&gt;span+em^^^bq<br></code></pre></td></tr></table></figure><p>按下TAB</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;div&gt;</span><span class="hljs-section">&lt;/div&gt;</span><br><span class="hljs-section">&lt;div&gt;</span><br>    <span class="hljs-section">&lt;p&gt;</span><span class="hljs-section">&lt;span&gt;</span><span class="hljs-section">&lt;/span&gt;</span><span class="hljs-section">&lt;em&gt;</span><span class="hljs-section">&lt;/em&gt;</span><span class="hljs-section">&lt;/p&gt;</span><br><span class="hljs-section">&lt;/div&gt;</span><br><span class="hljs-section">&lt;blockquote&gt;</span><span class="hljs-section">&lt;/blockquote&gt;</span><br></code></pre></td></tr></table></figure><h3 id="乘法：">乘法： *</h3><div class="note warning"><p>使用*运算符，您可以定义元素应输出多少次：</p></div><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">ul&gt;li*<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure>按下TAB<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;ul&gt;</span><br>    <span class="hljs-section">&lt;li&gt;</span><span class="hljs-section">&lt;/li&gt;</span><br>    <span class="hljs-section">&lt;li&gt;</span><span class="hljs-section">&lt;/li&gt;</span><br>    <span class="hljs-section">&lt;li&gt;</span><span class="hljs-section">&lt;/li&gt;</span><br>    <span class="hljs-section">&lt;li&gt;</span><span class="hljs-section">&lt;/li&gt;</span><br>    <span class="hljs-section">&lt;li&gt;</span><span class="hljs-section">&lt;/li&gt;</span><br><span class="hljs-section">&lt;/ul&gt;</span><br></code></pre></td></tr></table></figure><h3 id="分组：">分组： ()</h3><div class="note warning"><p>Emmets的高级用户使用括号将复杂缩写的子树分组：</p></div><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">div&gt;<span class="hljs-comment">(header&gt;ul&gt;li*2&gt;a)</span>+footer&gt;p<br></code></pre></td></tr></table></figure>按下TAB<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">""</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">""</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><div class="note warning"><p>如果使用浏览器的DOM，则可以将组视为文档片段：每个组均包含缩写子树，并且以下所有与第一个元素相同的元素都插入到该元素中。您可以将组彼此嵌套，并使用乘法*运算符将它们组合在一起：</p></div><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">(<span class="hljs-keyword">div</span>&gt;<span class="hljs-built_in">dl</span>&gt;(<span class="hljs-built_in">dt</span>+<span class="hljs-built_in">dd</span>)*<span class="hljs-number">3</span>)+footer&gt;p<br></code></pre></td></tr></table></figure><p>按下TAB</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;div&gt;</span><br>    <span class="hljs-section">&lt;dl&gt;</span><br>        <span class="hljs-section">&lt;dt&gt;</span><span class="hljs-section">&lt;/dt&gt;</span><br>        <span class="hljs-section">&lt;dd&gt;</span><span class="hljs-section">&lt;/dd&gt;</span><br>        <span class="hljs-section">&lt;dt&gt;</span><span class="hljs-section">&lt;/dt&gt;</span><br>        <span class="hljs-section">&lt;dd&gt;</span><span class="hljs-section">&lt;/dd&gt;</span><br>        <span class="hljs-section">&lt;dt&gt;</span><span class="hljs-section">&lt;/dt&gt;</span><br>        <span class="hljs-section">&lt;dd&gt;</span><span class="hljs-section">&lt;/dd&gt;</span><br>    <span class="hljs-section">&lt;/dl&gt;</span><br><span class="hljs-section">&lt;/div&gt;</span><br><span class="hljs-section">&lt;footer&gt;</span><br>    <span class="hljs-section">&lt;p&gt;</span><span class="hljs-section">&lt;/p&gt;</span><br><span class="hljs-section">&lt;/footer&gt;</span><br></code></pre></td></tr></table></figure><h2 id="属性运算符">属性运算符</h2><h3 id="ID和CLASS">ID和CLASS</h3><div class="note warning"><p>在CSS中，您可以使用elem#id和elem.class表示法来访问具有指定id或class属性的元素。在Emmet中，可以使用完全相同的语法将这些属性添加到指定的元素</p></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#header</span>+<span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.page</span>+<span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#footer</span><span class="hljs-selector-class">.class1</span><span class="hljs-selector-class">.class2</span><span class="hljs-selector-class">.class3</span><br></code></pre></td></tr></table></figure>按下TAB<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">"header"</span>&gt;&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"page"</span>&gt;&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">"footer"</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"class1 class2 class3"</span>&gt;&lt;/<span class="hljs-keyword">div</span>&gt;<br></code></pre></td></tr></table></figure><h3 id="自定义属性">自定义属性</h3><div class="note warning"><p>您可以使用[attr]符号（如CSS中一样）向元素添加自定义属性：</p></div><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">td[<span class="hljs-attribute">title</span>=<span class="hljs-string">"Hello world!"</span> <span class="hljs-attribute">colspan</span>=3]<br></code></pre></td></tr></table></figure>按下TAB<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;td <span class="hljs-attribute">title</span>=<span class="hljs-string">"Hello world!"</span> <span class="hljs-attribute">colspan</span>=<span class="hljs-string">"3"</span>&gt;&lt;/td&gt;<br></code></pre></td></tr></table></figure><h3 id="项目编号：">项目编号： $</h3><div class="note warning"><p>随着乘法*运算符可以重复的元素，但是$你可以编号它们。将$运算符放在元素名称，属性名称或属性值内，以输出当前重复元素的数量：</p></div><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">ul&gt;li.item$*<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure>按下TAB<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">&lt;ul&gt;<br>    &lt;li <span class="hljs-keyword">class</span>="<span class="hljs-symbol">item1</span>"&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>    &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">item2</span>"&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>    &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">item3</span>"&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>    &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">item4</span>"&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>    &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">item5</span>"&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>&lt;/<span class="hljs-symbol">ul</span>&gt;<br></code></pre></td></tr></table></figure><div class="note warning"><p>您可以$连续使用多个以零填充数字：</p></div><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">ul&gt;li.item<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>*<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure>按下TAB<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">&lt;ul&gt;<br>    &lt;li <span class="hljs-keyword">class</span>="<span class="hljs-symbol">item001</span>"&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>    &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">item002</span>"&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>    &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">item003</span>"&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>    &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">item004</span>"&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>    &lt;<span class="hljs-symbol">li</span> <span class="hljs-symbol">class</span>="<span class="hljs-symbol">item005</span>"&gt;&lt;/<span class="hljs-symbol">li</span>&gt;<br>&lt;/<span class="hljs-symbol">ul</span>&gt;<br></code></pre></td></tr></table></figure><p>以上基本上已经将常用的基本htm部分语法总结提炼了出来，多加练习体会即可快速上手。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;如何优雅的使用emmet&lt;/h1&gt;
&lt;h2 id=&quot;什么是emmet&quot;&gt;什么是emmet&lt;/h2&gt;
&lt;p&gt;这篇文章将教你如何用emmet快速编写html代码和css代码&lt;br&gt;
官方解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Emmet uses syntax sim
      
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="实战总结" scheme="http://yoursite.com/tags/%E5%AE%9E%E6%88%98%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
